ARM GAS  /tmp/ccmGA17u.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.6.2 20121016 (release) [ARM/embedded-4_6-
  15              	@	compiled by GNU C version 4.3.6, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./inc -I ./cmsis/core -I ./cmsis/device
  18              	@ -iprefix /opt/gcc-arm-none-eabi-4_6-2012q4/bin/../lib/gcc/arm-none-eabi/4.6.2/
  19              	@ -isysroot /opt/gcc-arm-none-eabi-4_6-2012q4/bin/../arm-none-eabi
  20              	@ -MD src/main.d -MF .dep/main.o.d -MP -MQ src/main.o -D__USES_INITFINI__
  21              	@ -D STM32F10X_MD -D RUN_FROM_FLASH=0 -D VECT_TAB_SRAM src/main.c -mthumb
  22              	@ -mcpu=cortex-m3 -mfloat-abi=soft -mfpu=fpv4-sp-d16
  23              	@ -auxbase-strip src/main.o -gdwarf-2 -O0 -Wall -Wstrict-prototypes
  24              	@ -fverbose-asm
  25              	@ options enabled:  -fauto-inc-dec -fbranch-count-reg -fcommon
  26              	@ -fdelete-null-pointer-checks -fdwarf2-cfi-asm -fearly-inlining
  27              	@ -feliminate-unused-debug-types -ffunction-cse -fgcse-lm -fident
  28              	@ -finline-functions-called-once -fira-share-save-slots
  29              	@ -fira-share-spill-slots -fivopts -fkeep-static-consts
  30              	@ -fleading-underscore -fmath-errno -fmerge-debug-strings
  31              	@ -fmove-loop-invariants -fpeephole -fprefetch-loop-arrays
  32              	@ -freg-struct-return -fsched-critical-path-heuristic
  33              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  34              	@ -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
  35              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fshow-column
  36              	@ -fsigned-zeros -fsplit-ivs-in-unroller -fstrict-volatile-bitfields
  37              	@ -ftrapping-math -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
  38              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  39              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-pta -ftree-reassoc
  40              	@ -ftree-scev-cprop -ftree-slp-vectorize -ftree-vect-loop-version
  41              	@ -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss
  42              	@ -mfix-cortex-m3-ldrd -mlittle-endian -msched-prolog -mthumb
  43              	@ -munaligned-access
  44              	
  45              		.text
  46              	.Ltext0:
  47              	@ Compiler executable checksum: 5375e73801c740cfc46b0c557cf2e4d9
  48              	
  49              		.cfi_sections	.debug_frame
  50              		.section	.rodata
  51              		.align	2
  52              		.type	d, %object
  53              		.size	d, 4
  54              	d:
  55 0000 07000000 		.word	7
  56              		.align	2
  57              		.type	fd, %object
ARM GAS  /tmp/ccmGA17u.s 			page 2


  58              		.size	fd, 4
  59              	fd:
  60 0004 9A99A940 		.word	1084856730
  61              		.data
  62              		.align	2
  63              		.type	dd, %object
  64              		.size	dd, 4
  65              	dd:
  66 0000 08000000 		.word	8
  67              		.bss
  68              		.align	2
  69              	must_zero_after_startup:
  70 0000 00000000 		.space	4
  71              		.global	__aeabi_fadd
  72              		.text
  73              		.align	2
  74              		.global	main
  75              		.thumb
  76              		.thumb_func
  77              		.type	main, %function
  78              	main:
  79              	.LFB0:
  80              		.file 1 "src/main.c"
   1:src/main.c    **** /****************************************************************************
   2:src/main.c    **** *  Copyright (c) 2011-2012 by Michael Fischer. All rights reserved.
   3:src/main.c    **** *
   4:src/main.c    **** *  Redistribution and use in source and binary forms, with or without 
   5:src/main.c    **** *  modification, are permitted provided that the following conditions 
   6:src/main.c    **** *  are met:
   7:src/main.c    **** *  
   8:src/main.c    **** *  1. Redistributions of source code must retain the above copyright 
   9:src/main.c    **** *     notice, this list of conditions and the following disclaimer.
  10:src/main.c    **** *  2. Redistributions in binary form must reproduce the above copyright
  11:src/main.c    **** *     notice, this list of conditions and the following disclaimer in the 
  12:src/main.c    **** *     documentation and/or other materials provided with the distribution.
  13:src/main.c    **** *  3. Neither the name of the author nor the names of its contributors may 
  14:src/main.c    **** *     be used to endorse or promote products derived from this software 
  15:src/main.c    **** *     without specific prior written permission.
  16:src/main.c    **** *
  17:src/main.c    **** *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
  18:src/main.c    **** *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
  19:src/main.c    **** *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
  20:src/main.c    **** *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL 
  21:src/main.c    **** *  THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
  22:src/main.c    **** *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
  23:src/main.c    **** *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS 
  24:src/main.c    **** *  OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED 
  25:src/main.c    **** *  AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, 
  26:src/main.c    **** *  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF 
  27:src/main.c    **** *  THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
  28:src/main.c    **** *  SUCH DAMAGE.
  29:src/main.c    **** *
  30:src/main.c    **** ****************************************************************************
  31:src/main.c    **** *  History:
  32:src/main.c    **** *
  33:src/main.c    **** *  09.04.2011  mifi  First Version
  34:src/main.c    **** *  13.06.2012  mifi  Added "check" with must_zero_after_startup
ARM GAS  /tmp/ccmGA17u.s 			page 3


  35:src/main.c    **** ****************************************************************************/
  36:src/main.c    **** #define __MAIN_C__
  37:src/main.c    **** 
  38:src/main.c    **** #include <stdint.h>
  39:src/main.c    **** 
  40:src/main.c    **** /*=========================================================================*/
  41:src/main.c    **** /*  DEFINE: All Structures and Common Constants                            */
  42:src/main.c    **** /*=========================================================================*/
  43:src/main.c    **** 
  44:src/main.c    **** /*=========================================================================*/
  45:src/main.c    **** /*  DEFINE: Prototypes                                                     */
  46:src/main.c    **** /*=========================================================================*/
  47:src/main.c    **** 
  48:src/main.c    **** /*=========================================================================*/
  49:src/main.c    **** /*  DEFINE: Definition of all local Data                                   */
  50:src/main.c    **** /*=========================================================================*/
  51:src/main.c    **** static const uint32_t d  = 7;
  52:src/main.c    **** static const float    fd = 5.3f;
  53:src/main.c    **** static uint32_t       dd = 8;
  54:src/main.c    **** 
  55:src/main.c    **** /* Must be 0, BSS must be cleared by the startup */
  56:src/main.c    **** static uint32_t       must_zero_after_startup;
  57:src/main.c    **** 
  58:src/main.c    **** /*=========================================================================*/
  59:src/main.c    **** /*  DEFINE: All code exported                                              */
  60:src/main.c    **** /*=========================================================================*/
  61:src/main.c    **** 
  62:src/main.c    **** /***************************************************************************/
  63:src/main.c    **** /*  main                                                                   */
  64:src/main.c    **** /***************************************************************************/
  65:src/main.c    **** int main (void)
  66:src/main.c    **** {
  81              		.loc 1 66 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 24
  84              		@ frame_needed = 1, uses_anonymous_args = 0
  85 0000 80B5     		push	{r7, lr}	@
  86              	.LCFI0:
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 14, -4
  89              		.cfi_offset 7, -8
  90 0002 86B0     		sub	sp, sp, #24	@,,
  91              	.LCFI1:
  92              		.cfi_def_cfa_offset 32
  93 0004 00AF     		add	r7, sp, #0	@,,
  94              	.LCFI2:
  95              		.cfi_def_cfa_register 7
  67:src/main.c    ****   uint32_t a  = 1;
  96              		.loc 1 67 0
  97 0006 4FF00103 		mov	r3, #1	@ tmp141,
  98 000a 7B61     		str	r3, [r7, #20]	@ tmp141, a
  68:src/main.c    ****   uint32_t b  = 2;
  99              		.loc 1 68 0
 100 000c 4FF00203 		mov	r3, #2	@ tmp142,
 101 0010 3B61     		str	r3, [r7, #16]	@ tmp142, b
  69:src/main.c    ****   uint32_t c  = 0;
 102              		.loc 1 69 0
ARM GAS  /tmp/ccmGA17u.s 			page 4


 103 0012 4FF00003 		mov	r3, #0	@ tmp143,
 104 0016 7B60     		str	r3, [r7, #4]	@ tmp143, c
  70:src/main.c    ****   float    fa = 1.3f;
 105              		.loc 1 70 0
 106 0018 234B     		ldr	r3, .L4	@ float	@ tmp144,
 107 001a FB60     		str	r3, [r7, #12]	@ float	@ tmp144, fa
  71:src/main.c    ****   float    fb = 2.7f;
 108              		.loc 1 71 0
 109 001c 234B     		ldr	r3, .L4+4	@ float	@ tmp145,
 110 001e BB60     		str	r3, [r7, #8]	@ float	@ tmp145, fb
  72:src/main.c    ****   float    fc = 3.9f;
 111              		.loc 1 72 0
 112 0020 234B     		ldr	r3, .L4+8	@ float	@ tmp146,
 113 0022 3B60     		str	r3, [r7, #0]	@ float	@ tmp146, fc
  73:src/main.c    ****   
  74:src/main.c    ****   fa = fa + fd;
 114              		.loc 1 74 0
 115 0024 40F20003 		movw	r3, #:lower16:fd	@ tmp147,
 116 0028 C0F20003 		movt	r3, #:upper16:fd	@ tmp147,
 117 002c 1B68     		ldr	r3, [r3, #0]	@ float	@ fd.0, fd
 118 002e F868     		ldr	r0, [r7, #12]	@ float	@, fa
 119 0030 1946     		mov	r1, r3	@, fd.0
 120 0032 FFF7FEFF 		bl	__aeabi_fadd	@
 121 0036 0346     		mov	r3, r0	@ tmp148,
 122 0038 FB60     		str	r3, [r7, #12]	@ float	@ tmp148, fa
  75:src/main.c    ****   a  = a + d + dd + must_zero_after_startup;
 123              		.loc 1 75 0
 124 003a 40F20003 		movw	r3, #:lower16:d	@ tmp149,
 125 003e C0F20003 		movt	r3, #:upper16:d	@ tmp149,
 126 0042 1A68     		ldr	r2, [r3, #0]	@ d.1, d
 127 0044 7B69     		ldr	r3, [r7, #20]	@ tmp150, a
 128 0046 D218     		adds	r2, r2, r3	@ D.4713, d.1, tmp150
 129 0048 40F20003 		movw	r3, #:lower16:dd	@ tmp151,
 130 004c C0F20003 		movt	r3, #:upper16:dd	@ tmp151,
 131 0050 1B68     		ldr	r3, [r3, #0]	@ dd.2, dd
 132 0052 D218     		adds	r2, r2, r3	@ D.4715, D.4713, dd.2
 133 0054 40F20003 		movw	r3, #:lower16:must_zero_after_startup	@ tmp152,
 134 0058 C0F20003 		movt	r3, #:upper16:must_zero_after_startup	@ tmp152,
 135 005c 1B68     		ldr	r3, [r3, #0]	@ must_zero_after_startup.3, must_zero_after_startup
 136 005e D318     		adds	r3, r2, r3	@ tmp153, D.4715, must_zero_after_startup.3
 137 0060 7B61     		str	r3, [r7, #20]	@ tmp153, a
  76:src/main.c    ****   
  77:src/main.c    ****   /* A must be 16 here */
  78:src/main.c    ****   if (a != 16) while (1) {};
 138              		.loc 1 78 0
 139 0062 7B69     		ldr	r3, [r7, #20]	@ tmp154, a
 140 0064 102B     		cmp	r3, #16	@ tmp154,
 141 0066 00D0     		beq	.L2	@,
 142              	.L3:
 143              		.loc 1 78 0 is_stmt 0 discriminator 1
 144 0068 FEE7     		b	.L3	@
 145              	.L2:
  79:src/main.c    ****     
  80:src/main.c    ****   while (1)
  81:src/main.c    ****   {
  82:src/main.c    ****     a++;
 146              		.loc 1 82 0 is_stmt 1 discriminator 1
ARM GAS  /tmp/ccmGA17u.s 			page 5


 147 006a 7B69     		ldr	r3, [r7, #20]	@ tmp155, a
 148 006c 03F10103 		add	r3, r3, #1	@ tmp156, tmp155,
 149 0070 7B61     		str	r3, [r7, #20]	@ tmp156, a
  83:src/main.c    ****     b++;
 150              		.loc 1 83 0 discriminator 1
 151 0072 3B69     		ldr	r3, [r7, #16]	@ tmp157, b
 152 0074 03F10103 		add	r3, r3, #1	@ tmp158, tmp157,
 153 0078 3B61     		str	r3, [r7, #16]	@ tmp158, b
  84:src/main.c    ****     c = a + b;
 154              		.loc 1 84 0 discriminator 1
 155 007a 7A69     		ldr	r2, [r7, #20]	@ tmp159, a
 156 007c 3B69     		ldr	r3, [r7, #16]	@ tmp160, b
 157 007e D318     		adds	r3, r2, r3	@ tmp161, tmp159, tmp160
 158 0080 7B60     		str	r3, [r7, #4]	@ tmp161, c
  85:src/main.c    ****     
  86:src/main.c    ****     fa = fa + 2.6f;
 159              		.loc 1 86 0 discriminator 1
 160 0082 F868     		ldr	r0, [r7, #12]	@ float	@, fa
 161 0084 0B49     		ldr	r1, .L4+12	@ float	@,
 162 0086 FFF7FEFF 		bl	__aeabi_fadd	@
 163 008a 0346     		mov	r3, r0	@ tmp162,
 164 008c FB60     		str	r3, [r7, #12]	@ float	@ tmp162, fa
  87:src/main.c    ****     fb = fb + 1.67f;
 165              		.loc 1 87 0 discriminator 1
 166 008e B868     		ldr	r0, [r7, #8]	@ float	@, fb
 167 0090 0949     		ldr	r1, .L4+16	@ float	@,
 168 0092 FFF7FEFF 		bl	__aeabi_fadd	@
 169 0096 0346     		mov	r3, r0	@ tmp163,
 170 0098 BB60     		str	r3, [r7, #8]	@ float	@ tmp163, fb
  88:src/main.c    ****     fc = fa + fb;
 171              		.loc 1 88 0 discriminator 1
 172 009a F868     		ldr	r0, [r7, #12]	@ float	@, fa
 173 009c B968     		ldr	r1, [r7, #8]	@ float	@, fb
 174 009e FFF7FEFF 		bl	__aeabi_fadd	@
 175 00a2 0346     		mov	r3, r0	@ tmp164,
 176 00a4 3B60     		str	r3, [r7, #0]	@ float	@ tmp164, fc
  89:src/main.c    ****   }
 177              		.loc 1 89 0 discriminator 1
 178 00a6 E0E7     		b	.L2	@
 179              	.L5:
 180              		.align	2
 181              	.L4:
 182 00a8 6666A63F 		.word	1067869798
 183 00ac CDCC2C40 		.word	1076677837
 184 00b0 9A997940 		.word	1081711002
 185 00b4 66662640 		.word	1076258406
 186 00b8 8FC2D53F 		.word	1070973583
 187              		.cfi_endproc
 188              	.LFE0:
 189              		.size	main, .-main
 190              	.Letext0:
 191              		.file 2 "/opt/gcc-arm-none-eabi-4_6-2012q4/bin/../lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none
 192              		.section	.debug_info,"",%progbits
 193              	.Ldebug_info0:
 194 0000 2D010000 		.4byte	0x12d
 195 0004 0200     		.2byte	0x2
 196 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  /tmp/ccmGA17u.s 			page 6


 197 000a 04       		.byte	0x4
 198 000b 01       		.uleb128 0x1
 199 000c 00000000 		.4byte	.LASF11
 200 0010 01       		.byte	0x1
 201 0011 19010000 		.4byte	.LASF12
 202 0015 87000000 		.4byte	.LASF13
 203 0019 00000000 		.4byte	.Ltext0
 204 001d BC000000 		.4byte	.Letext0
 205 0021 00000000 		.4byte	.Ldebug_line0
 206 0025 02       		.uleb128 0x2
 207 0026 01       		.byte	0x1
 208 0027 06       		.byte	0x6
 209 0028 40010000 		.4byte	.LASF0
 210 002c 02       		.uleb128 0x2
 211 002d 01       		.byte	0x1
 212 002e 08       		.byte	0x8
 213 002f 4F000000 		.4byte	.LASF1
 214 0033 02       		.uleb128 0x2
 215 0034 02       		.byte	0x2
 216 0035 05       		.byte	0x5
 217 0036 24010000 		.4byte	.LASF2
 218 003a 02       		.uleb128 0x2
 219 003b 02       		.byte	0x2
 220 003c 07       		.byte	0x7
 221 003d 6F000000 		.4byte	.LASF3
 222 0041 02       		.uleb128 0x2
 223 0042 04       		.byte	0x4
 224 0043 05       		.byte	0x5
 225 0044 37010000 		.4byte	.LASF4
 226 0048 03       		.uleb128 0x3
 227 0049 2E010000 		.4byte	.LASF14
 228 004d 02       		.byte	0x2
 229 004e 50       		.byte	0x50
 230 004f 53000000 		.4byte	0x53
 231 0053 02       		.uleb128 0x2
 232 0054 04       		.byte	0x4
 233 0055 07       		.byte	0x7
 234 0056 5D000000 		.4byte	.LASF5
 235 005a 02       		.uleb128 0x2
 236 005b 08       		.byte	0x8
 237 005c 05       		.byte	0x5
 238 005d 0B010000 		.4byte	.LASF6
 239 0061 02       		.uleb128 0x2
 240 0062 08       		.byte	0x8
 241 0063 07       		.byte	0x7
 242 0064 DC000000 		.4byte	.LASF7
 243 0068 04       		.uleb128 0x4
 244 0069 04       		.byte	0x4
 245 006a 05       		.byte	0x5
 246 006b 696E7400 		.ascii	"int\000"
 247 006f 02       		.uleb128 0x2
 248 0070 04       		.byte	0x4
 249 0071 07       		.byte	0x7
 250 0072 CF000000 		.4byte	.LASF8
 251 0076 05       		.uleb128 0x5
 252 0077 01       		.byte	0x1
 253 0078 82000000 		.4byte	.LASF15
ARM GAS  /tmp/ccmGA17u.s 			page 7


 254 007c 01       		.byte	0x1
 255 007d 41       		.byte	0x41
 256 007e 01       		.byte	0x1
 257 007f 68000000 		.4byte	0x68
 258 0083 00000000 		.4byte	.LFB0
 259 0087 BC000000 		.4byte	.LFE0
 260 008b 00000000 		.4byte	.LLST0
 261 008f DF000000 		.4byte	0xdf
 262 0093 06       		.uleb128 0x6
 263 0094 6100     		.ascii	"a\000"
 264 0096 01       		.byte	0x1
 265 0097 43       		.byte	0x43
 266 0098 48000000 		.4byte	0x48
 267 009c 02       		.byte	0x2
 268 009d 91       		.byte	0x91
 269 009e 74       		.sleb128 -12
 270 009f 06       		.uleb128 0x6
 271 00a0 6200     		.ascii	"b\000"
 272 00a2 01       		.byte	0x1
 273 00a3 44       		.byte	0x44
 274 00a4 48000000 		.4byte	0x48
 275 00a8 02       		.byte	0x2
 276 00a9 91       		.byte	0x91
 277 00aa 70       		.sleb128 -16
 278 00ab 06       		.uleb128 0x6
 279 00ac 6300     		.ascii	"c\000"
 280 00ae 01       		.byte	0x1
 281 00af 45       		.byte	0x45
 282 00b0 48000000 		.4byte	0x48
 283 00b4 02       		.byte	0x2
 284 00b5 91       		.byte	0x91
 285 00b6 64       		.sleb128 -28
 286 00b7 06       		.uleb128 0x6
 287 00b8 666100   		.ascii	"fa\000"
 288 00bb 01       		.byte	0x1
 289 00bc 46       		.byte	0x46
 290 00bd DF000000 		.4byte	0xdf
 291 00c1 02       		.byte	0x2
 292 00c2 91       		.byte	0x91
 293 00c3 6C       		.sleb128 -20
 294 00c4 06       		.uleb128 0x6
 295 00c5 666200   		.ascii	"fb\000"
 296 00c8 01       		.byte	0x1
 297 00c9 47       		.byte	0x47
 298 00ca DF000000 		.4byte	0xdf
 299 00ce 02       		.byte	0x2
 300 00cf 91       		.byte	0x91
 301 00d0 68       		.sleb128 -24
 302 00d1 06       		.uleb128 0x6
 303 00d2 666300   		.ascii	"fc\000"
 304 00d5 01       		.byte	0x1
 305 00d6 48       		.byte	0x48
 306 00d7 DF000000 		.4byte	0xdf
 307 00db 02       		.byte	0x2
 308 00dc 91       		.byte	0x91
 309 00dd 60       		.sleb128 -32
 310 00de 00       		.byte	0
ARM GAS  /tmp/ccmGA17u.s 			page 8


 311 00df 02       		.uleb128 0x2
 312 00e0 04       		.byte	0x4
 313 00e1 04       		.byte	0x4
 314 00e2 49000000 		.4byte	.LASF9
 315 00e6 06       		.uleb128 0x6
 316 00e7 6400     		.ascii	"d\000"
 317 00e9 01       		.byte	0x1
 318 00ea 33       		.byte	0x33
 319 00eb F5000000 		.4byte	0xf5
 320 00ef 05       		.byte	0x5
 321 00f0 03       		.byte	0x3
 322 00f1 00000000 		.4byte	d
 323 00f5 07       		.uleb128 0x7
 324 00f6 48000000 		.4byte	0x48
 325 00fa 06       		.uleb128 0x6
 326 00fb 666400   		.ascii	"fd\000"
 327 00fe 01       		.byte	0x1
 328 00ff 34       		.byte	0x34
 329 0100 0A010000 		.4byte	0x10a
 330 0104 05       		.byte	0x5
 331 0105 03       		.byte	0x3
 332 0106 04000000 		.4byte	fd
 333 010a 07       		.uleb128 0x7
 334 010b DF000000 		.4byte	0xdf
 335 010f 06       		.uleb128 0x6
 336 0110 646400   		.ascii	"dd\000"
 337 0113 01       		.byte	0x1
 338 0114 35       		.byte	0x35
 339 0115 48000000 		.4byte	0x48
 340 0119 05       		.byte	0x5
 341 011a 03       		.byte	0x3
 342 011b 00000000 		.4byte	dd
 343 011f 08       		.uleb128 0x8
 344 0120 F3000000 		.4byte	.LASF10
 345 0124 01       		.byte	0x1
 346 0125 38       		.byte	0x38
 347 0126 48000000 		.4byte	0x48
 348 012a 05       		.byte	0x5
 349 012b 03       		.byte	0x3
 350 012c 00000000 		.4byte	must_zero_after_startup
 351 0130 00       		.byte	0
 352              		.section	.debug_abbrev,"",%progbits
 353              	.Ldebug_abbrev0:
 354 0000 01       		.uleb128 0x1
 355 0001 11       		.uleb128 0x11
 356 0002 01       		.byte	0x1
 357 0003 25       		.uleb128 0x25
 358 0004 0E       		.uleb128 0xe
 359 0005 13       		.uleb128 0x13
 360 0006 0B       		.uleb128 0xb
 361 0007 03       		.uleb128 0x3
 362 0008 0E       		.uleb128 0xe
 363 0009 1B       		.uleb128 0x1b
 364 000a 0E       		.uleb128 0xe
 365 000b 11       		.uleb128 0x11
 366 000c 01       		.uleb128 0x1
 367 000d 12       		.uleb128 0x12
ARM GAS  /tmp/ccmGA17u.s 			page 9


 368 000e 01       		.uleb128 0x1
 369 000f 10       		.uleb128 0x10
 370 0010 06       		.uleb128 0x6
 371 0011 00       		.byte	0
 372 0012 00       		.byte	0
 373 0013 02       		.uleb128 0x2
 374 0014 24       		.uleb128 0x24
 375 0015 00       		.byte	0
 376 0016 0B       		.uleb128 0xb
 377 0017 0B       		.uleb128 0xb
 378 0018 3E       		.uleb128 0x3e
 379 0019 0B       		.uleb128 0xb
 380 001a 03       		.uleb128 0x3
 381 001b 0E       		.uleb128 0xe
 382 001c 00       		.byte	0
 383 001d 00       		.byte	0
 384 001e 03       		.uleb128 0x3
 385 001f 16       		.uleb128 0x16
 386 0020 00       		.byte	0
 387 0021 03       		.uleb128 0x3
 388 0022 0E       		.uleb128 0xe
 389 0023 3A       		.uleb128 0x3a
 390 0024 0B       		.uleb128 0xb
 391 0025 3B       		.uleb128 0x3b
 392 0026 0B       		.uleb128 0xb
 393 0027 49       		.uleb128 0x49
 394 0028 13       		.uleb128 0x13
 395 0029 00       		.byte	0
 396 002a 00       		.byte	0
 397 002b 04       		.uleb128 0x4
 398 002c 24       		.uleb128 0x24
 399 002d 00       		.byte	0
 400 002e 0B       		.uleb128 0xb
 401 002f 0B       		.uleb128 0xb
 402 0030 3E       		.uleb128 0x3e
 403 0031 0B       		.uleb128 0xb
 404 0032 03       		.uleb128 0x3
 405 0033 08       		.uleb128 0x8
 406 0034 00       		.byte	0
 407 0035 00       		.byte	0
 408 0036 05       		.uleb128 0x5
 409 0037 2E       		.uleb128 0x2e
 410 0038 01       		.byte	0x1
 411 0039 3F       		.uleb128 0x3f
 412 003a 0C       		.uleb128 0xc
 413 003b 03       		.uleb128 0x3
 414 003c 0E       		.uleb128 0xe
 415 003d 3A       		.uleb128 0x3a
 416 003e 0B       		.uleb128 0xb
 417 003f 3B       		.uleb128 0x3b
 418 0040 0B       		.uleb128 0xb
 419 0041 27       		.uleb128 0x27
 420 0042 0C       		.uleb128 0xc
 421 0043 49       		.uleb128 0x49
 422 0044 13       		.uleb128 0x13
 423 0045 11       		.uleb128 0x11
 424 0046 01       		.uleb128 0x1
ARM GAS  /tmp/ccmGA17u.s 			page 10


 425 0047 12       		.uleb128 0x12
 426 0048 01       		.uleb128 0x1
 427 0049 40       		.uleb128 0x40
 428 004a 06       		.uleb128 0x6
 429 004b 01       		.uleb128 0x1
 430 004c 13       		.uleb128 0x13
 431 004d 00       		.byte	0
 432 004e 00       		.byte	0
 433 004f 06       		.uleb128 0x6
 434 0050 34       		.uleb128 0x34
 435 0051 00       		.byte	0
 436 0052 03       		.uleb128 0x3
 437 0053 08       		.uleb128 0x8
 438 0054 3A       		.uleb128 0x3a
 439 0055 0B       		.uleb128 0xb
 440 0056 3B       		.uleb128 0x3b
 441 0057 0B       		.uleb128 0xb
 442 0058 49       		.uleb128 0x49
 443 0059 13       		.uleb128 0x13
 444 005a 02       		.uleb128 0x2
 445 005b 0A       		.uleb128 0xa
 446 005c 00       		.byte	0
 447 005d 00       		.byte	0
 448 005e 07       		.uleb128 0x7
 449 005f 26       		.uleb128 0x26
 450 0060 00       		.byte	0
 451 0061 49       		.uleb128 0x49
 452 0062 13       		.uleb128 0x13
 453 0063 00       		.byte	0
 454 0064 00       		.byte	0
 455 0065 08       		.uleb128 0x8
 456 0066 34       		.uleb128 0x34
 457 0067 00       		.byte	0
 458 0068 03       		.uleb128 0x3
 459 0069 0E       		.uleb128 0xe
 460 006a 3A       		.uleb128 0x3a
 461 006b 0B       		.uleb128 0xb
 462 006c 3B       		.uleb128 0x3b
 463 006d 0B       		.uleb128 0xb
 464 006e 49       		.uleb128 0x49
 465 006f 13       		.uleb128 0x13
 466 0070 02       		.uleb128 0x2
 467 0071 0A       		.uleb128 0xa
 468 0072 00       		.byte	0
 469 0073 00       		.byte	0
 470 0074 00       		.byte	0
 471              		.section	.debug_loc,"",%progbits
 472              	.Ldebug_loc0:
 473              	.LLST0:
 474 0000 00000000 		.4byte	.LFB0-.Ltext0
 475 0004 02000000 		.4byte	.LCFI0-.Ltext0
 476 0008 0200     		.2byte	0x2
 477 000a 7D       		.byte	0x7d
 478 000b 00       		.sleb128 0
 479 000c 02000000 		.4byte	.LCFI0-.Ltext0
 480 0010 04000000 		.4byte	.LCFI1-.Ltext0
 481 0014 0200     		.2byte	0x2
ARM GAS  /tmp/ccmGA17u.s 			page 11


 482 0016 7D       		.byte	0x7d
 483 0017 08       		.sleb128 8
 484 0018 04000000 		.4byte	.LCFI1-.Ltext0
 485 001c 06000000 		.4byte	.LCFI2-.Ltext0
 486 0020 0200     		.2byte	0x2
 487 0022 7D       		.byte	0x7d
 488 0023 20       		.sleb128 32
 489 0024 06000000 		.4byte	.LCFI2-.Ltext0
 490 0028 BC000000 		.4byte	.LFE0-.Ltext0
 491 002c 0200     		.2byte	0x2
 492 002e 77       		.byte	0x77
 493 002f 20       		.sleb128 32
 494 0030 00000000 		.4byte	0
 495 0034 00000000 		.4byte	0
 496              		.section	.debug_aranges,"",%progbits
 497 0000 1C000000 		.4byte	0x1c
 498 0004 0200     		.2byte	0x2
 499 0006 00000000 		.4byte	.Ldebug_info0
 500 000a 04       		.byte	0x4
 501 000b 00       		.byte	0
 502 000c 0000     		.2byte	0
 503 000e 0000     		.2byte	0
 504 0010 00000000 		.4byte	.Ltext0
 505 0014 BC000000 		.4byte	.Letext0-.Ltext0
 506 0018 00000000 		.4byte	0
 507 001c 00000000 		.4byte	0
 508              		.section	.debug_line,"",%progbits
 509              	.Ldebug_line0:
 510 0000 DE000000 		.section	.debug_str,"MS",%progbits,1
 510      02009400 
 510      00000201 
 510      FB0E0D00 
 510      01010101 
 511              	.LASF11:
 512 0000 474E5520 		.ascii	"GNU C 4.6.2 20121016 (release) [ARM/embedded-4_6-br"
 512      4320342E 
 512      362E3220 
 512      32303132 
 512      31303136 
 513 0033 616E6368 		.ascii	"anch revision 192487]\000"
 513      20726576 
 513      6973696F 
 513      6E203139 
 513      32343837 
 514              	.LASF9:
 515 0049 666C6F61 		.ascii	"float\000"
 515      7400
 516              	.LASF1:
 517 004f 756E7369 		.ascii	"unsigned char\000"
 517      676E6564 
 517      20636861 
 517      7200
 518              	.LASF5:
 519 005d 6C6F6E67 		.ascii	"long unsigned int\000"
 519      20756E73 
 519      69676E65 
 519      6420696E 
ARM GAS  /tmp/ccmGA17u.s 			page 12


 519      7400
 520              	.LASF3:
 521 006f 73686F72 		.ascii	"short unsigned int\000"
 521      7420756E 
 521      7369676E 
 521      65642069 
 521      6E7400
 522              	.LASF15:
 523 0082 6D61696E 		.ascii	"main\000"
 523      00
 524              	.LASF13:
 525 0087 2F6D6564 		.ascii	"/media/denis/EC5286A55286745C/projects/STM32-P103/e"
 525      69612F64 
 525      656E6973 
 525      2F454335 
 525      32383641 
 526 00ba 6D623466 		.ascii	"mb4fun.de/STM32Test/\000"
 526      756E2E64 
 526      652F5354 
 526      4D333254 
 526      6573742F 
 527              	.LASF8:
 528 00cf 756E7369 		.ascii	"unsigned int\000"
 528      676E6564 
 528      20696E74 
 528      00
 529              	.LASF7:
 530 00dc 6C6F6E67 		.ascii	"long long unsigned int\000"
 530      206C6F6E 
 530      6720756E 
 530      7369676E 
 530      65642069 
 531              	.LASF10:
 532 00f3 6D757374 		.ascii	"must_zero_after_startup\000"
 532      5F7A6572 
 532      6F5F6166 
 532      7465725F 
 532      73746172 
 533              	.LASF6:
 534 010b 6C6F6E67 		.ascii	"long long int\000"
 534      206C6F6E 
 534      6720696E 
 534      7400
 535              	.LASF12:
 536 0119 7372632F 		.ascii	"src/main.c\000"
 536      6D61696E 
 536      2E6300
 537              	.LASF2:
 538 0124 73686F72 		.ascii	"short int\000"
 538      7420696E 
 538      7400
 539              	.LASF14:
 540 012e 75696E74 		.ascii	"uint32_t\000"
 540      33325F74 
 540      00
 541              	.LASF4:
 542 0137 6C6F6E67 		.ascii	"long int\000"
ARM GAS  /tmp/ccmGA17u.s 			page 13


 542      20696E74 
 542      00
 543              	.LASF0:
 544 0140 7369676E 		.ascii	"signed char\000"
 544      65642063 
 544      68617200 
 545              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.6.2 20121016 (release) [ARM/embedded-4_6-br
ARM GAS  /tmp/ccmGA17u.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccmGA17u.s:51     .rodata:00000000 $d
     /tmp/ccmGA17u.s:54     .rodata:00000000 d
     /tmp/ccmGA17u.s:59     .rodata:00000004 fd
     /tmp/ccmGA17u.s:62     .data:00000000 $d
     /tmp/ccmGA17u.s:65     .data:00000000 dd
     /tmp/ccmGA17u.s:68     .bss:00000000 $d
     /tmp/ccmGA17u.s:69     .bss:00000000 must_zero_after_startup
     /tmp/ccmGA17u.s:73     .text:00000000 $t
     /tmp/ccmGA17u.s:78     .text:00000000 main
     /tmp/ccmGA17u.s:182    .text:000000a8 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_fadd
