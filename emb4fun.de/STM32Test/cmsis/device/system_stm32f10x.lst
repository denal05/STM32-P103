ARM GAS  /tmp/ccBweOod.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32f10x.c"
  14              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.6.2 20121016 (release) [ARM/embedded-4_6-
  15              	@	compiled by GNU C version 4.3.6, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./inc -I ./cmsis/core -I ./cmsis/device
  18              	@ -iprefix /opt/gcc-arm-none-eabi-4_6-2012q4/bin/../lib/gcc/arm-none-eabi/4.6.2/
  19              	@ -isysroot /opt/gcc-arm-none-eabi-4_6-2012q4/bin/../arm-none-eabi
  20              	@ -MD cmsis/device/system_stm32f10x.d -MF .dep/system_stm32f10x.o.d -MP
  21              	@ -MQ cmsis/device/system_stm32f10x.o -D__USES_INITFINI__ -D STM32F10X_MD
  22              	@ -D RUN_FROM_FLASH=0 -D VECT_TAB_SRAM cmsis/device/system_stm32f10x.c
  23              	@ -mthumb -mcpu=cortex-m3 -mfloat-abi=soft -mfpu=fpv4-sp-d16
  24              	@ -auxbase-strip cmsis/device/system_stm32f10x.o -gdwarf-2 -O0 -Wall
  25              	@ -Wstrict-prototypes -fverbose-asm
  26              	@ options enabled:  -fauto-inc-dec -fbranch-count-reg -fcommon
  27              	@ -fdelete-null-pointer-checks -fdwarf2-cfi-asm -fearly-inlining
  28              	@ -feliminate-unused-debug-types -ffunction-cse -fgcse-lm -fident
  29              	@ -finline-functions-called-once -fira-share-save-slots
  30              	@ -fira-share-spill-slots -fivopts -fkeep-static-consts
  31              	@ -fleading-underscore -fmath-errno -fmerge-debug-strings
  32              	@ -fmove-loop-invariants -fpeephole -fprefetch-loop-arrays
  33              	@ -freg-struct-return -fsched-critical-path-heuristic
  34              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  35              	@ -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
  36              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fshow-column
  37              	@ -fsigned-zeros -fsplit-ivs-in-unroller -fstrict-volatile-bitfields
  38              	@ -ftrapping-math -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
  39              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  40              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-pta -ftree-reassoc
  41              	@ -ftree-scev-cprop -ftree-slp-vectorize -ftree-vect-loop-version
  42              	@ -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss
  43              	@ -mfix-cortex-m3-ldrd -mlittle-endian -msched-prolog -mthumb
  44              	@ -munaligned-access
  45              	
  46              		.text
  47              	.Ltext0:
  48              	@ Compiler executable checksum: 5375e73801c740cfc46b0c557cf2e4d9
  49              	
  50              		.cfi_sections	.debug_frame
  51              		.global	SystemCoreClock
  52              		.data
  53              		.align	2
  54              		.type	SystemCoreClock, %object
  55              		.size	SystemCoreClock, 4
  56              	SystemCoreClock:
  57 0000 00A24A04 		.word	72000000
ARM GAS  /tmp/ccBweOod.s 			page 2


  58              		.global	AHBPrescTable
  59              		.align	2
  60              		.type	AHBPrescTable, %object
  61              		.size	AHBPrescTable, 16
  62              	AHBPrescTable:
  63 0004 00       		.byte	0
  64 0005 00       		.byte	0
  65 0006 00       		.byte	0
  66 0007 00       		.byte	0
  67 0008 00       		.byte	0
  68 0009 00       		.byte	0
  69 000a 00       		.byte	0
  70 000b 00       		.byte	0
  71 000c 01       		.byte	1
  72 000d 02       		.byte	2
  73 000e 03       		.byte	3
  74 000f 04       		.byte	4
  75 0010 06       		.byte	6
  76 0011 07       		.byte	7
  77 0012 08       		.byte	8
  78 0013 09       		.byte	9
  79              		.text
  80              		.align	2
  81              		.global	SystemInit
  82              		.thumb
  83              		.thumb_func
  84              		.type	SystemInit, %function
  85              	SystemInit:
  86              	.LFB55:
  87              		.file 1 "cmsis/device/system_stm32f10x.c"
   1:cmsis/device/system_stm32f10x.c **** /**
   2:cmsis/device/system_stm32f10x.c ****   ******************************************************************************
   3:cmsis/device/system_stm32f10x.c ****   * @file    system_stm32f10x.c
   4:cmsis/device/system_stm32f10x.c ****   * @author  MCD Application Team
   5:cmsis/device/system_stm32f10x.c ****   * @version V3.5.0
   6:cmsis/device/system_stm32f10x.c ****   * @date    11-March-2011
   7:cmsis/device/system_stm32f10x.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   8:cmsis/device/system_stm32f10x.c ****   * 
   9:cmsis/device/system_stm32f10x.c ****   * 1.  This file provides two functions and one global variable to be called from 
  10:cmsis/device/system_stm32f10x.c ****   *     user application:
  11:cmsis/device/system_stm32f10x.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  12:cmsis/device/system_stm32f10x.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  13:cmsis/device/system_stm32f10x.c ****   *                      This function is called at startup just after reset and 
  14:cmsis/device/system_stm32f10x.c ****   *                      before branch to main program. This call is made inside
  15:cmsis/device/system_stm32f10x.c ****   *                      the "startup_stm32f10x_xx.s" file.
  16:cmsis/device/system_stm32f10x.c ****   *
  17:cmsis/device/system_stm32f10x.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  18:cmsis/device/system_stm32f10x.c ****   *                                  by the user application to setup the SysTick 
  19:cmsis/device/system_stm32f10x.c ****   *                                  timer or configure other parameters.
  20:cmsis/device/system_stm32f10x.c ****   *                                     
  21:cmsis/device/system_stm32f10x.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  22:cmsis/device/system_stm32f10x.c ****   *                                 be called whenever the core clock is changed
  23:cmsis/device/system_stm32f10x.c ****   *                                 during program execution.
  24:cmsis/device/system_stm32f10x.c ****   *
  25:cmsis/device/system_stm32f10x.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  26:cmsis/device/system_stm32f10x.c ****   *    Then SystemInit() function is called, in "startup_stm32f10x_xx.s" file, to
  27:cmsis/device/system_stm32f10x.c ****   *    configure the system clock before to branch to main program.
ARM GAS  /tmp/ccBweOod.s 			page 3


  28:cmsis/device/system_stm32f10x.c ****   *
  29:cmsis/device/system_stm32f10x.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  30:cmsis/device/system_stm32f10x.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  31:cmsis/device/system_stm32f10x.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  32:cmsis/device/system_stm32f10x.c ****   *
  33:cmsis/device/system_stm32f10x.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depedning on
  34:cmsis/device/system_stm32f10x.c ****   *    the product used), refer to "HSE_VALUE" define in "stm32f10x.h" file. 
  35:cmsis/device/system_stm32f10x.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
  36:cmsis/device/system_stm32f10x.c ****   *    are using different crystal you have to adapt the HSE value to your own
  37:cmsis/device/system_stm32f10x.c ****   *    configuration.
  38:cmsis/device/system_stm32f10x.c ****   *        
  39:cmsis/device/system_stm32f10x.c ****   ******************************************************************************
  40:cmsis/device/system_stm32f10x.c ****   * @attention
  41:cmsis/device/system_stm32f10x.c ****   *
  42:cmsis/device/system_stm32f10x.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  43:cmsis/device/system_stm32f10x.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  44:cmsis/device/system_stm32f10x.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  45:cmsis/device/system_stm32f10x.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  46:cmsis/device/system_stm32f10x.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  47:cmsis/device/system_stm32f10x.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  48:cmsis/device/system_stm32f10x.c ****   *
  49:cmsis/device/system_stm32f10x.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  50:cmsis/device/system_stm32f10x.c ****   ******************************************************************************
  51:cmsis/device/system_stm32f10x.c ****   */
  52:cmsis/device/system_stm32f10x.c **** 
  53:cmsis/device/system_stm32f10x.c **** /** @addtogroup CMSIS
  54:cmsis/device/system_stm32f10x.c ****   * @{
  55:cmsis/device/system_stm32f10x.c ****   */
  56:cmsis/device/system_stm32f10x.c **** 
  57:cmsis/device/system_stm32f10x.c **** /** @addtogroup stm32f10x_system
  58:cmsis/device/system_stm32f10x.c ****   * @{
  59:cmsis/device/system_stm32f10x.c ****   */  
  60:cmsis/device/system_stm32f10x.c ****   
  61:cmsis/device/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Includes
  62:cmsis/device/system_stm32f10x.c ****   * @{
  63:cmsis/device/system_stm32f10x.c ****   */
  64:cmsis/device/system_stm32f10x.c **** 
  65:cmsis/device/system_stm32f10x.c **** #include "stm32f10x.h"
  66:cmsis/device/system_stm32f10x.c **** 
  67:cmsis/device/system_stm32f10x.c **** /**
  68:cmsis/device/system_stm32f10x.c ****   * @}
  69:cmsis/device/system_stm32f10x.c ****   */
  70:cmsis/device/system_stm32f10x.c **** 
  71:cmsis/device/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_TypesDefinitions
  72:cmsis/device/system_stm32f10x.c ****   * @{
  73:cmsis/device/system_stm32f10x.c ****   */
  74:cmsis/device/system_stm32f10x.c **** 
  75:cmsis/device/system_stm32f10x.c **** /**
  76:cmsis/device/system_stm32f10x.c ****   * @}
  77:cmsis/device/system_stm32f10x.c ****   */
  78:cmsis/device/system_stm32f10x.c **** 
  79:cmsis/device/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Defines
  80:cmsis/device/system_stm32f10x.c ****   * @{
  81:cmsis/device/system_stm32f10x.c ****   */
  82:cmsis/device/system_stm32f10x.c **** 
  83:cmsis/device/system_stm32f10x.c **** /*!< Uncomment the line corresponding to the desired System clock (SYSCLK)
  84:cmsis/device/system_stm32f10x.c ****    frequency (after reset the HSI is used as SYSCLK source)
ARM GAS  /tmp/ccBweOod.s 			page 4


  85:cmsis/device/system_stm32f10x.c ****    
  86:cmsis/device/system_stm32f10x.c ****    IMPORTANT NOTE:
  87:cmsis/device/system_stm32f10x.c ****    ============== 
  88:cmsis/device/system_stm32f10x.c ****    1. After each device reset the HSI is used as System clock source.
  89:cmsis/device/system_stm32f10x.c **** 
  90:cmsis/device/system_stm32f10x.c ****    2. Please make sure that the selected System clock doesn't exceed your device's
  91:cmsis/device/system_stm32f10x.c ****       maximum frequency.
  92:cmsis/device/system_stm32f10x.c ****       
  93:cmsis/device/system_stm32f10x.c ****    3. If none of the define below is enabled, the HSI is used as System clock
  94:cmsis/device/system_stm32f10x.c ****     source.
  95:cmsis/device/system_stm32f10x.c **** 
  96:cmsis/device/system_stm32f10x.c ****    4. The System clock configuration functions provided within this file assume that:
  97:cmsis/device/system_stm32f10x.c ****         - For Low, Medium and High density Value line devices an external 8MHz 
  98:cmsis/device/system_stm32f10x.c ****           crystal is used to drive the System clock.
  99:cmsis/device/system_stm32f10x.c ****         - For Low, Medium and High density devices an external 8MHz crystal is
 100:cmsis/device/system_stm32f10x.c ****           used to drive the System clock.
 101:cmsis/device/system_stm32f10x.c ****         - For Connectivity line devices an external 25MHz crystal is used to drive
 102:cmsis/device/system_stm32f10x.c ****           the System clock.
 103:cmsis/device/system_stm32f10x.c ****      If you are using different crystal you have to adapt those functions accordingly.
 104:cmsis/device/system_stm32f10x.c ****     */
 105:cmsis/device/system_stm32f10x.c ****     
 106:cmsis/device/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || (defined STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 107:cmsis/device/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 108:cmsis/device/system_stm32f10x.c ****  #define SYSCLK_FREQ_24MHz  24000000
 109:cmsis/device/system_stm32f10x.c **** #else
 110:cmsis/device/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 111:cmsis/device/system_stm32f10x.c **** /* #define SYSCLK_FREQ_24MHz  24000000 */ 
 112:cmsis/device/system_stm32f10x.c **** /* #define SYSCLK_FREQ_36MHz  36000000 */
 113:cmsis/device/system_stm32f10x.c **** /* #define SYSCLK_FREQ_48MHz  48000000 */
 114:cmsis/device/system_stm32f10x.c **** /* #define SYSCLK_FREQ_56MHz  56000000 */
 115:cmsis/device/system_stm32f10x.c **** #define SYSCLK_FREQ_72MHz  72000000
 116:cmsis/device/system_stm32f10x.c **** #endif
 117:cmsis/device/system_stm32f10x.c **** 
 118:cmsis/device/system_stm32f10x.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 119:cmsis/device/system_stm32f10x.c ****      on STM3210E-EVAL board (STM32 High density and XL-density devices) or on 
 120:cmsis/device/system_stm32f10x.c ****      STM32100E-EVAL board (STM32 High-density value line devices) as data memory */ 
 121:cmsis/device/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 122:cmsis/device/system_stm32f10x.c **** /* #define DATA_IN_ExtSRAM */
 123:cmsis/device/system_stm32f10x.c **** #endif
 124:cmsis/device/system_stm32f10x.c **** 
 125:cmsis/device/system_stm32f10x.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 126:cmsis/device/system_stm32f10x.c ****      Internal SRAM. */ 
 127:cmsis/device/system_stm32f10x.c **** /* #define VECT_TAB_SRAM */
 128:cmsis/device/system_stm32f10x.c **** #define VECT_TAB_OFFSET  0x0 /*!< Vector Table base offset field. 
 129:cmsis/device/system_stm32f10x.c ****                                   This value must be a multiple of 0x200. */
 130:cmsis/device/system_stm32f10x.c **** 
 131:cmsis/device/system_stm32f10x.c **** 
 132:cmsis/device/system_stm32f10x.c **** /**
 133:cmsis/device/system_stm32f10x.c ****   * @}
 134:cmsis/device/system_stm32f10x.c ****   */
 135:cmsis/device/system_stm32f10x.c **** 
 136:cmsis/device/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Macros
 137:cmsis/device/system_stm32f10x.c ****   * @{
 138:cmsis/device/system_stm32f10x.c ****   */
 139:cmsis/device/system_stm32f10x.c **** 
 140:cmsis/device/system_stm32f10x.c **** /**
 141:cmsis/device/system_stm32f10x.c ****   * @}
ARM GAS  /tmp/ccBweOod.s 			page 5


 142:cmsis/device/system_stm32f10x.c ****   */
 143:cmsis/device/system_stm32f10x.c **** 
 144:cmsis/device/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Variables
 145:cmsis/device/system_stm32f10x.c ****   * @{
 146:cmsis/device/system_stm32f10x.c ****   */
 147:cmsis/device/system_stm32f10x.c **** 
 148:cmsis/device/system_stm32f10x.c **** /*******************************************************************************
 149:cmsis/device/system_stm32f10x.c **** *  Clock Definitions
 150:cmsis/device/system_stm32f10x.c **** *******************************************************************************/
 151:cmsis/device/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 152:cmsis/device/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_HSE;        /*!< System Clock Frequency (Core Cloc
 153:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 154:cmsis/device/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_24MHz;        /*!< System Clock Frequency (Core Cl
 155:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 156:cmsis/device/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_36MHz;        /*!< System Clock Frequency (Core Cl
 157:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 158:cmsis/device/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_48MHz;        /*!< System Clock Frequency (Core Cl
 159:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 160:cmsis/device/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_56MHz;        /*!< System Clock Frequency (Core Cl
 161:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 162:cmsis/device/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_72MHz;        /*!< System Clock Frequency (Core Cl
 163:cmsis/device/system_stm32f10x.c **** #else /*!< HSI Selected as System Clock source */
 164:cmsis/device/system_stm32f10x.c ****   uint32_t SystemCoreClock         = HSI_VALUE;        /*!< System Clock Frequency (Core Clock) */
 165:cmsis/device/system_stm32f10x.c **** #endif
 166:cmsis/device/system_stm32f10x.c **** 
 167:cmsis/device/system_stm32f10x.c **** __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 168:cmsis/device/system_stm32f10x.c **** /**
 169:cmsis/device/system_stm32f10x.c ****   * @}
 170:cmsis/device/system_stm32f10x.c ****   */
 171:cmsis/device/system_stm32f10x.c **** 
 172:cmsis/device/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_FunctionPrototypes
 173:cmsis/device/system_stm32f10x.c ****   * @{
 174:cmsis/device/system_stm32f10x.c ****   */
 175:cmsis/device/system_stm32f10x.c **** 
 176:cmsis/device/system_stm32f10x.c **** static void SetSysClock(void);
 177:cmsis/device/system_stm32f10x.c **** 
 178:cmsis/device/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 179:cmsis/device/system_stm32f10x.c ****   static void SetSysClockToHSE(void);
 180:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 181:cmsis/device/system_stm32f10x.c ****   static void SetSysClockTo24(void);
 182:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 183:cmsis/device/system_stm32f10x.c ****   static void SetSysClockTo36(void);
 184:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 185:cmsis/device/system_stm32f10x.c ****   static void SetSysClockTo48(void);
 186:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 187:cmsis/device/system_stm32f10x.c ****   static void SetSysClockTo56(void);  
 188:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 189:cmsis/device/system_stm32f10x.c ****   static void SetSysClockTo72(void);
 190:cmsis/device/system_stm32f10x.c **** #endif
 191:cmsis/device/system_stm32f10x.c **** 
 192:cmsis/device/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 193:cmsis/device/system_stm32f10x.c ****   static void SystemInit_ExtMemCtl(void); 
 194:cmsis/device/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 195:cmsis/device/system_stm32f10x.c **** 
 196:cmsis/device/system_stm32f10x.c **** /**
 197:cmsis/device/system_stm32f10x.c ****   * @}
 198:cmsis/device/system_stm32f10x.c ****   */
ARM GAS  /tmp/ccBweOod.s 			page 6


 199:cmsis/device/system_stm32f10x.c **** 
 200:cmsis/device/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Functions
 201:cmsis/device/system_stm32f10x.c ****   * @{
 202:cmsis/device/system_stm32f10x.c ****   */
 203:cmsis/device/system_stm32f10x.c **** 
 204:cmsis/device/system_stm32f10x.c **** /**
 205:cmsis/device/system_stm32f10x.c ****   * @brief  Setup the microcontroller system
 206:cmsis/device/system_stm32f10x.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 207:cmsis/device/system_stm32f10x.c ****   *         SystemCoreClock variable.
 208:cmsis/device/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 209:cmsis/device/system_stm32f10x.c ****   * @param  None
 210:cmsis/device/system_stm32f10x.c ****   * @retval None
 211:cmsis/device/system_stm32f10x.c ****   */
 212:cmsis/device/system_stm32f10x.c **** void SystemInit (void)
 213:cmsis/device/system_stm32f10x.c **** {
  88              		.loc 1 213 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 1, uses_anonymous_args = 0
  92 0000 80B5     		push	{r7, lr}	@
  93              	.LCFI0:
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 14, -4
  96              		.cfi_offset 7, -8
  97 0002 00AF     		add	r7, sp, #0	@,,
  98              	.LCFI1:
  99              		.cfi_def_cfa_register 7
 214:cmsis/device/system_stm32f10x.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 215:cmsis/device/system_stm32f10x.c ****   /* Set HSION bit */
 216:cmsis/device/system_stm32f10x.c ****   RCC->CR |= (uint32_t)0x00000001;
 100              		.loc 1 216 0
 101 0004 4FF48053 		mov	r3, #4096	@ D.5753,
 102 0008 C4F20203 		movt	r3, 16386	@ D.5753,
 103 000c 4FF48052 		mov	r2, #4096	@ D.5754,
 104 0010 C4F20202 		movt	r2, 16386	@ D.5754,
 105 0014 1268     		ldr	r2, [r2, #0]	@ tmp156,* D.5754
 106 0016 42F00102 		orr	r2, r2, #1	@ D.5756, D.5755,
 107 001a 1A60     		str	r2, [r3, #0]	@ D.5756, D.5753_1->CR
 217:cmsis/device/system_stm32f10x.c **** 
 218:cmsis/device/system_stm32f10x.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 219:cmsis/device/system_stm32f10x.c **** #ifndef STM32F10X_CL
 220:cmsis/device/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
 108              		.loc 1 220 0
 109 001c 4FF48052 		mov	r2, #4096	@ D.5757,
 110 0020 C4F20202 		movt	r2, 16386	@ D.5757,
 111 0024 4FF48053 		mov	r3, #4096	@ D.5758,
 112 0028 C4F20203 		movt	r3, 16386	@ D.5758,
 113 002c 5B68     		ldr	r3, [r3, #4]	@ tmp157,
 114 002e 1946     		mov	r1, r3	@ D.5759, tmp157
 115 0030 4FF00003 		mov	r3, #0	@ D.5760,
 116 0034 CFF6FF03 		movt	r3, 63743	@ D.5760,
 117 0038 0B40     		ands	r3, r3, r1	@, D.5760, D.5760, D.5759
 118 003a 5360     		str	r3, [r2, #4]	@ D.5760, D.5757_5->CFGR
 221:cmsis/device/system_stm32f10x.c **** #else
 222:cmsis/device/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 223:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */   
 224:cmsis/device/system_stm32f10x.c ****   
ARM GAS  /tmp/ccBweOod.s 			page 7


 225:cmsis/device/system_stm32f10x.c ****   /* Reset HSEON, CSSON and PLLON bits */
 226:cmsis/device/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 119              		.loc 1 226 0
 120 003c 4FF48053 		mov	r3, #4096	@ D.5761,
 121 0040 C4F20203 		movt	r3, 16386	@ D.5761,
 122 0044 4FF48052 		mov	r2, #4096	@ D.5762,
 123 0048 C4F20202 		movt	r2, 16386	@ D.5762,
 124 004c 1268     		ldr	r2, [r2, #0]	@ tmp158,* D.5762
 125 004e 22F08472 		bic	r2, r2, #17301504	@ D.5764, D.5763,
 126 0052 22F48032 		bic	r2, r2, #65536	@ D.5764, D.5764,
 127 0056 1A60     		str	r2, [r3, #0]	@ D.5764, D.5761_9->CR
 227:cmsis/device/system_stm32f10x.c **** 
 228:cmsis/device/system_stm32f10x.c ****   /* Reset HSEBYP bit */
 229:cmsis/device/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 128              		.loc 1 229 0
 129 0058 4FF48053 		mov	r3, #4096	@ D.5765,
 130 005c C4F20203 		movt	r3, 16386	@ D.5765,
 131 0060 4FF48052 		mov	r2, #4096	@ D.5766,
 132 0064 C4F20202 		movt	r2, 16386	@ D.5766,
 133 0068 1268     		ldr	r2, [r2, #0]	@ tmp159,* D.5766
 134 006a 22F48022 		bic	r2, r2, #262144	@ D.5768, D.5767,
 135 006e 1A60     		str	r2, [r3, #0]	@ D.5768, D.5765_13->CR
 230:cmsis/device/system_stm32f10x.c **** 
 231:cmsis/device/system_stm32f10x.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 232:cmsis/device/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
 136              		.loc 1 232 0
 137 0070 4FF48053 		mov	r3, #4096	@ D.5769,
 138 0074 C4F20203 		movt	r3, 16386	@ D.5769,
 139 0078 4FF48052 		mov	r2, #4096	@ D.5770,
 140 007c C4F20202 		movt	r2, 16386	@ D.5770,
 141 0080 5268     		ldr	r2, [r2, #4]	@ tmp160,
 142 0082 22F4FE02 		bic	r2, r2, #8323072	@ D.5772, D.5771,
 143 0086 5A60     		str	r2, [r3, #4]	@ D.5772, D.5769_17->CFGR
 233:cmsis/device/system_stm32f10x.c **** 
 234:cmsis/device/system_stm32f10x.c **** #ifdef STM32F10X_CL
 235:cmsis/device/system_stm32f10x.c ****   /* Reset PLL2ON and PLL3ON bits */
 236:cmsis/device/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 237:cmsis/device/system_stm32f10x.c **** 
 238:cmsis/device/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 239:cmsis/device/system_stm32f10x.c ****   RCC->CIR = 0x00FF0000;
 240:cmsis/device/system_stm32f10x.c **** 
 241:cmsis/device/system_stm32f10x.c ****   /* Reset CFGR2 register */
 242:cmsis/device/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;
 243:cmsis/device/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 244:cmsis/device/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 245:cmsis/device/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 246:cmsis/device/system_stm32f10x.c **** 
 247:cmsis/device/system_stm32f10x.c ****   /* Reset CFGR2 register */
 248:cmsis/device/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;      
 249:cmsis/device/system_stm32f10x.c **** #else
 250:cmsis/device/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 251:cmsis/device/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 144              		.loc 1 251 0
 145 0088 4FF48053 		mov	r3, #4096	@ D.5773,
 146 008c C4F20203 		movt	r3, 16386	@ D.5773,
 147 0090 4FF41F02 		mov	r2, #10420224	@ tmp161,
 148 0094 9A60     		str	r2, [r3, #8]	@ tmp161, D.5773_21->CIR
ARM GAS  /tmp/ccBweOod.s 			page 8


 252:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 253:cmsis/device/system_stm32f10x.c ****     
 254:cmsis/device/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 255:cmsis/device/system_stm32f10x.c ****   #ifdef DATA_IN_ExtSRAM
 256:cmsis/device/system_stm32f10x.c ****     SystemInit_ExtMemCtl(); 
 257:cmsis/device/system_stm32f10x.c ****   #endif /* DATA_IN_ExtSRAM */
 258:cmsis/device/system_stm32f10x.c **** #endif 
 259:cmsis/device/system_stm32f10x.c **** 
 260:cmsis/device/system_stm32f10x.c ****   /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
 261:cmsis/device/system_stm32f10x.c ****   /* Configure the Flash Latency cycles and enable prefetch buffer */
 262:cmsis/device/system_stm32f10x.c ****   SetSysClock();
 149              		.loc 1 262 0
 150 0096 00F0ADF8 		bl	SetSysClock	@
 263:cmsis/device/system_stm32f10x.c **** 
 264:cmsis/device/system_stm32f10x.c **** #ifdef VECT_TAB_SRAM
 265:cmsis/device/system_stm32f10x.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 151              		.loc 1 265 0
 152 009a 4FF46D43 		mov	r3, #60672	@ D.5774,
 153 009e CEF20003 		movt	r3, 57344	@ D.5774,
 154 00a2 4FF00052 		mov	r2, #536870912	@ tmp162,
 155 00a6 9A60     		str	r2, [r3, #8]	@ tmp162, D.5774_22->VTOR
 266:cmsis/device/system_stm32f10x.c **** #else
 267:cmsis/device/system_stm32f10x.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 268:cmsis/device/system_stm32f10x.c **** #endif 
 269:cmsis/device/system_stm32f10x.c **** }
 156              		.loc 1 269 0
 157 00a8 80BD     		pop	{r7, pc}	@
 158              		.cfi_endproc
 159              	.LFE55:
 160              		.size	SystemInit, .-SystemInit
 161 00aa 00BF     		.align	2
 162              		.global	SystemCoreClockUpdate
 163              		.thumb
 164              		.thumb_func
 165              		.type	SystemCoreClockUpdate, %function
 166              	SystemCoreClockUpdate:
 167              	.LFB56:
 270:cmsis/device/system_stm32f10x.c **** 
 271:cmsis/device/system_stm32f10x.c **** /**
 272:cmsis/device/system_stm32f10x.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 273:cmsis/device/system_stm32f10x.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 274:cmsis/device/system_stm32f10x.c ****   *         be used by the user application to setup the SysTick timer or configure
 275:cmsis/device/system_stm32f10x.c ****   *         other parameters.
 276:cmsis/device/system_stm32f10x.c ****   *           
 277:cmsis/device/system_stm32f10x.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 278:cmsis/device/system_stm32f10x.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 279:cmsis/device/system_stm32f10x.c ****   *         based on this variable will be incorrect.         
 280:cmsis/device/system_stm32f10x.c ****   *     
 281:cmsis/device/system_stm32f10x.c ****   * @note   - The system frequency computed by this function is not the real 
 282:cmsis/device/system_stm32f10x.c ****   *           frequency in the chip. It is calculated based on the predefined 
 283:cmsis/device/system_stm32f10x.c ****   *           constant and the selected clock source:
 284:cmsis/device/system_stm32f10x.c ****   *             
 285:cmsis/device/system_stm32f10x.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 286:cmsis/device/system_stm32f10x.c ****   *                                              
 287:cmsis/device/system_stm32f10x.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 288:cmsis/device/system_stm32f10x.c ****   *                          
 289:cmsis/device/system_stm32f10x.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
ARM GAS  /tmp/ccBweOod.s 			page 9


 290:cmsis/device/system_stm32f10x.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 291:cmsis/device/system_stm32f10x.c ****   *         
 292:cmsis/device/system_stm32f10x.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
 293:cmsis/device/system_stm32f10x.c ****   *             8 MHz) but the real value may vary depending on the variations
 294:cmsis/device/system_stm32f10x.c ****   *             in voltage and temperature.   
 295:cmsis/device/system_stm32f10x.c ****   *    
 296:cmsis/device/system_stm32f10x.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 297:cmsis/device/system_stm32f10x.c ****   *              8 MHz or 25 MHz, depedning on the product used), user has to ensure
 298:cmsis/device/system_stm32f10x.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 299:cmsis/device/system_stm32f10x.c ****   *              Otherwise, this function may have wrong result.
 300:cmsis/device/system_stm32f10x.c ****   *                
 301:cmsis/device/system_stm32f10x.c ****   *         - The result of this function could be not correct when using fractional
 302:cmsis/device/system_stm32f10x.c ****   *           value for HSE crystal.
 303:cmsis/device/system_stm32f10x.c ****   * @param  None
 304:cmsis/device/system_stm32f10x.c ****   * @retval None
 305:cmsis/device/system_stm32f10x.c ****   */
 306:cmsis/device/system_stm32f10x.c **** void SystemCoreClockUpdate (void)
 307:cmsis/device/system_stm32f10x.c **** {
 168              		.loc 1 307 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 16
 171              		@ frame_needed = 1, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173 00ac 80B4     		push	{r7}	@
 174              	.LCFI2:
 175              		.cfi_def_cfa_offset 4
 176              		.cfi_offset 7, -4
 177 00ae 85B0     		sub	sp, sp, #20	@,,
 178              	.LCFI3:
 179              		.cfi_def_cfa_offset 24
 180 00b0 00AF     		add	r7, sp, #0	@,,
 181              	.LCFI4:
 182              		.cfi_def_cfa_register 7
 308:cmsis/device/system_stm32f10x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0;
 183              		.loc 1 308 0
 184 00b2 4FF00003 		mov	r3, #0	@ tmp155,
 185 00b6 FB60     		str	r3, [r7, #12]	@ tmp155, tmp
 186 00b8 4FF00003 		mov	r3, #0	@ tmp156,
 187 00bc BB60     		str	r3, [r7, #8]	@ tmp156, pllmull
 188 00be 4FF00003 		mov	r3, #0	@ tmp157,
 189 00c2 7B60     		str	r3, [r7, #4]	@ tmp157, pllsource
 309:cmsis/device/system_stm32f10x.c **** 
 310:cmsis/device/system_stm32f10x.c **** #ifdef  STM32F10X_CL
 311:cmsis/device/system_stm32f10x.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 312:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 313:cmsis/device/system_stm32f10x.c **** 
 314:cmsis/device/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 315:cmsis/device/system_stm32f10x.c ****   uint32_t prediv1factor = 0;
 316:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_LD_VL or STM32F10X_MD_VL or STM32F10X_HD_VL */
 317:cmsis/device/system_stm32f10x.c ****     
 318:cmsis/device/system_stm32f10x.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 319:cmsis/device/system_stm32f10x.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 190              		.loc 1 319 0
 191 00c4 4FF48053 		mov	r3, #4096	@ D.5726,
 192 00c8 C4F20203 		movt	r3, 16386	@ D.5726,
 193 00cc 5B68     		ldr	r3, [r3, #4]	@ tmp158,
 194 00ce 03F00C03 		and	r3, r3, #12	@ tmp159, D.5727,
ARM GAS  /tmp/ccBweOod.s 			page 10


 195 00d2 FB60     		str	r3, [r7, #12]	@ tmp159, tmp
 320:cmsis/device/system_stm32f10x.c ****   
 321:cmsis/device/system_stm32f10x.c ****   switch (tmp)
 196              		.loc 1 321 0
 197 00d4 FB68     		ldr	r3, [r7, #12]	@ tmp160, tmp
 198 00d6 042B     		cmp	r3, #4	@ tmp160,
 199 00d8 0DD0     		beq	.L5	@,
 200 00da 082B     		cmp	r3, #8	@ tmp160,
 201 00dc 15D0     		beq	.L6	@,
 202 00de 002B     		cmp	r3, #0	@ tmp160,
 203 00e0 5CD1     		bne	.L11	@,
 204              	.L4:
 322:cmsis/device/system_stm32f10x.c ****   {
 323:cmsis/device/system_stm32f10x.c ****     case 0x00:  /* HSI used as system clock */
 324:cmsis/device/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 205              		.loc 1 324 0
 206 00e2 40F20003 		movw	r3, #:lower16:SystemCoreClock	@ tmp161,
 207 00e6 C0F20003 		movt	r3, #:upper16:SystemCoreClock	@ tmp161,
 208 00ea 4FF49052 		mov	r2, #4608	@ tmp162,
 209 00ee C0F27A02 		movt	r2, 122	@ tmp162,
 210 00f2 1A60     		str	r2, [r3, #0]	@ tmp162, SystemCoreClock
 325:cmsis/device/system_stm32f10x.c ****       break;
 211              		.loc 1 325 0
 212 00f4 5CE0     		b	.L7	@
 213              	.L5:
 326:cmsis/device/system_stm32f10x.c ****     case 0x04:  /* HSE used as system clock */
 327:cmsis/device/system_stm32f10x.c ****       SystemCoreClock = HSE_VALUE;
 214              		.loc 1 327 0
 215 00f6 40F20003 		movw	r3, #:lower16:SystemCoreClock	@ tmp163,
 216 00fa C0F20003 		movt	r3, #:upper16:SystemCoreClock	@ tmp163,
 217 00fe 4FF49052 		mov	r2, #4608	@ tmp164,
 218 0102 C0F27A02 		movt	r2, 122	@ tmp164,
 219 0106 1A60     		str	r2, [r3, #0]	@ tmp164, SystemCoreClock
 328:cmsis/device/system_stm32f10x.c ****       break;
 220              		.loc 1 328 0
 221 0108 52E0     		b	.L7	@
 222              	.L6:
 329:cmsis/device/system_stm32f10x.c ****     case 0x08:  /* PLL used as system clock */
 330:cmsis/device/system_stm32f10x.c **** 
 331:cmsis/device/system_stm32f10x.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 332:cmsis/device/system_stm32f10x.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 223              		.loc 1 332 0
 224 010a 4FF48053 		mov	r3, #4096	@ D.5728,
 225 010e C4F20203 		movt	r3, 16386	@ D.5728,
 226 0112 5B68     		ldr	r3, [r3, #4]	@ tmp165,
 227 0114 03F47013 		and	r3, r3, #3932160	@ tmp166, D.5729,
 228 0118 BB60     		str	r3, [r7, #8]	@ tmp166, pllmull
 333:cmsis/device/system_stm32f10x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 229              		.loc 1 333 0
 230 011a 4FF48053 		mov	r3, #4096	@ D.5730,
 231 011e C4F20203 		movt	r3, 16386	@ D.5730,
 232 0122 5B68     		ldr	r3, [r3, #4]	@ tmp167,
 233 0124 03F48033 		and	r3, r3, #65536	@ tmp168, D.5731,
 234 0128 7B60     		str	r3, [r7, #4]	@ tmp168, pllsource
 334:cmsis/device/system_stm32f10x.c ****       
 335:cmsis/device/system_stm32f10x.c **** #ifndef STM32F10X_CL      
 336:cmsis/device/system_stm32f10x.c ****       pllmull = ( pllmull >> 18) + 2;
ARM GAS  /tmp/ccBweOod.s 			page 11


 235              		.loc 1 336 0
 236 012a BB68     		ldr	r3, [r7, #8]	@ tmp169, pllmull
 237 012c 4FEA9343 		lsr	r3, r3, #18	@ D.5732, tmp169,
 238 0130 03F10203 		add	r3, r3, #2	@ tmp170, D.5732,
 239 0134 BB60     		str	r3, [r7, #8]	@ tmp170, pllmull
 337:cmsis/device/system_stm32f10x.c ****       
 338:cmsis/device/system_stm32f10x.c ****       if (pllsource == 0x00)
 240              		.loc 1 338 0
 241 0136 7B68     		ldr	r3, [r7, #4]	@ tmp171, pllsource
 242 0138 002B     		cmp	r3, #0	@ tmp171,
 243 013a 0CD1     		bne	.L8	@,
 339:cmsis/device/system_stm32f10x.c ****       {
 340:cmsis/device/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 341:cmsis/device/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 244              		.loc 1 341 0
 245 013c BA68     		ldr	r2, [r7, #8]	@ tmp172, pllmull
 246 013e 4FF41063 		mov	r3, #2304	@ tmp173,
 247 0142 C0F23D03 		movt	r3, 61	@ tmp173,
 248 0146 03FB02F2 		mul	r2, r3, r2	@ SystemCoreClock.6, tmp173, tmp172
 249 014a 40F20003 		movw	r3, #:lower16:SystemCoreClock	@ tmp174,
 250 014e C0F20003 		movt	r3, #:upper16:SystemCoreClock	@ tmp174,
 251 0152 1A60     		str	r2, [r3, #0]	@ SystemCoreClock.6, SystemCoreClock
 342:cmsis/device/system_stm32f10x.c ****       }
 343:cmsis/device/system_stm32f10x.c ****       else
 344:cmsis/device/system_stm32f10x.c ****       {
 345:cmsis/device/system_stm32f10x.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 346:cmsis/device/system_stm32f10x.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 347:cmsis/device/system_stm32f10x.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 348:cmsis/device/system_stm32f10x.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 349:cmsis/device/system_stm32f10x.c ****  #else
 350:cmsis/device/system_stm32f10x.c ****         /* HSE selected as PLL clock entry */
 351:cmsis/device/system_stm32f10x.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 352:cmsis/device/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 353:cmsis/device/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE >> 1) * pllmull;
 354:cmsis/device/system_stm32f10x.c ****         }
 355:cmsis/device/system_stm32f10x.c ****         else
 356:cmsis/device/system_stm32f10x.c ****         {
 357:cmsis/device/system_stm32f10x.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 358:cmsis/device/system_stm32f10x.c ****         }
 359:cmsis/device/system_stm32f10x.c ****  #endif
 360:cmsis/device/system_stm32f10x.c ****       }
 361:cmsis/device/system_stm32f10x.c **** #else
 362:cmsis/device/system_stm32f10x.c ****       pllmull = pllmull >> 18;
 363:cmsis/device/system_stm32f10x.c ****       
 364:cmsis/device/system_stm32f10x.c ****       if (pllmull != 0x0D)
 365:cmsis/device/system_stm32f10x.c ****       {
 366:cmsis/device/system_stm32f10x.c ****          pllmull += 2;
 367:cmsis/device/system_stm32f10x.c ****       }
 368:cmsis/device/system_stm32f10x.c ****       else
 369:cmsis/device/system_stm32f10x.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 370:cmsis/device/system_stm32f10x.c ****         pllmull = 13 / 2; 
 371:cmsis/device/system_stm32f10x.c ****       }
 372:cmsis/device/system_stm32f10x.c ****             
 373:cmsis/device/system_stm32f10x.c ****       if (pllsource == 0x00)
 374:cmsis/device/system_stm32f10x.c ****       {
 375:cmsis/device/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 376:cmsis/device/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
ARM GAS  /tmp/ccBweOod.s 			page 12


 377:cmsis/device/system_stm32f10x.c ****       }
 378:cmsis/device/system_stm32f10x.c ****       else
 379:cmsis/device/system_stm32f10x.c ****       {/* PREDIV1 selected as PLL clock entry */
 380:cmsis/device/system_stm32f10x.c ****         
 381:cmsis/device/system_stm32f10x.c ****         /* Get PREDIV1 clock source and division factor */
 382:cmsis/device/system_stm32f10x.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 383:cmsis/device/system_stm32f10x.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 384:cmsis/device/system_stm32f10x.c ****         
 385:cmsis/device/system_stm32f10x.c ****         if (prediv1source == 0)
 386:cmsis/device/system_stm32f10x.c ****         { 
 387:cmsis/device/system_stm32f10x.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 388:cmsis/device/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 389:cmsis/device/system_stm32f10x.c ****         }
 390:cmsis/device/system_stm32f10x.c ****         else
 391:cmsis/device/system_stm32f10x.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 392:cmsis/device/system_stm32f10x.c ****           
 393:cmsis/device/system_stm32f10x.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 394:cmsis/device/system_stm32f10x.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4) + 1;
 395:cmsis/device/system_stm32f10x.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8 ) + 2; 
 396:cmsis/device/system_stm32f10x.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 397:cmsis/device/system_stm32f10x.c ****         }
 398:cmsis/device/system_stm32f10x.c ****       }
 399:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */ 
 400:cmsis/device/system_stm32f10x.c ****       break;
 252              		.loc 1 400 0
 253 0154 2CE0     		b	.L7	@
 254              	.L8:
 351:cmsis/device/system_stm32f10x.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 255              		.loc 1 351 0
 256 0156 4FF48053 		mov	r3, #4096	@ D.5737,
 257 015a C4F20203 		movt	r3, 16386	@ D.5737,
 258 015e 5B68     		ldr	r3, [r3, #4]	@ tmp175,
 259 0160 03F40033 		and	r3, r3, #131072	@ D.5739, D.5738,
 260 0164 002B     		cmp	r3, #0	@ D.5739,
 261 0166 0CD0     		beq	.L10	@,
 353:cmsis/device/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE >> 1) * pllmull;
 262              		.loc 1 353 0
 263 0168 BA68     		ldr	r2, [r7, #8]	@ tmp176, pllmull
 264 016a 4FF41063 		mov	r3, #2304	@ tmp177,
 265 016e C0F23D03 		movt	r3, 61	@ tmp177,
 266 0172 03FB02F2 		mul	r2, r3, r2	@ SystemCoreClock.7, tmp177, tmp176
 267 0176 40F20003 		movw	r3, #:lower16:SystemCoreClock	@ tmp178,
 268 017a C0F20003 		movt	r3, #:upper16:SystemCoreClock	@ tmp178,
 269 017e 1A60     		str	r2, [r3, #0]	@ SystemCoreClock.7, SystemCoreClock
 270              		.loc 1 400 0
 271 0180 16E0     		b	.L7	@
 272              	.L10:
 357:cmsis/device/system_stm32f10x.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 273              		.loc 1 357 0
 274 0182 BA68     		ldr	r2, [r7, #8]	@ tmp179, pllmull
 275 0184 4FF49053 		mov	r3, #4608	@ tmp180,
 276 0188 C0F27A03 		movt	r3, 122	@ tmp180,
 277 018c 03FB02F2 		mul	r2, r3, r2	@ SystemCoreClock.8, tmp180, tmp179
 278 0190 40F20003 		movw	r3, #:lower16:SystemCoreClock	@ tmp181,
 279 0194 C0F20003 		movt	r3, #:upper16:SystemCoreClock	@ tmp181,
 280 0198 1A60     		str	r2, [r3, #0]	@ SystemCoreClock.8, SystemCoreClock
 281              		.loc 1 400 0
ARM GAS  /tmp/ccBweOod.s 			page 13


 282 019a 09E0     		b	.L7	@
 283              	.L11:
 401:cmsis/device/system_stm32f10x.c **** 
 402:cmsis/device/system_stm32f10x.c ****     default:
 403:cmsis/device/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 284              		.loc 1 403 0
 285 019c 40F20003 		movw	r3, #:lower16:SystemCoreClock	@ tmp182,
 286 01a0 C0F20003 		movt	r3, #:upper16:SystemCoreClock	@ tmp182,
 287 01a4 4FF49052 		mov	r2, #4608	@ tmp183,
 288 01a8 C0F27A02 		movt	r2, 122	@ tmp183,
 289 01ac 1A60     		str	r2, [r3, #0]	@ tmp183, SystemCoreClock
 404:cmsis/device/system_stm32f10x.c ****       break;
 290              		.loc 1 404 0
 291 01ae 00BF     		nop
 292              	.L7:
 405:cmsis/device/system_stm32f10x.c ****   }
 406:cmsis/device/system_stm32f10x.c ****   
 407:cmsis/device/system_stm32f10x.c ****   /* Compute HCLK clock frequency ----------------*/
 408:cmsis/device/system_stm32f10x.c ****   /* Get HCLK prescaler */
 409:cmsis/device/system_stm32f10x.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 293              		.loc 1 409 0
 294 01b0 4FF48053 		mov	r3, #4096	@ D.5745,
 295 01b4 C4F20203 		movt	r3, 16386	@ D.5745,
 296 01b8 5B68     		ldr	r3, [r3, #4]	@ tmp184,
 297 01ba 03F0F003 		and	r3, r3, #240	@ D.5747, D.5746,
 298 01be 4FEA1312 		lsr	r2, r3, #4	@ D.5748, D.5747,
 299 01c2 40F20003 		movw	r3, #:lower16:AHBPrescTable	@ tmp185,
 300 01c6 C0F20003 		movt	r3, #:upper16:AHBPrescTable	@ tmp185,
 301 01ca 9B5C     		ldrb	r3, [r3, r2]	@ tmp186,* D.5748
 302 01cc DBB2     		uxtb	r3, r3	@ D.5749, tmp186
 303 01ce FB60     		str	r3, [r7, #12]	@ D.5749, tmp
 410:cmsis/device/system_stm32f10x.c ****   /* HCLK clock frequency */
 411:cmsis/device/system_stm32f10x.c ****   SystemCoreClock >>= tmp;  
 304              		.loc 1 411 0
 305 01d0 40F20003 		movw	r3, #:lower16:SystemCoreClock	@ tmp187,
 306 01d4 C0F20003 		movt	r3, #:upper16:SystemCoreClock	@ tmp187,
 307 01d8 1A68     		ldr	r2, [r3, #0]	@ SystemCoreClock.9, SystemCoreClock
 308 01da FB68     		ldr	r3, [r7, #12]	@ tmp.10, tmp
 309 01dc 22FA03F2 		lsr	r2, r2, r3	@ SystemCoreClock.11, SystemCoreClock.9, tmp.10
 310 01e0 40F20003 		movw	r3, #:lower16:SystemCoreClock	@ tmp188,
 311 01e4 C0F20003 		movt	r3, #:upper16:SystemCoreClock	@ tmp188,
 312 01e8 1A60     		str	r2, [r3, #0]	@ SystemCoreClock.11, SystemCoreClock
 412:cmsis/device/system_stm32f10x.c **** }
 313              		.loc 1 412 0
 314 01ea 07F11407 		add	r7, r7, #20	@,,
 315 01ee BD46     		mov	sp, r7
 316 01f0 80BC     		pop	{r7}
 317 01f2 7047     		bx	lr
 318              		.cfi_endproc
 319              	.LFE56:
 320              		.size	SystemCoreClockUpdate, .-SystemCoreClockUpdate
 321              		.align	2
 322              		.thumb
 323              		.thumb_func
 324              		.type	SetSysClock, %function
 325              	SetSysClock:
 326              	.LFB57:
ARM GAS  /tmp/ccBweOod.s 			page 14


 413:cmsis/device/system_stm32f10x.c **** 
 414:cmsis/device/system_stm32f10x.c **** /**
 415:cmsis/device/system_stm32f10x.c ****   * @brief  Configures the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers.
 416:cmsis/device/system_stm32f10x.c ****   * @param  None
 417:cmsis/device/system_stm32f10x.c ****   * @retval None
 418:cmsis/device/system_stm32f10x.c ****   */
 419:cmsis/device/system_stm32f10x.c **** static void SetSysClock(void)
 420:cmsis/device/system_stm32f10x.c **** {
 327              		.loc 1 420 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 1, uses_anonymous_args = 0
 331 01f4 80B5     		push	{r7, lr}	@
 332              	.LCFI5:
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 14, -4
 335              		.cfi_offset 7, -8
 336 01f6 00AF     		add	r7, sp, #0	@,,
 337              	.LCFI6:
 338              		.cfi_def_cfa_register 7
 421:cmsis/device/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 422:cmsis/device/system_stm32f10x.c ****   SetSysClockToHSE();
 423:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 424:cmsis/device/system_stm32f10x.c ****   SetSysClockTo24();
 425:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 426:cmsis/device/system_stm32f10x.c ****   SetSysClockTo36();
 427:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 428:cmsis/device/system_stm32f10x.c ****   SetSysClockTo48();
 429:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 430:cmsis/device/system_stm32f10x.c ****   SetSysClockTo56();  
 431:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 432:cmsis/device/system_stm32f10x.c ****   SetSysClockTo72();
 339              		.loc 1 432 0
 340 01f8 00F002F8 		bl	SetSysClockTo72	@
 433:cmsis/device/system_stm32f10x.c **** #endif
 434:cmsis/device/system_stm32f10x.c ****  
 435:cmsis/device/system_stm32f10x.c ****  /* If none of the define above is enabled, the HSI is used as System clock
 436:cmsis/device/system_stm32f10x.c ****     source (default after reset) */ 
 437:cmsis/device/system_stm32f10x.c **** }
 341              		.loc 1 437 0
 342 01fc 80BD     		pop	{r7, pc}	@
 343              		.cfi_endproc
 344              	.LFE57:
 345              		.size	SetSysClock, .-SetSysClock
 346 01fe 00BF     		.align	2
 347              		.thumb
 348              		.thumb_func
 349              		.type	SetSysClockTo72, %function
 350              	SetSysClockTo72:
 351              	.LFB58:
 438:cmsis/device/system_stm32f10x.c **** 
 439:cmsis/device/system_stm32f10x.c **** /**
 440:cmsis/device/system_stm32f10x.c ****   * @brief  Setup the external memory controller. Called in startup_stm32f10x.s 
 441:cmsis/device/system_stm32f10x.c ****   *          before jump to __main
 442:cmsis/device/system_stm32f10x.c ****   * @param  None
 443:cmsis/device/system_stm32f10x.c ****   * @retval None
 444:cmsis/device/system_stm32f10x.c ****   */ 
ARM GAS  /tmp/ccBweOod.s 			page 15


 445:cmsis/device/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 446:cmsis/device/system_stm32f10x.c **** /**
 447:cmsis/device/system_stm32f10x.c ****   * @brief  Setup the external memory controller. 
 448:cmsis/device/system_stm32f10x.c ****   *         Called in startup_stm32f10x_xx.s/.c before jump to main.
 449:cmsis/device/system_stm32f10x.c ****   * 	      This function configures the external SRAM mounted on STM3210E-EVAL
 450:cmsis/device/system_stm32f10x.c ****   *         board (STM32 High density devices). This SRAM will be used as program
 451:cmsis/device/system_stm32f10x.c ****   *         data memory (including heap and stack).
 452:cmsis/device/system_stm32f10x.c ****   * @param  None
 453:cmsis/device/system_stm32f10x.c ****   * @retval None
 454:cmsis/device/system_stm32f10x.c ****   */ 
 455:cmsis/device/system_stm32f10x.c **** void SystemInit_ExtMemCtl(void) 
 456:cmsis/device/system_stm32f10x.c **** {
 457:cmsis/device/system_stm32f10x.c **** /*!< FSMC Bank1 NOR/SRAM3 is used for the STM3210E-EVAL, if another Bank is 
 458:cmsis/device/system_stm32f10x.c ****   required, then adjust the Register Addresses */
 459:cmsis/device/system_stm32f10x.c **** 
 460:cmsis/device/system_stm32f10x.c ****   /* Enable FSMC clock */
 461:cmsis/device/system_stm32f10x.c ****   RCC->AHBENR = 0x00000114;
 462:cmsis/device/system_stm32f10x.c ****   
 463:cmsis/device/system_stm32f10x.c ****   /* Enable GPIOD, GPIOE, GPIOF and GPIOG clocks */  
 464:cmsis/device/system_stm32f10x.c ****   RCC->APB2ENR = 0x000001E0;
 465:cmsis/device/system_stm32f10x.c ****   
 466:cmsis/device/system_stm32f10x.c **** /* ---------------  SRAM Data lines, NOE and NWE configuration ---------------*/
 467:cmsis/device/system_stm32f10x.c **** /*----------------  SRAM Address lines configuration -------------------------*/
 468:cmsis/device/system_stm32f10x.c **** /*----------------  NOE and NWE configuration --------------------------------*/  
 469:cmsis/device/system_stm32f10x.c **** /*----------------  NE3 configuration ----------------------------------------*/
 470:cmsis/device/system_stm32f10x.c **** /*----------------  NBL0, NBL1 configuration ---------------------------------*/
 471:cmsis/device/system_stm32f10x.c ****   
 472:cmsis/device/system_stm32f10x.c ****   GPIOD->CRL = 0x44BB44BB;  
 473:cmsis/device/system_stm32f10x.c ****   GPIOD->CRH = 0xBBBBBBBB;
 474:cmsis/device/system_stm32f10x.c **** 
 475:cmsis/device/system_stm32f10x.c ****   GPIOE->CRL = 0xB44444BB;  
 476:cmsis/device/system_stm32f10x.c ****   GPIOE->CRH = 0xBBBBBBBB;
 477:cmsis/device/system_stm32f10x.c **** 
 478:cmsis/device/system_stm32f10x.c ****   GPIOF->CRL = 0x44BBBBBB;  
 479:cmsis/device/system_stm32f10x.c ****   GPIOF->CRH = 0xBBBB4444;
 480:cmsis/device/system_stm32f10x.c **** 
 481:cmsis/device/system_stm32f10x.c ****   GPIOG->CRL = 0x44BBBBBB;  
 482:cmsis/device/system_stm32f10x.c ****   GPIOG->CRH = 0x44444B44;
 483:cmsis/device/system_stm32f10x.c ****    
 484:cmsis/device/system_stm32f10x.c **** /*----------------  FSMC Configuration ---------------------------------------*/  
 485:cmsis/device/system_stm32f10x.c **** /*----------------  Enable FSMC Bank1_SRAM Bank ------------------------------*/
 486:cmsis/device/system_stm32f10x.c ****   
 487:cmsis/device/system_stm32f10x.c ****   FSMC_Bank1->BTCR[4] = 0x00001011;
 488:cmsis/device/system_stm32f10x.c ****   FSMC_Bank1->BTCR[5] = 0x00000200;
 489:cmsis/device/system_stm32f10x.c **** }
 490:cmsis/device/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 491:cmsis/device/system_stm32f10x.c **** 
 492:cmsis/device/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 493:cmsis/device/system_stm32f10x.c **** /**
 494:cmsis/device/system_stm32f10x.c ****   * @brief  Selects HSE as System clock source and configure HCLK, PCLK2
 495:cmsis/device/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 496:cmsis/device/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 497:cmsis/device/system_stm32f10x.c ****   * @param  None
 498:cmsis/device/system_stm32f10x.c ****   * @retval None
 499:cmsis/device/system_stm32f10x.c ****   */
 500:cmsis/device/system_stm32f10x.c **** static void SetSysClockToHSE(void)
 501:cmsis/device/system_stm32f10x.c **** {
ARM GAS  /tmp/ccBweOod.s 			page 16


 502:cmsis/device/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 503:cmsis/device/system_stm32f10x.c ****   
 504:cmsis/device/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 505:cmsis/device/system_stm32f10x.c ****   /* Enable HSE */    
 506:cmsis/device/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 507:cmsis/device/system_stm32f10x.c ****  
 508:cmsis/device/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 509:cmsis/device/system_stm32f10x.c ****   do
 510:cmsis/device/system_stm32f10x.c ****   {
 511:cmsis/device/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 512:cmsis/device/system_stm32f10x.c ****     StartUpCounter++;  
 513:cmsis/device/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 514:cmsis/device/system_stm32f10x.c **** 
 515:cmsis/device/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 516:cmsis/device/system_stm32f10x.c ****   {
 517:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 518:cmsis/device/system_stm32f10x.c ****   }
 519:cmsis/device/system_stm32f10x.c ****   else
 520:cmsis/device/system_stm32f10x.c ****   {
 521:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 522:cmsis/device/system_stm32f10x.c ****   }  
 523:cmsis/device/system_stm32f10x.c **** 
 524:cmsis/device/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 525:cmsis/device/system_stm32f10x.c ****   {
 526:cmsis/device/system_stm32f10x.c **** 
 527:cmsis/device/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL
 528:cmsis/device/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 529:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 530:cmsis/device/system_stm32f10x.c **** 
 531:cmsis/device/system_stm32f10x.c ****     /* Flash 0 wait state */
 532:cmsis/device/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 533:cmsis/device/system_stm32f10x.c **** 
 534:cmsis/device/system_stm32f10x.c **** #ifndef STM32F10X_CL
 535:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 536:cmsis/device/system_stm32f10x.c **** #else
 537:cmsis/device/system_stm32f10x.c ****     if (HSE_VALUE <= 24000000)
 538:cmsis/device/system_stm32f10x.c **** 	{
 539:cmsis/device/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 540:cmsis/device/system_stm32f10x.c **** 	}
 541:cmsis/device/system_stm32f10x.c **** 	else
 542:cmsis/device/system_stm32f10x.c **** 	{
 543:cmsis/device/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;
 544:cmsis/device/system_stm32f10x.c **** 	}
 545:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 546:cmsis/device/system_stm32f10x.c **** #endif
 547:cmsis/device/system_stm32f10x.c ****  
 548:cmsis/device/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 549:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 550:cmsis/device/system_stm32f10x.c ****       
 551:cmsis/device/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 552:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 553:cmsis/device/system_stm32f10x.c ****     
 554:cmsis/device/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 555:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 556:cmsis/device/system_stm32f10x.c ****     
 557:cmsis/device/system_stm32f10x.c ****     /* Select HSE as system clock source */
 558:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
ARM GAS  /tmp/ccBweOod.s 			page 17


 559:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_HSE;    
 560:cmsis/device/system_stm32f10x.c **** 
 561:cmsis/device/system_stm32f10x.c ****     /* Wait till HSE is used as system clock source */
 562:cmsis/device/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x04)
 563:cmsis/device/system_stm32f10x.c ****     {
 564:cmsis/device/system_stm32f10x.c ****     }
 565:cmsis/device/system_stm32f10x.c ****   }
 566:cmsis/device/system_stm32f10x.c ****   else
 567:cmsis/device/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 568:cmsis/device/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 569:cmsis/device/system_stm32f10x.c ****   }  
 570:cmsis/device/system_stm32f10x.c **** }
 571:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 572:cmsis/device/system_stm32f10x.c **** /**
 573:cmsis/device/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 24MHz and configure HCLK, PCLK2 
 574:cmsis/device/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 575:cmsis/device/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 576:cmsis/device/system_stm32f10x.c ****   * @param  None
 577:cmsis/device/system_stm32f10x.c ****   * @retval None
 578:cmsis/device/system_stm32f10x.c ****   */
 579:cmsis/device/system_stm32f10x.c **** static void SetSysClockTo24(void)
 580:cmsis/device/system_stm32f10x.c **** {
 581:cmsis/device/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 582:cmsis/device/system_stm32f10x.c ****   
 583:cmsis/device/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 584:cmsis/device/system_stm32f10x.c ****   /* Enable HSE */    
 585:cmsis/device/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 586:cmsis/device/system_stm32f10x.c ****  
 587:cmsis/device/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 588:cmsis/device/system_stm32f10x.c ****   do
 589:cmsis/device/system_stm32f10x.c ****   {
 590:cmsis/device/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 591:cmsis/device/system_stm32f10x.c ****     StartUpCounter++;  
 592:cmsis/device/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 593:cmsis/device/system_stm32f10x.c **** 
 594:cmsis/device/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 595:cmsis/device/system_stm32f10x.c ****   {
 596:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 597:cmsis/device/system_stm32f10x.c ****   }
 598:cmsis/device/system_stm32f10x.c ****   else
 599:cmsis/device/system_stm32f10x.c ****   {
 600:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 601:cmsis/device/system_stm32f10x.c ****   }  
 602:cmsis/device/system_stm32f10x.c **** 
 603:cmsis/device/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 604:cmsis/device/system_stm32f10x.c ****   {
 605:cmsis/device/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL 
 606:cmsis/device/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 607:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 608:cmsis/device/system_stm32f10x.c **** 
 609:cmsis/device/system_stm32f10x.c ****     /* Flash 0 wait state */
 610:cmsis/device/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 611:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;    
 612:cmsis/device/system_stm32f10x.c **** #endif
 613:cmsis/device/system_stm32f10x.c ****  
 614:cmsis/device/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 615:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
ARM GAS  /tmp/ccBweOod.s 			page 18


 616:cmsis/device/system_stm32f10x.c ****       
 617:cmsis/device/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 618:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 619:cmsis/device/system_stm32f10x.c ****     
 620:cmsis/device/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 621:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 622:cmsis/device/system_stm32f10x.c ****     
 623:cmsis/device/system_stm32f10x.c **** #ifdef STM32F10X_CL
 624:cmsis/device/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 625:cmsis/device/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 24 MHz */ 
 626:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 627:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 628:cmsis/device/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 629:cmsis/device/system_stm32f10x.c **** 
 630:cmsis/device/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 631:cmsis/device/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */       
 632:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 633:cmsis/device/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 634:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 635:cmsis/device/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 636:cmsis/device/system_stm32f10x.c ****   
 637:cmsis/device/system_stm32f10x.c ****     /* Enable PLL2 */
 638:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 639:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 640:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 641:cmsis/device/system_stm32f10x.c ****     {
 642:cmsis/device/system_stm32f10x.c ****     }   
 643:cmsis/device/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 644:cmsis/device/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 645:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 646:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_PREDIV1 | RCC_CFGR_PLLXTPRE_PREDIV1_Div2 | RCC_CFGR_PLL
 647:cmsis/device/system_stm32f10x.c **** #else    
 648:cmsis/device/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 649:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 650:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL6);
 651:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 652:cmsis/device/system_stm32f10x.c **** 
 653:cmsis/device/system_stm32f10x.c ****     /* Enable PLL */
 654:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 655:cmsis/device/system_stm32f10x.c **** 
 656:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is ready */
 657:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 658:cmsis/device/system_stm32f10x.c ****     {
 659:cmsis/device/system_stm32f10x.c ****     }
 660:cmsis/device/system_stm32f10x.c **** 
 661:cmsis/device/system_stm32f10x.c ****     /* Select PLL as system clock source */
 662:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 663:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 664:cmsis/device/system_stm32f10x.c **** 
 665:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 666:cmsis/device/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 667:cmsis/device/system_stm32f10x.c ****     {
 668:cmsis/device/system_stm32f10x.c ****     }
 669:cmsis/device/system_stm32f10x.c ****   }
 670:cmsis/device/system_stm32f10x.c ****   else
 671:cmsis/device/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 672:cmsis/device/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
ARM GAS  /tmp/ccBweOod.s 			page 19


 673:cmsis/device/system_stm32f10x.c ****   } 
 674:cmsis/device/system_stm32f10x.c **** }
 675:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 676:cmsis/device/system_stm32f10x.c **** /**
 677:cmsis/device/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 36MHz and configure HCLK, PCLK2 
 678:cmsis/device/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 679:cmsis/device/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 680:cmsis/device/system_stm32f10x.c ****   * @param  None
 681:cmsis/device/system_stm32f10x.c ****   * @retval None
 682:cmsis/device/system_stm32f10x.c ****   */
 683:cmsis/device/system_stm32f10x.c **** static void SetSysClockTo36(void)
 684:cmsis/device/system_stm32f10x.c **** {
 685:cmsis/device/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 686:cmsis/device/system_stm32f10x.c ****   
 687:cmsis/device/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 688:cmsis/device/system_stm32f10x.c ****   /* Enable HSE */    
 689:cmsis/device/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 690:cmsis/device/system_stm32f10x.c ****  
 691:cmsis/device/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 692:cmsis/device/system_stm32f10x.c ****   do
 693:cmsis/device/system_stm32f10x.c ****   {
 694:cmsis/device/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 695:cmsis/device/system_stm32f10x.c ****     StartUpCounter++;  
 696:cmsis/device/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 697:cmsis/device/system_stm32f10x.c **** 
 698:cmsis/device/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 699:cmsis/device/system_stm32f10x.c ****   {
 700:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 701:cmsis/device/system_stm32f10x.c ****   }
 702:cmsis/device/system_stm32f10x.c ****   else
 703:cmsis/device/system_stm32f10x.c ****   {
 704:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 705:cmsis/device/system_stm32f10x.c ****   }  
 706:cmsis/device/system_stm32f10x.c **** 
 707:cmsis/device/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 708:cmsis/device/system_stm32f10x.c ****   {
 709:cmsis/device/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 710:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 711:cmsis/device/system_stm32f10x.c **** 
 712:cmsis/device/system_stm32f10x.c ****     /* Flash 1 wait state */
 713:cmsis/device/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 714:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;    
 715:cmsis/device/system_stm32f10x.c ****  
 716:cmsis/device/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 717:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 718:cmsis/device/system_stm32f10x.c ****       
 719:cmsis/device/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 720:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 721:cmsis/device/system_stm32f10x.c ****     
 722:cmsis/device/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 723:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 724:cmsis/device/system_stm32f10x.c ****     
 725:cmsis/device/system_stm32f10x.c **** #ifdef STM32F10X_CL
 726:cmsis/device/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 727:cmsis/device/system_stm32f10x.c ****     
 728:cmsis/device/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 9 = 36 MHz */ 
 729:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
ARM GAS  /tmp/ccBweOod.s 			page 20


 730:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 731:cmsis/device/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL9); 
 732:cmsis/device/system_stm32f10x.c **** 
 733:cmsis/device/system_stm32f10x.c **** 	/*!< PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 734:cmsis/device/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */
 735:cmsis/device/system_stm32f10x.c ****         
 736:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 737:cmsis/device/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 738:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 739:cmsis/device/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 740:cmsis/device/system_stm32f10x.c ****   
 741:cmsis/device/system_stm32f10x.c ****     /* Enable PLL2 */
 742:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 743:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 744:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 745:cmsis/device/system_stm32f10x.c ****     {
 746:cmsis/device/system_stm32f10x.c ****     }
 747:cmsis/device/system_stm32f10x.c ****     
 748:cmsis/device/system_stm32f10x.c **** #else    
 749:cmsis/device/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = (HSE / 2) * 9 = 36 MHz */
 750:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 751:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL9);
 752:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 753:cmsis/device/system_stm32f10x.c **** 
 754:cmsis/device/system_stm32f10x.c ****     /* Enable PLL */
 755:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 756:cmsis/device/system_stm32f10x.c **** 
 757:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is ready */
 758:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 759:cmsis/device/system_stm32f10x.c ****     {
 760:cmsis/device/system_stm32f10x.c ****     }
 761:cmsis/device/system_stm32f10x.c **** 
 762:cmsis/device/system_stm32f10x.c ****     /* Select PLL as system clock source */
 763:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 764:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 765:cmsis/device/system_stm32f10x.c **** 
 766:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 767:cmsis/device/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 768:cmsis/device/system_stm32f10x.c ****     {
 769:cmsis/device/system_stm32f10x.c ****     }
 770:cmsis/device/system_stm32f10x.c ****   }
 771:cmsis/device/system_stm32f10x.c ****   else
 772:cmsis/device/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 773:cmsis/device/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 774:cmsis/device/system_stm32f10x.c ****   } 
 775:cmsis/device/system_stm32f10x.c **** }
 776:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 777:cmsis/device/system_stm32f10x.c **** /**
 778:cmsis/device/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 48MHz and configure HCLK, PCLK2 
 779:cmsis/device/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 780:cmsis/device/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 781:cmsis/device/system_stm32f10x.c ****   * @param  None
 782:cmsis/device/system_stm32f10x.c ****   * @retval None
 783:cmsis/device/system_stm32f10x.c ****   */
 784:cmsis/device/system_stm32f10x.c **** static void SetSysClockTo48(void)
 785:cmsis/device/system_stm32f10x.c **** {
 786:cmsis/device/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
ARM GAS  /tmp/ccBweOod.s 			page 21


 787:cmsis/device/system_stm32f10x.c ****   
 788:cmsis/device/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 789:cmsis/device/system_stm32f10x.c ****   /* Enable HSE */    
 790:cmsis/device/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 791:cmsis/device/system_stm32f10x.c ****  
 792:cmsis/device/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 793:cmsis/device/system_stm32f10x.c ****   do
 794:cmsis/device/system_stm32f10x.c ****   {
 795:cmsis/device/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 796:cmsis/device/system_stm32f10x.c ****     StartUpCounter++;  
 797:cmsis/device/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 798:cmsis/device/system_stm32f10x.c **** 
 799:cmsis/device/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 800:cmsis/device/system_stm32f10x.c ****   {
 801:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 802:cmsis/device/system_stm32f10x.c ****   }
 803:cmsis/device/system_stm32f10x.c ****   else
 804:cmsis/device/system_stm32f10x.c ****   {
 805:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 806:cmsis/device/system_stm32f10x.c ****   }  
 807:cmsis/device/system_stm32f10x.c **** 
 808:cmsis/device/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 809:cmsis/device/system_stm32f10x.c ****   {
 810:cmsis/device/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 811:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 812:cmsis/device/system_stm32f10x.c **** 
 813:cmsis/device/system_stm32f10x.c ****     /* Flash 1 wait state */
 814:cmsis/device/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 815:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;    
 816:cmsis/device/system_stm32f10x.c ****  
 817:cmsis/device/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 818:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 819:cmsis/device/system_stm32f10x.c ****       
 820:cmsis/device/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 821:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 822:cmsis/device/system_stm32f10x.c ****     
 823:cmsis/device/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 824:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 825:cmsis/device/system_stm32f10x.c ****     
 826:cmsis/device/system_stm32f10x.c **** #ifdef STM32F10X_CL
 827:cmsis/device/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 828:cmsis/device/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 829:cmsis/device/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
 830:cmsis/device/system_stm32f10x.c ****         
 831:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 832:cmsis/device/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 833:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 834:cmsis/device/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
 835:cmsis/device/system_stm32f10x.c ****   
 836:cmsis/device/system_stm32f10x.c ****     /* Enable PLL2 */
 837:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 838:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 839:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 840:cmsis/device/system_stm32f10x.c ****     {
 841:cmsis/device/system_stm32f10x.c ****     }
 842:cmsis/device/system_stm32f10x.c ****     
 843:cmsis/device/system_stm32f10x.c ****    
ARM GAS  /tmp/ccBweOod.s 			page 22


 844:cmsis/device/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 48 MHz */ 
 845:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 846:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 847:cmsis/device/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 848:cmsis/device/system_stm32f10x.c **** #else    
 849:cmsis/device/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = HSE * 6 = 48 MHz */
 850:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 851:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL6);
 852:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 853:cmsis/device/system_stm32f10x.c **** 
 854:cmsis/device/system_stm32f10x.c ****     /* Enable PLL */
 855:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 856:cmsis/device/system_stm32f10x.c **** 
 857:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is ready */
 858:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 859:cmsis/device/system_stm32f10x.c ****     {
 860:cmsis/device/system_stm32f10x.c ****     }
 861:cmsis/device/system_stm32f10x.c **** 
 862:cmsis/device/system_stm32f10x.c ****     /* Select PLL as system clock source */
 863:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 864:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 865:cmsis/device/system_stm32f10x.c **** 
 866:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 867:cmsis/device/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 868:cmsis/device/system_stm32f10x.c ****     {
 869:cmsis/device/system_stm32f10x.c ****     }
 870:cmsis/device/system_stm32f10x.c ****   }
 871:cmsis/device/system_stm32f10x.c ****   else
 872:cmsis/device/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 873:cmsis/device/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 874:cmsis/device/system_stm32f10x.c ****   } 
 875:cmsis/device/system_stm32f10x.c **** }
 876:cmsis/device/system_stm32f10x.c **** 
 877:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 878:cmsis/device/system_stm32f10x.c **** /**
 879:cmsis/device/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 56MHz and configure HCLK, PCLK2 
 880:cmsis/device/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 881:cmsis/device/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 882:cmsis/device/system_stm32f10x.c ****   * @param  None
 883:cmsis/device/system_stm32f10x.c ****   * @retval None
 884:cmsis/device/system_stm32f10x.c ****   */
 885:cmsis/device/system_stm32f10x.c **** static void SetSysClockTo56(void)
 886:cmsis/device/system_stm32f10x.c **** {
 887:cmsis/device/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 888:cmsis/device/system_stm32f10x.c ****   
 889:cmsis/device/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/   
 890:cmsis/device/system_stm32f10x.c ****   /* Enable HSE */    
 891:cmsis/device/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 892:cmsis/device/system_stm32f10x.c ****  
 893:cmsis/device/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 894:cmsis/device/system_stm32f10x.c ****   do
 895:cmsis/device/system_stm32f10x.c ****   {
 896:cmsis/device/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 897:cmsis/device/system_stm32f10x.c ****     StartUpCounter++;  
 898:cmsis/device/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 899:cmsis/device/system_stm32f10x.c **** 
 900:cmsis/device/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
ARM GAS  /tmp/ccBweOod.s 			page 23


 901:cmsis/device/system_stm32f10x.c ****   {
 902:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 903:cmsis/device/system_stm32f10x.c ****   }
 904:cmsis/device/system_stm32f10x.c ****   else
 905:cmsis/device/system_stm32f10x.c ****   {
 906:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 907:cmsis/device/system_stm32f10x.c ****   }  
 908:cmsis/device/system_stm32f10x.c **** 
 909:cmsis/device/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 910:cmsis/device/system_stm32f10x.c ****   {
 911:cmsis/device/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 912:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 913:cmsis/device/system_stm32f10x.c **** 
 914:cmsis/device/system_stm32f10x.c ****     /* Flash 2 wait state */
 915:cmsis/device/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 916:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 917:cmsis/device/system_stm32f10x.c ****  
 918:cmsis/device/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 919:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 920:cmsis/device/system_stm32f10x.c ****       
 921:cmsis/device/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 922:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 923:cmsis/device/system_stm32f10x.c ****     
 924:cmsis/device/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 925:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 926:cmsis/device/system_stm32f10x.c **** 
 927:cmsis/device/system_stm32f10x.c **** #ifdef STM32F10X_CL
 928:cmsis/device/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 929:cmsis/device/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 930:cmsis/device/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
 931:cmsis/device/system_stm32f10x.c ****         
 932:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 933:cmsis/device/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 934:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 935:cmsis/device/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
 936:cmsis/device/system_stm32f10x.c ****   
 937:cmsis/device/system_stm32f10x.c ****     /* Enable PLL2 */
 938:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 939:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 940:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 941:cmsis/device/system_stm32f10x.c ****     {
 942:cmsis/device/system_stm32f10x.c ****     }
 943:cmsis/device/system_stm32f10x.c ****     
 944:cmsis/device/system_stm32f10x.c ****    
 945:cmsis/device/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 7 = 56 MHz */ 
 946:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 947:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 948:cmsis/device/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL7); 
 949:cmsis/device/system_stm32f10x.c **** #else     
 950:cmsis/device/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = HSE * 7 = 56 MHz */
 951:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 952:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL7);
 953:cmsis/device/system_stm32f10x.c **** 
 954:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 955:cmsis/device/system_stm32f10x.c **** 
 956:cmsis/device/system_stm32f10x.c ****     /* Enable PLL */
 957:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
ARM GAS  /tmp/ccBweOod.s 			page 24


 958:cmsis/device/system_stm32f10x.c **** 
 959:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is ready */
 960:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 961:cmsis/device/system_stm32f10x.c ****     {
 962:cmsis/device/system_stm32f10x.c ****     }
 963:cmsis/device/system_stm32f10x.c **** 
 964:cmsis/device/system_stm32f10x.c ****     /* Select PLL as system clock source */
 965:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 966:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 967:cmsis/device/system_stm32f10x.c **** 
 968:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 969:cmsis/device/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 970:cmsis/device/system_stm32f10x.c ****     {
 971:cmsis/device/system_stm32f10x.c ****     }
 972:cmsis/device/system_stm32f10x.c ****   }
 973:cmsis/device/system_stm32f10x.c ****   else
 974:cmsis/device/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 975:cmsis/device/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 976:cmsis/device/system_stm32f10x.c ****   } 
 977:cmsis/device/system_stm32f10x.c **** }
 978:cmsis/device/system_stm32f10x.c **** 
 979:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 980:cmsis/device/system_stm32f10x.c **** /**
 981:cmsis/device/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 72MHz and configure HCLK, PCLK2 
 982:cmsis/device/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 983:cmsis/device/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 984:cmsis/device/system_stm32f10x.c ****   * @param  None
 985:cmsis/device/system_stm32f10x.c ****   * @retval None
 986:cmsis/device/system_stm32f10x.c ****   */
 987:cmsis/device/system_stm32f10x.c **** static void SetSysClockTo72(void)
 988:cmsis/device/system_stm32f10x.c **** {
 352              		.loc 1 988 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 8
 355              		@ frame_needed = 1, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 357 0200 80B4     		push	{r7}	@
 358              	.LCFI7:
 359              		.cfi_def_cfa_offset 4
 360              		.cfi_offset 7, -4
 361 0202 83B0     		sub	sp, sp, #12	@,,
 362              	.LCFI8:
 363              		.cfi_def_cfa_offset 16
 364 0204 00AF     		add	r7, sp, #0	@,,
 365              	.LCFI9:
 366              		.cfi_def_cfa_register 7
 989:cmsis/device/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 367              		.loc 1 989 0
 368 0206 4FF00003 		mov	r3, #0	@ tmp197,
 369 020a 7B60     		str	r3, [r7, #4]	@ tmp197, StartUpCounter
 370 020c 4FF00003 		mov	r3, #0	@ tmp198,
 371 0210 3B60     		str	r3, [r7, #0]	@ tmp198, HSEStatus
 990:cmsis/device/system_stm32f10x.c ****   
 991:cmsis/device/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 992:cmsis/device/system_stm32f10x.c ****   /* Enable HSE */    
 993:cmsis/device/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 372              		.loc 1 993 0
ARM GAS  /tmp/ccBweOod.s 			page 25


 373 0212 4FF48053 		mov	r3, #4096	@ D.5656,
 374 0216 C4F20203 		movt	r3, 16386	@ D.5656,
 375 021a 4FF48052 		mov	r2, #4096	@ D.5657,
 376 021e C4F20202 		movt	r2, 16386	@ D.5657,
 377 0222 1268     		ldr	r2, [r2, #0]	@ tmp199,* D.5657
 378 0224 42F48032 		orr	r2, r2, #65536	@ D.5659, D.5658,
 379 0228 1A60     		str	r2, [r3, #0]	@ D.5659, D.5656_1->CR
 380              	.L15:
 994:cmsis/device/system_stm32f10x.c ****  
 995:cmsis/device/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 996:cmsis/device/system_stm32f10x.c ****   do
 997:cmsis/device/system_stm32f10x.c ****   {
 998:cmsis/device/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 381              		.loc 1 998 0 discriminator 1
 382 022a 4FF48053 		mov	r3, #4096	@ D.5660,
 383 022e C4F20203 		movt	r3, 16386	@ D.5660,
 384 0232 1B68     		ldr	r3, [r3, #0]	@ tmp200,* D.5660
 385 0234 03F40033 		and	r3, r3, #131072	@ HSEStatus.0, D.5661,
 386 0238 3B60     		str	r3, [r7, #0]	@ HSEStatus.0, HSEStatus
 999:cmsis/device/system_stm32f10x.c ****     StartUpCounter++;  
 387              		.loc 1 999 0 discriminator 1
 388 023a 7B68     		ldr	r3, [r7, #4]	@ StartUpCounter.1, StartUpCounter
 389 023c 03F10103 		add	r3, r3, #1	@ StartUpCounter.2, StartUpCounter.1,
 390 0240 7B60     		str	r3, [r7, #4]	@ StartUpCounter.2, StartUpCounter
1000:cmsis/device/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 391              		.loc 1 1000 0 discriminator 1
 392 0242 3B68     		ldr	r3, [r7, #0]	@ HSEStatus.3, HSEStatus
 393 0244 002B     		cmp	r3, #0	@ HSEStatus.3,
 394 0246 03D1     		bne	.L14	@,
 395 0248 7B68     		ldr	r3, [r7, #4]	@ StartUpCounter.4, StartUpCounter
 396 024a B3F5A06F 		cmp	r3, #1280	@ StartUpCounter.4,
 397 024e ECD1     		bne	.L15	@,
 398              	.L14:
1001:cmsis/device/system_stm32f10x.c **** 
1002:cmsis/device/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 399              		.loc 1 1002 0
 400 0250 4FF48053 		mov	r3, #4096	@ D.5668,
 401 0254 C4F20203 		movt	r3, 16386	@ D.5668,
 402 0258 1B68     		ldr	r3, [r3, #0]	@ tmp201,* D.5668
 403 025a 03F40033 		and	r3, r3, #131072	@ D.5670, D.5669,
 404 025e 002B     		cmp	r3, #0	@ D.5670,
 405 0260 03D0     		beq	.L16	@,
1003:cmsis/device/system_stm32f10x.c ****   {
1004:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 406              		.loc 1 1004 0
 407 0262 4FF00103 		mov	r3, #1	@ tmp202,
 408 0266 3B60     		str	r3, [r7, #0]	@ tmp202, HSEStatus
 409 0268 02E0     		b	.L17	@
 410              	.L16:
1005:cmsis/device/system_stm32f10x.c ****   }
1006:cmsis/device/system_stm32f10x.c ****   else
1007:cmsis/device/system_stm32f10x.c ****   {
1008:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 411              		.loc 1 1008 0
 412 026a 4FF00003 		mov	r3, #0	@ tmp203,
 413 026e 3B60     		str	r3, [r7, #0]	@ tmp203, HSEStatus
 414              	.L17:
ARM GAS  /tmp/ccBweOod.s 			page 26


1009:cmsis/device/system_stm32f10x.c ****   }  
1010:cmsis/device/system_stm32f10x.c **** 
1011:cmsis/device/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 415              		.loc 1 1011 0
 416 0270 3B68     		ldr	r3, [r7, #0]	@ HSEStatus.5, HSEStatus
 417 0272 012B     		cmp	r3, #1	@ HSEStatus.5,
 418 0274 40F09480 		bne	.L13	@,
1012:cmsis/device/system_stm32f10x.c ****   {
1013:cmsis/device/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
1014:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 419              		.loc 1 1014 0
 420 0278 4FF40053 		mov	r3, #8192	@ D.5677,
 421 027c C4F20203 		movt	r3, 16386	@ D.5677,
 422 0280 4FF40052 		mov	r2, #8192	@ D.5678,
 423 0284 C4F20202 		movt	r2, 16386	@ D.5678,
 424 0288 1268     		ldr	r2, [r2, #0]	@ tmp204,* D.5678
 425 028a 42F01002 		orr	r2, r2, #16	@ D.5680, D.5679,
 426 028e 1A60     		str	r2, [r3, #0]	@ D.5680, D.5677_16->ACR
1015:cmsis/device/system_stm32f10x.c **** 
1016:cmsis/device/system_stm32f10x.c ****     /* Flash 2 wait state */
1017:cmsis/device/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 427              		.loc 1 1017 0
 428 0290 4FF40053 		mov	r3, #8192	@ D.5681,
 429 0294 C4F20203 		movt	r3, 16386	@ D.5681,
 430 0298 4FF40052 		mov	r2, #8192	@ D.5682,
 431 029c C4F20202 		movt	r2, 16386	@ D.5682,
 432 02a0 1268     		ldr	r2, [r2, #0]	@ tmp205,* D.5682
 433 02a2 22F00302 		bic	r2, r2, #3	@ D.5684, D.5683,
 434 02a6 1A60     		str	r2, [r3, #0]	@ D.5684, D.5681_20->ACR
1018:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 435              		.loc 1 1018 0
 436 02a8 4FF40053 		mov	r3, #8192	@ D.5685,
 437 02ac C4F20203 		movt	r3, 16386	@ D.5685,
 438 02b0 4FF40052 		mov	r2, #8192	@ D.5686,
 439 02b4 C4F20202 		movt	r2, 16386	@ D.5686,
 440 02b8 1268     		ldr	r2, [r2, #0]	@ tmp206,* D.5686
 441 02ba 42F00202 		orr	r2, r2, #2	@ D.5688, D.5687,
 442 02be 1A60     		str	r2, [r3, #0]	@ D.5688, D.5685_24->ACR
1019:cmsis/device/system_stm32f10x.c **** 
1020:cmsis/device/system_stm32f10x.c ****  
1021:cmsis/device/system_stm32f10x.c ****     /* HCLK = SYSCLK */
1022:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 443              		.loc 1 1022 0
 444 02c0 4FF48053 		mov	r3, #4096	@ D.5689,
 445 02c4 C4F20203 		movt	r3, 16386	@ D.5689,
 446 02c8 4FF48052 		mov	r2, #4096	@ D.5690,
 447 02cc C4F20202 		movt	r2, 16386	@ D.5690,
 448 02d0 5268     		ldr	r2, [r2, #4]	@ tmp207,
 449 02d2 5A60     		str	r2, [r3, #4]	@ D.5691, D.5689_28->CFGR
1023:cmsis/device/system_stm32f10x.c ****       
1024:cmsis/device/system_stm32f10x.c ****     /* PCLK2 = HCLK */
1025:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 450              		.loc 1 1025 0
 451 02d4 4FF48053 		mov	r3, #4096	@ D.5692,
 452 02d8 C4F20203 		movt	r3, 16386	@ D.5692,
 453 02dc 4FF48052 		mov	r2, #4096	@ D.5693,
 454 02e0 C4F20202 		movt	r2, 16386	@ D.5693,
ARM GAS  /tmp/ccBweOod.s 			page 27


 455 02e4 5268     		ldr	r2, [r2, #4]	@ tmp208,
 456 02e6 5A60     		str	r2, [r3, #4]	@ D.5694, D.5692_31->CFGR
1026:cmsis/device/system_stm32f10x.c ****     
1027:cmsis/device/system_stm32f10x.c ****     /* PCLK1 = HCLK */
1028:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 457              		.loc 1 1028 0
 458 02e8 4FF48053 		mov	r3, #4096	@ D.5695,
 459 02ec C4F20203 		movt	r3, 16386	@ D.5695,
 460 02f0 4FF48052 		mov	r2, #4096	@ D.5696,
 461 02f4 C4F20202 		movt	r2, 16386	@ D.5696,
 462 02f8 5268     		ldr	r2, [r2, #4]	@ tmp209,
 463 02fa 42F48062 		orr	r2, r2, #1024	@ D.5698, D.5697,
 464 02fe 5A60     		str	r2, [r3, #4]	@ D.5698, D.5695_34->CFGR
1029:cmsis/device/system_stm32f10x.c **** 
1030:cmsis/device/system_stm32f10x.c **** #ifdef STM32F10X_CL
1031:cmsis/device/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
1032:cmsis/device/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
1033:cmsis/device/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
1034:cmsis/device/system_stm32f10x.c ****         
1035:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
1036:cmsis/device/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
1037:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
1038:cmsis/device/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
1039:cmsis/device/system_stm32f10x.c ****   
1040:cmsis/device/system_stm32f10x.c ****     /* Enable PLL2 */
1041:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
1042:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
1043:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
1044:cmsis/device/system_stm32f10x.c ****     {
1045:cmsis/device/system_stm32f10x.c ****     }
1046:cmsis/device/system_stm32f10x.c ****     
1047:cmsis/device/system_stm32f10x.c ****    
1048:cmsis/device/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 9 = 72 MHz */ 
1049:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
1050:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
1051:cmsis/device/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL9); 
1052:cmsis/device/system_stm32f10x.c **** #else    
1053:cmsis/device/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = HSE * 9 = 72 MHz */
1054:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE |
 465              		.loc 1 1054 0
 466 0300 4FF48053 		mov	r3, #4096	@ D.5699,
 467 0304 C4F20203 		movt	r3, 16386	@ D.5699,
 468 0308 4FF48052 		mov	r2, #4096	@ D.5700,
 469 030c C4F20202 		movt	r2, 16386	@ D.5700,
 470 0310 5268     		ldr	r2, [r2, #4]	@ tmp210,
 471 0312 22F47C12 		bic	r2, r2, #4128768	@ D.5702, D.5701,
 472 0316 5A60     		str	r2, [r3, #4]	@ D.5702, D.5699_38->CFGR
1055:cmsis/device/system_stm32f10x.c ****                                         RCC_CFGR_PLLMULL));
1056:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
 473              		.loc 1 1056 0
 474 0318 4FF48053 		mov	r3, #4096	@ D.5703,
 475 031c C4F20203 		movt	r3, 16386	@ D.5703,
 476 0320 4FF48052 		mov	r2, #4096	@ D.5704,
 477 0324 C4F20202 		movt	r2, 16386	@ D.5704,
 478 0328 5268     		ldr	r2, [r2, #4]	@ tmp211,
 479 032a 42F4E812 		orr	r2, r2, #1900544	@ D.5706, D.5705,
 480 032e 5A60     		str	r2, [r3, #4]	@ D.5706, D.5703_42->CFGR
ARM GAS  /tmp/ccBweOod.s 			page 28


1057:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */
1058:cmsis/device/system_stm32f10x.c **** 
1059:cmsis/device/system_stm32f10x.c ****     /* Enable PLL */
1060:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 481              		.loc 1 1060 0
 482 0330 4FF48053 		mov	r3, #4096	@ D.5707,
 483 0334 C4F20203 		movt	r3, 16386	@ D.5707,
 484 0338 4FF48052 		mov	r2, #4096	@ D.5708,
 485 033c C4F20202 		movt	r2, 16386	@ D.5708,
 486 0340 1268     		ldr	r2, [r2, #0]	@ tmp212,* D.5708
 487 0342 42F08072 		orr	r2, r2, #16777216	@ D.5710, D.5709,
 488 0346 1A60     		str	r2, [r3, #0]	@ D.5710, D.5707_46->CR
1061:cmsis/device/system_stm32f10x.c **** 
1062:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is ready */
1063:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 489              		.loc 1 1063 0
 490 0348 00BF     		nop
 491              	.L19:
 492              		.loc 1 1063 0 is_stmt 0 discriminator 1
 493 034a 4FF48053 		mov	r3, #4096	@ D.5711,
 494 034e C4F20203 		movt	r3, 16386	@ D.5711,
 495 0352 1B68     		ldr	r3, [r3, #0]	@ tmp213,* D.5711
 496 0354 03F00073 		and	r3, r3, #33554432	@ D.5713, D.5712,
 497 0358 002B     		cmp	r3, #0	@ D.5713,
 498 035a F6D0     		beq	.L19	@,
1064:cmsis/device/system_stm32f10x.c ****     {
1065:cmsis/device/system_stm32f10x.c ****     }
1066:cmsis/device/system_stm32f10x.c ****     
1067:cmsis/device/system_stm32f10x.c ****     /* Select PLL as system clock source */
1068:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 499              		.loc 1 1068 0 is_stmt 1
 500 035c 4FF48053 		mov	r3, #4096	@ D.5714,
 501 0360 C4F20203 		movt	r3, 16386	@ D.5714,
 502 0364 4FF48052 		mov	r2, #4096	@ D.5715,
 503 0368 C4F20202 		movt	r2, 16386	@ D.5715,
 504 036c 5268     		ldr	r2, [r2, #4]	@ tmp214,
 505 036e 22F00302 		bic	r2, r2, #3	@ D.5717, D.5716,
 506 0372 5A60     		str	r2, [r3, #4]	@ D.5717, D.5714_53->CFGR
1069:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 507              		.loc 1 1069 0
 508 0374 4FF48053 		mov	r3, #4096	@ D.5718,
 509 0378 C4F20203 		movt	r3, 16386	@ D.5718,
 510 037c 4FF48052 		mov	r2, #4096	@ D.5719,
 511 0380 C4F20202 		movt	r2, 16386	@ D.5719,
 512 0384 5268     		ldr	r2, [r2, #4]	@ tmp215,
 513 0386 42F00202 		orr	r2, r2, #2	@ D.5721, D.5720,
 514 038a 5A60     		str	r2, [r3, #4]	@ D.5721, D.5718_57->CFGR
1070:cmsis/device/system_stm32f10x.c **** 
1071:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
1072:cmsis/device/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 515              		.loc 1 1072 0
 516 038c 00BF     		nop
 517              	.L20:
 518              		.loc 1 1072 0 is_stmt 0 discriminator 1
 519 038e 4FF48053 		mov	r3, #4096	@ D.5722,
 520 0392 C4F20203 		movt	r3, 16386	@ D.5722,
 521 0396 5B68     		ldr	r3, [r3, #4]	@ tmp216,
ARM GAS  /tmp/ccBweOod.s 			page 29


 522 0398 03F00C03 		and	r3, r3, #12	@ D.5724, D.5723,
 523 039c 082B     		cmp	r3, #8	@ D.5724,
 524 039e F6D1     		bne	.L20	@,
 525              	.L13:
1073:cmsis/device/system_stm32f10x.c ****     {
1074:cmsis/device/system_stm32f10x.c ****     }
1075:cmsis/device/system_stm32f10x.c ****   }
1076:cmsis/device/system_stm32f10x.c ****   else
1077:cmsis/device/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
1078:cmsis/device/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
1079:cmsis/device/system_stm32f10x.c ****   }
1080:cmsis/device/system_stm32f10x.c **** }
 526              		.loc 1 1080 0 is_stmt 1
 527 03a0 07F10C07 		add	r7, r7, #12	@,,
 528 03a4 BD46     		mov	sp, r7
 529 03a6 80BC     		pop	{r7}
 530 03a8 7047     		bx	lr
 531              		.cfi_endproc
 532              	.LFE58:
 533              		.size	SetSysClockTo72, .-SetSysClockTo72
 534              	.Letext0:
 535              		.file 2 "/opt/gcc-arm-none-eabi-4_6-2012q4/bin/../lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none
 536              		.file 3 "./cmsis/core/core_cm3.h"
 537              		.file 4 "cmsis/device/stm32f10x.h"
 538              		.file 5 "cmsis/device/system_stm32f10x.h"
 539 03aa 00BF     		.section	.debug_info,"",%progbits
 540              	.Ldebug_info0:
 541 0000 DB040000 		.4byte	0x4db
 542 0004 0200     		.2byte	0x2
 543 0006 00000000 		.4byte	.Ldebug_abbrev0
 544 000a 04       		.byte	0x4
 545 000b 01       		.uleb128 0x1
 546 000c E7000000 		.4byte	.LASF50
 547 0010 01       		.byte	0x1
 548 0011 4F020000 		.4byte	.LASF51
 549 0015 C1010000 		.4byte	.LASF52
 550 0019 00000000 		.4byte	.Ltext0
 551 001d AA030000 		.4byte	.Letext0
 552 0021 00000000 		.4byte	.Ldebug_line0
 553 0025 02       		.uleb128 0x2
 554 0026 01       		.byte	0x1
 555 0027 06       		.byte	0x6
 556 0028 3F010000 		.4byte	.LASF0
 557 002c 03       		.uleb128 0x3
 558 002d 43000000 		.4byte	.LASF3
 559 0031 02       		.byte	0x2
 560 0032 2A       		.byte	0x2a
 561 0033 37000000 		.4byte	0x37
 562 0037 02       		.uleb128 0x2
 563 0038 01       		.byte	0x1
 564 0039 08       		.byte	0x8
 565 003a C2000000 		.4byte	.LASF1
 566 003e 02       		.uleb128 0x2
 567 003f 02       		.byte	0x2
 568 0040 05       		.byte	0x5
 569 0041 53000000 		.4byte	.LASF2
 570 0045 03       		.uleb128 0x3
ARM GAS  /tmp/ccBweOod.s 			page 30


 571 0046 78010000 		.4byte	.LASF4
 572 004a 02       		.byte	0x2
 573 004b 36       		.byte	0x36
 574 004c 50000000 		.4byte	0x50
 575 0050 02       		.uleb128 0x2
 576 0051 02       		.byte	0x2
 577 0052 07       		.byte	0x7
 578 0053 AE010000 		.4byte	.LASF5
 579 0057 03       		.uleb128 0x3
 580 0058 0E020000 		.4byte	.LASF6
 581 005c 02       		.byte	0x2
 582 005d 4F       		.byte	0x4f
 583 005e 62000000 		.4byte	0x62
 584 0062 02       		.uleb128 0x2
 585 0063 04       		.byte	0x4
 586 0064 05       		.byte	0x5
 587 0065 7D000000 		.4byte	.LASF7
 588 0069 03       		.uleb128 0x3
 589 006a 62010000 		.4byte	.LASF8
 590 006e 02       		.byte	0x2
 591 006f 50       		.byte	0x50
 592 0070 74000000 		.4byte	0x74
 593 0074 02       		.uleb128 0x2
 594 0075 04       		.byte	0x4
 595 0076 07       		.byte	0x7
 596 0077 6F020000 		.4byte	.LASF9
 597 007b 02       		.uleb128 0x2
 598 007c 08       		.byte	0x8
 599 007d 05       		.byte	0x5
 600 007e 6A000000 		.4byte	.LASF10
 601 0082 02       		.uleb128 0x2
 602 0083 08       		.byte	0x8
 603 0084 07       		.byte	0x7
 604 0085 4B010000 		.4byte	.LASF11
 605 0089 04       		.uleb128 0x4
 606 008a 04       		.byte	0x4
 607 008b 05       		.byte	0x5
 608 008c 696E7400 		.ascii	"int\000"
 609 0090 02       		.uleb128 0x2
 610 0091 04       		.byte	0x4
 611 0092 07       		.byte	0x7
 612 0093 6B010000 		.4byte	.LASF12
 613 0097 05       		.uleb128 0x5
 614 0098 69000000 		.4byte	0x69
 615 009c 06       		.uleb128 0x6
 616 009d 8C       		.byte	0x8c
 617 009e 03       		.byte	0x3
 618 009f 3201     		.2byte	0x132
 619 00a1 E2010000 		.4byte	0x1e2
 620 00a5 07       		.uleb128 0x7
 621 00a6 29000000 		.4byte	.LASF13
 622 00aa 03       		.byte	0x3
 623 00ab 3401     		.2byte	0x134
 624 00ad E2010000 		.4byte	0x1e2
 625 00b1 02       		.byte	0x2
 626 00b2 23       		.byte	0x23
 627 00b3 00       		.uleb128 0
ARM GAS  /tmp/ccBweOod.s 			page 31


 628 00b4 07       		.uleb128 0x7
 629 00b5 5D000000 		.4byte	.LASF14
 630 00b9 03       		.byte	0x3
 631 00ba 3501     		.2byte	0x135
 632 00bc 97000000 		.4byte	0x97
 633 00c0 02       		.byte	0x2
 634 00c1 23       		.byte	0x23
 635 00c2 04       		.uleb128 0x4
 636 00c3 07       		.uleb128 0x7
 637 00c4 09020000 		.4byte	.LASF15
 638 00c8 03       		.byte	0x3
 639 00c9 3601     		.2byte	0x136
 640 00cb 97000000 		.4byte	0x97
 641 00cf 02       		.byte	0x2
 642 00d0 23       		.byte	0x23
 643 00d1 08       		.uleb128 0x8
 644 00d2 07       		.uleb128 0x7
 645 00d3 D0000000 		.4byte	.LASF16
 646 00d7 03       		.byte	0x3
 647 00d8 3701     		.2byte	0x137
 648 00da 97000000 		.4byte	0x97
 649 00de 02       		.byte	0x2
 650 00df 23       		.byte	0x23
 651 00e0 0C       		.uleb128 0xc
 652 00e1 08       		.uleb128 0x8
 653 00e2 53435200 		.ascii	"SCR\000"
 654 00e6 03       		.byte	0x3
 655 00e7 3801     		.2byte	0x138
 656 00e9 97000000 		.4byte	0x97
 657 00ed 02       		.byte	0x2
 658 00ee 23       		.byte	0x23
 659 00ef 10       		.uleb128 0x10
 660 00f0 08       		.uleb128 0x8
 661 00f1 43435200 		.ascii	"CCR\000"
 662 00f5 03       		.byte	0x3
 663 00f6 3901     		.2byte	0x139
 664 00f8 97000000 		.4byte	0x97
 665 00fc 02       		.byte	0x2
 666 00fd 23       		.byte	0x23
 667 00fe 14       		.uleb128 0x14
 668 00ff 08       		.uleb128 0x8
 669 0100 53485000 		.ascii	"SHP\000"
 670 0104 03       		.byte	0x3
 671 0105 3A01     		.2byte	0x13a
 672 0107 F7010000 		.4byte	0x1f7
 673 010b 02       		.byte	0x2
 674 010c 23       		.byte	0x23
 675 010d 18       		.uleb128 0x18
 676 010e 07       		.uleb128 0x7
 677 010f 81010000 		.4byte	.LASF17
 678 0113 03       		.byte	0x3
 679 0114 3B01     		.2byte	0x13b
 680 0116 97000000 		.4byte	0x97
 681 011a 02       		.byte	0x2
 682 011b 23       		.byte	0x23
 683 011c 24       		.uleb128 0x24
 684 011d 07       		.uleb128 0x7
ARM GAS  /tmp/ccBweOod.s 			page 32


 685 011e A3000000 		.4byte	.LASF18
 686 0122 03       		.byte	0x3
 687 0123 3C01     		.2byte	0x13c
 688 0125 97000000 		.4byte	0x97
 689 0129 02       		.byte	0x2
 690 012a 23       		.byte	0x23
 691 012b 28       		.uleb128 0x28
 692 012c 07       		.uleb128 0x7
 693 012d 2B020000 		.4byte	.LASF19
 694 0131 03       		.byte	0x3
 695 0132 3D01     		.2byte	0x13d
 696 0134 97000000 		.4byte	0x97
 697 0138 02       		.byte	0x2
 698 0139 23       		.byte	0x23
 699 013a 2C       		.uleb128 0x2c
 700 013b 07       		.uleb128 0x7
 701 013c 16020000 		.4byte	.LASF20
 702 0140 03       		.byte	0x3
 703 0141 3E01     		.2byte	0x13e
 704 0143 97000000 		.4byte	0x97
 705 0147 02       		.byte	0x2
 706 0148 23       		.byte	0x23
 707 0149 30       		.uleb128 0x30
 708 014a 07       		.uleb128 0x7
 709 014b 9D010000 		.4byte	.LASF21
 710 014f 03       		.byte	0x3
 711 0150 3F01     		.2byte	0x13f
 712 0152 97000000 		.4byte	0x97
 713 0156 02       		.byte	0x2
 714 0157 23       		.byte	0x23
 715 0158 34       		.uleb128 0x34
 716 0159 07       		.uleb128 0x7
 717 015a 78000000 		.4byte	.LASF22
 718 015e 03       		.byte	0x3
 719 015f 4001     		.2byte	0x140
 720 0161 97000000 		.4byte	0x97
 721 0165 02       		.byte	0x2
 722 0166 23       		.byte	0x23
 723 0167 38       		.uleb128 0x38
 724 0168 07       		.uleb128 0x7
 725 0169 87020000 		.4byte	.LASF23
 726 016d 03       		.byte	0x3
 727 016e 4101     		.2byte	0x141
 728 0170 97000000 		.4byte	0x97
 729 0174 02       		.byte	0x2
 730 0175 23       		.byte	0x23
 731 0176 3C       		.uleb128 0x3c
 732 0177 08       		.uleb128 0x8
 733 0178 50465200 		.ascii	"PFR\000"
 734 017c 03       		.byte	0x3
 735 017d 4201     		.2byte	0x142
 736 017f 0C020000 		.4byte	0x20c
 737 0183 02       		.byte	0x2
 738 0184 23       		.byte	0x23
 739 0185 40       		.uleb128 0x40
 740 0186 08       		.uleb128 0x8
 741 0187 44465200 		.ascii	"DFR\000"
ARM GAS  /tmp/ccBweOod.s 			page 33


 742 018b 03       		.byte	0x3
 743 018c 4301     		.2byte	0x143
 744 018e E2010000 		.4byte	0x1e2
 745 0192 02       		.byte	0x2
 746 0193 23       		.byte	0x23
 747 0194 48       		.uleb128 0x48
 748 0195 08       		.uleb128 0x8
 749 0196 41445200 		.ascii	"ADR\000"
 750 019a 03       		.byte	0x3
 751 019b 4401     		.2byte	0x144
 752 019d E2010000 		.4byte	0x1e2
 753 01a1 02       		.byte	0x2
 754 01a2 23       		.byte	0x23
 755 01a3 4C       		.uleb128 0x4c
 756 01a4 07       		.uleb128 0x7
 757 01a5 30020000 		.4byte	.LASF24
 758 01a9 03       		.byte	0x3
 759 01aa 4501     		.2byte	0x145
 760 01ac 26020000 		.4byte	0x226
 761 01b0 02       		.byte	0x2
 762 01b1 23       		.byte	0x23
 763 01b2 50       		.uleb128 0x50
 764 01b3 07       		.uleb128 0x7
 765 01b4 15000000 		.4byte	.LASF25
 766 01b8 03       		.byte	0x3
 767 01b9 4601     		.2byte	0x146
 768 01bb 40020000 		.4byte	0x240
 769 01bf 02       		.byte	0x2
 770 01c0 23       		.byte	0x23
 771 01c1 60       		.uleb128 0x60
 772 01c2 07       		.uleb128 0x7
 773 01c3 34000000 		.4byte	.LASF26
 774 01c7 03       		.byte	0x3
 775 01c8 4701     		.2byte	0x147
 776 01ca 30020000 		.4byte	0x230
 777 01ce 02       		.byte	0x2
 778 01cf 23       		.byte	0x23
 779 01d0 74       		.uleb128 0x74
 780 01d1 07       		.uleb128 0x7
 781 01d2 B0020000 		.4byte	.LASF27
 782 01d6 03       		.byte	0x3
 783 01d7 4801     		.2byte	0x148
 784 01d9 97000000 		.4byte	0x97
 785 01dd 03       		.byte	0x3
 786 01de 23       		.byte	0x23
 787 01df 8801     		.uleb128 0x88
 788 01e1 00       		.byte	0
 789 01e2 09       		.uleb128 0x9
 790 01e3 97000000 		.4byte	0x97
 791 01e7 0A       		.uleb128 0xa
 792 01e8 2C000000 		.4byte	0x2c
 793 01ec F7010000 		.4byte	0x1f7
 794 01f0 0B       		.uleb128 0xb
 795 01f1 90000000 		.4byte	0x90
 796 01f5 0B       		.byte	0xb
 797 01f6 00       		.byte	0
 798 01f7 05       		.uleb128 0x5
ARM GAS  /tmp/ccBweOod.s 			page 34


 799 01f8 E7010000 		.4byte	0x1e7
 800 01fc 0A       		.uleb128 0xa
 801 01fd 69000000 		.4byte	0x69
 802 0201 0C020000 		.4byte	0x20c
 803 0205 0B       		.uleb128 0xb
 804 0206 90000000 		.4byte	0x90
 805 020a 01       		.byte	0x1
 806 020b 00       		.byte	0
 807 020c 09       		.uleb128 0x9
 808 020d 11020000 		.4byte	0x211
 809 0211 05       		.uleb128 0x5
 810 0212 FC010000 		.4byte	0x1fc
 811 0216 0A       		.uleb128 0xa
 812 0217 69000000 		.4byte	0x69
 813 021b 26020000 		.4byte	0x226
 814 021f 0B       		.uleb128 0xb
 815 0220 90000000 		.4byte	0x90
 816 0224 03       		.byte	0x3
 817 0225 00       		.byte	0
 818 0226 09       		.uleb128 0x9
 819 0227 2B020000 		.4byte	0x22b
 820 022b 05       		.uleb128 0x5
 821 022c 16020000 		.4byte	0x216
 822 0230 0A       		.uleb128 0xa
 823 0231 69000000 		.4byte	0x69
 824 0235 40020000 		.4byte	0x240
 825 0239 0B       		.uleb128 0xb
 826 023a 90000000 		.4byte	0x90
 827 023e 04       		.byte	0x4
 828 023f 00       		.byte	0
 829 0240 09       		.uleb128 0x9
 830 0241 45020000 		.4byte	0x245
 831 0245 05       		.uleb128 0x5
 832 0246 30020000 		.4byte	0x230
 833 024a 0C       		.uleb128 0xc
 834 024b D6000000 		.4byte	.LASF28
 835 024f 03       		.byte	0x3
 836 0250 4901     		.2byte	0x149
 837 0252 9C000000 		.4byte	0x9c
 838 0256 05       		.uleb128 0x5
 839 0257 57000000 		.4byte	0x57
 840 025b 0D       		.uleb128 0xd
 841 025c 01       		.byte	0x1
 842 025d 04       		.byte	0x4
 843 025e 0702     		.2byte	0x207
 844 0260 71020000 		.4byte	0x271
 845 0264 0E       		.uleb128 0xe
 846 0265 81020000 		.4byte	.LASF29
 847 0269 00       		.sleb128 0
 848 026a 0F       		.uleb128 0xf
 849 026b 53455400 		.ascii	"SET\000"
 850 026f 01       		.sleb128 1
 851 0270 00       		.byte	0
 852 0271 06       		.uleb128 0x6
 853 0272 24       		.byte	0x24
 854 0273 04       		.byte	0x4
 855 0274 8503     		.2byte	0x385
ARM GAS  /tmp/ccBweOod.s 			page 35


 856 0276 FF020000 		.4byte	0x2ff
 857 027a 08       		.uleb128 0x8
 858 027b 41435200 		.ascii	"ACR\000"
 859 027f 04       		.byte	0x4
 860 0280 8703     		.2byte	0x387
 861 0282 97000000 		.4byte	0x97
 862 0286 02       		.byte	0x2
 863 0287 23       		.byte	0x23
 864 0288 00       		.uleb128 0
 865 0289 07       		.uleb128 0x7
 866 028a 2F000000 		.4byte	.LASF30
 867 028e 04       		.byte	0x4
 868 028f 8803     		.2byte	0x388
 869 0291 97000000 		.4byte	0x97
 870 0295 02       		.byte	0x2
 871 0296 23       		.byte	0x23
 872 0297 04       		.uleb128 0x4
 873 0298 07       		.uleb128 0x7
 874 0299 62000000 		.4byte	.LASF31
 875 029d 04       		.byte	0x4
 876 029e 8903     		.2byte	0x389
 877 02a0 97000000 		.4byte	0x97
 878 02a4 02       		.byte	0x2
 879 02a5 23       		.byte	0x23
 880 02a6 08       		.uleb128 0x8
 881 02a7 08       		.uleb128 0x8
 882 02a8 535200   		.ascii	"SR\000"
 883 02ab 04       		.byte	0x4
 884 02ac 8A03     		.2byte	0x38a
 885 02ae 97000000 		.4byte	0x97
 886 02b2 02       		.byte	0x2
 887 02b3 23       		.byte	0x23
 888 02b4 0C       		.uleb128 0xc
 889 02b5 08       		.uleb128 0x8
 890 02b6 435200   		.ascii	"CR\000"
 891 02b9 04       		.byte	0x4
 892 02ba 8B03     		.2byte	0x38b
 893 02bc 97000000 		.4byte	0x97
 894 02c0 02       		.byte	0x2
 895 02c1 23       		.byte	0x23
 896 02c2 10       		.uleb128 0x10
 897 02c3 08       		.uleb128 0x8
 898 02c4 415200   		.ascii	"AR\000"
 899 02c7 04       		.byte	0x4
 900 02c8 8C03     		.2byte	0x38c
 901 02ca 97000000 		.4byte	0x97
 902 02ce 02       		.byte	0x2
 903 02cf 23       		.byte	0x23
 904 02d0 14       		.uleb128 0x14
 905 02d1 07       		.uleb128 0x7
 906 02d2 8C020000 		.4byte	.LASF32
 907 02d6 04       		.byte	0x4
 908 02d7 8D03     		.2byte	0x38d
 909 02d9 97000000 		.4byte	0x97
 910 02dd 02       		.byte	0x2
 911 02de 23       		.byte	0x23
 912 02df 18       		.uleb128 0x18
ARM GAS  /tmp/ccBweOod.s 			page 36


 913 02e0 08       		.uleb128 0x8
 914 02e1 4F425200 		.ascii	"OBR\000"
 915 02e5 04       		.byte	0x4
 916 02e6 8E03     		.2byte	0x38e
 917 02e8 97000000 		.4byte	0x97
 918 02ec 02       		.byte	0x2
 919 02ed 23       		.byte	0x23
 920 02ee 1C       		.uleb128 0x1c
 921 02ef 07       		.uleb128 0x7
 922 02f0 9E000000 		.4byte	.LASF33
 923 02f4 04       		.byte	0x4
 924 02f5 8F03     		.2byte	0x38f
 925 02f7 97000000 		.4byte	0x97
 926 02fb 02       		.byte	0x2
 927 02fc 23       		.byte	0x23
 928 02fd 20       		.uleb128 0x20
 929 02fe 00       		.byte	0
 930 02ff 0C       		.uleb128 0xc
 931 0300 95020000 		.4byte	.LASF34
 932 0304 04       		.byte	0x4
 933 0305 9803     		.2byte	0x398
 934 0307 71020000 		.4byte	0x271
 935 030b 06       		.uleb128 0x6
 936 030c 28       		.byte	0x28
 937 030d 04       		.byte	0x4
 938 030e 3404     		.2byte	0x434
 939 0310 AA030000 		.4byte	0x3aa
 940 0314 08       		.uleb128 0x8
 941 0315 435200   		.ascii	"CR\000"
 942 0318 04       		.byte	0x4
 943 0319 3604     		.2byte	0x436
 944 031b 97000000 		.4byte	0x97
 945 031f 02       		.byte	0x2
 946 0320 23       		.byte	0x23
 947 0321 00       		.uleb128 0
 948 0322 07       		.uleb128 0x7
 949 0323 3E000000 		.4byte	.LASF35
 950 0327 04       		.byte	0x4
 951 0328 3704     		.2byte	0x437
 952 032a 97000000 		.4byte	0x97
 953 032e 02       		.byte	0x2
 954 032f 23       		.byte	0x23
 955 0330 04       		.uleb128 0x4
 956 0331 08       		.uleb128 0x8
 957 0332 43495200 		.ascii	"CIR\000"
 958 0336 04       		.byte	0x4
 959 0337 3804     		.2byte	0x438
 960 0339 97000000 		.4byte	0x97
 961 033d 02       		.byte	0x2
 962 033e 23       		.byte	0x23
 963 033f 08       		.uleb128 0x8
 964 0340 07       		.uleb128 0x7
 965 0341 95000000 		.4byte	.LASF36
 966 0345 04       		.byte	0x4
 967 0346 3904     		.2byte	0x439
 968 0348 97000000 		.4byte	0x97
 969 034c 02       		.byte	0x2
ARM GAS  /tmp/ccBweOod.s 			page 37


 970 034d 23       		.byte	0x23
 971 034e 0C       		.uleb128 0xc
 972 034f 07       		.uleb128 0x7
 973 0350 0C000000 		.4byte	.LASF37
 974 0354 04       		.byte	0x4
 975 0355 3A04     		.2byte	0x43a
 976 0357 97000000 		.4byte	0x97
 977 035b 02       		.byte	0x2
 978 035c 23       		.byte	0x23
 979 035d 10       		.uleb128 0x10
 980 035e 07       		.uleb128 0x7
 981 035f 8E000000 		.4byte	.LASF38
 982 0363 04       		.byte	0x4
 983 0364 3B04     		.2byte	0x43b
 984 0366 97000000 		.4byte	0x97
 985 036a 02       		.byte	0x2
 986 036b 23       		.byte	0x23
 987 036c 14       		.uleb128 0x14
 988 036d 07       		.uleb128 0x7
 989 036e DF000000 		.4byte	.LASF39
 990 0372 04       		.byte	0x4
 991 0373 3C04     		.2byte	0x43c
 992 0375 97000000 		.4byte	0x97
 993 0379 02       		.byte	0x2
 994 037a 23       		.byte	0x23
 995 037b 18       		.uleb128 0x18
 996 037c 07       		.uleb128 0x7
 997 037d 4B000000 		.4byte	.LASF40
 998 0381 04       		.byte	0x4
 999 0382 3D04     		.2byte	0x43d
 1000 0384 97000000 		.4byte	0x97
 1001 0388 02       		.byte	0x2
 1002 0389 23       		.byte	0x23
 1003 038a 1C       		.uleb128 0x1c
 1004 038b 07       		.uleb128 0x7
 1005 038c 1A000000 		.4byte	.LASF41
 1006 0390 04       		.byte	0x4
 1007 0391 3E04     		.2byte	0x43e
 1008 0393 97000000 		.4byte	0x97
 1009 0397 02       		.byte	0x2
 1010 0398 23       		.byte	0x23
 1011 0399 20       		.uleb128 0x20
 1012 039a 08       		.uleb128 0x8
 1013 039b 43535200 		.ascii	"CSR\000"
 1014 039f 04       		.byte	0x4
 1015 03a0 3F04     		.2byte	0x43f
 1016 03a2 97000000 		.4byte	0x97
 1017 03a6 02       		.byte	0x2
 1018 03a7 23       		.byte	0x23
 1019 03a8 24       		.uleb128 0x24
 1020 03a9 00       		.byte	0
 1021 03aa 0C       		.uleb128 0xc
 1022 03ab 00000000 		.4byte	.LASF42
 1023 03af 04       		.byte	0x4
 1024 03b0 4A04     		.2byte	0x44a
 1025 03b2 0B030000 		.4byte	0x30b
 1026 03b6 10       		.uleb128 0x10
ARM GAS  /tmp/ccBweOod.s 			page 38


 1027 03b7 01       		.byte	0x1
 1028 03b8 A3010000 		.4byte	.LASF53
 1029 03bc 01       		.byte	0x1
 1030 03bd D4       		.byte	0xd4
 1031 03be 01       		.byte	0x1
 1032 03bf 00000000 		.4byte	.LFB55
 1033 03c3 AA000000 		.4byte	.LFE55
 1034 03c7 00000000 		.4byte	.LLST0
 1035 03cb 11       		.uleb128 0x11
 1036 03cc 01       		.byte	0x1
 1037 03cd 87010000 		.4byte	.LASF54
 1038 03d1 01       		.byte	0x1
 1039 03d2 3201     		.2byte	0x132
 1040 03d4 01       		.byte	0x1
 1041 03d5 AC000000 		.4byte	.LFB56
 1042 03d9 F4010000 		.4byte	.LFE56
 1043 03dd 2C000000 		.4byte	.LLST1
 1044 03e1 13040000 		.4byte	0x413
 1045 03e5 12       		.uleb128 0x12
 1046 03e6 746D7000 		.ascii	"tmp\000"
 1047 03ea 01       		.byte	0x1
 1048 03eb 3401     		.2byte	0x134
 1049 03ed 69000000 		.4byte	0x69
 1050 03f1 02       		.byte	0x2
 1051 03f2 91       		.byte	0x91
 1052 03f3 74       		.sleb128 -12
 1053 03f4 13       		.uleb128 0x13
 1054 03f5 86000000 		.4byte	.LASF43
 1055 03f9 01       		.byte	0x1
 1056 03fa 3401     		.2byte	0x134
 1057 03fc 69000000 		.4byte	0x69
 1058 0400 02       		.byte	0x2
 1059 0401 91       		.byte	0x91
 1060 0402 70       		.sleb128 -16
 1061 0403 13       		.uleb128 0x13
 1062 0404 B8000000 		.4byte	.LASF44
 1063 0408 01       		.byte	0x1
 1064 0409 3401     		.2byte	0x134
 1065 040b 69000000 		.4byte	0x69
 1066 040f 02       		.byte	0x2
 1067 0410 91       		.byte	0x91
 1068 0411 6C       		.sleb128 -20
 1069 0412 00       		.byte	0
 1070 0413 14       		.uleb128 0x14
 1071 0414 43020000 		.4byte	.LASF55
 1072 0418 01       		.byte	0x1
 1073 0419 A301     		.2byte	0x1a3
 1074 041b 01       		.byte	0x1
 1075 041c F4010000 		.4byte	.LFB57
 1076 0420 FE010000 		.4byte	.LFE57
 1077 0424 64000000 		.4byte	.LLST2
 1078 0428 15       		.uleb128 0x15
 1079 0429 A8000000 		.4byte	.LASF56
 1080 042d 01       		.byte	0x1
 1081 042e DB03     		.2byte	0x3db
 1082 0430 01       		.byte	0x1
 1083 0431 00020000 		.4byte	.LFB58
ARM GAS  /tmp/ccBweOod.s 			page 39


 1084 0435 AA030000 		.4byte	.LFE58
 1085 0439 90000000 		.4byte	.LLST3
 1086 043d 60040000 		.4byte	0x460
 1087 0441 13       		.uleb128 0x13
 1088 0442 30010000 		.4byte	.LASF45
 1089 0446 01       		.byte	0x1
 1090 0447 DD03     		.2byte	0x3dd
 1091 0449 97000000 		.4byte	0x97
 1092 044d 02       		.byte	0x2
 1093 044e 91       		.byte	0x91
 1094 044f 74       		.sleb128 -12
 1095 0450 13       		.uleb128 0x13
 1096 0451 1F000000 		.4byte	.LASF46
 1097 0455 01       		.byte	0x1
 1098 0456 DD03     		.2byte	0x3dd
 1099 0458 97000000 		.4byte	0x97
 1100 045c 02       		.byte	0x2
 1101 045d 91       		.byte	0x91
 1102 045e 70       		.sleb128 -16
 1103 045f 00       		.byte	0
 1104 0460 16       		.uleb128 0x16
 1105 0461 A3020000 		.4byte	.LASF47
 1106 0465 03       		.byte	0x3
 1107 0466 8C04     		.2byte	0x48c
 1108 0468 56020000 		.4byte	0x256
 1109 046c 01       		.byte	0x1
 1110 046d 01       		.byte	0x1
 1111 046e 17       		.uleb128 0x17
 1112 046f 1B020000 		.4byte	.LASF48
 1113 0473 05       		.byte	0x5
 1114 0474 35       		.byte	0x35
 1115 0475 69000000 		.4byte	0x69
 1116 0479 01       		.byte	0x1
 1117 047a 01       		.byte	0x1
 1118 047b 0A       		.uleb128 0xa
 1119 047c 2C000000 		.4byte	0x2c
 1120 0480 8B040000 		.4byte	0x48b
 1121 0484 0B       		.uleb128 0xb
 1122 0485 90000000 		.4byte	0x90
 1123 0489 0F       		.byte	0xf
 1124 048a 00       		.byte	0
 1125 048b 17       		.uleb128 0x17
 1126 048c 35020000 		.4byte	.LASF49
 1127 0490 01       		.byte	0x1
 1128 0491 A7       		.byte	0xa7
 1129 0492 98040000 		.4byte	0x498
 1130 0496 01       		.byte	0x1
 1131 0497 01       		.byte	0x1
 1132 0498 09       		.uleb128 0x9
 1133 0499 9D040000 		.4byte	0x49d
 1134 049d 05       		.uleb128 0x5
 1135 049e 7B040000 		.4byte	0x47b
 1136 04a2 16       		.uleb128 0x16
 1137 04a3 A3020000 		.4byte	.LASF47
 1138 04a7 03       		.byte	0x3
 1139 04a8 8C04     		.2byte	0x48c
 1140 04aa 56020000 		.4byte	0x256
ARM GAS  /tmp/ccBweOod.s 			page 40


 1141 04ae 01       		.byte	0x1
 1142 04af 01       		.byte	0x1
 1143 04b0 18       		.uleb128 0x18
 1144 04b1 1B020000 		.4byte	.LASF48
 1145 04b5 01       		.byte	0x1
 1146 04b6 A2       		.byte	0xa2
 1147 04b7 69000000 		.4byte	0x69
 1148 04bb 01       		.byte	0x1
 1149 04bc 05       		.byte	0x5
 1150 04bd 03       		.byte	0x3
 1151 04be 00000000 		.4byte	SystemCoreClock
 1152 04c2 18       		.uleb128 0x18
 1153 04c3 35020000 		.4byte	.LASF49
 1154 04c7 01       		.byte	0x1
 1155 04c8 A7       		.byte	0xa7
 1156 04c9 D4040000 		.4byte	0x4d4
 1157 04cd 01       		.byte	0x1
 1158 04ce 05       		.byte	0x5
 1159 04cf 03       		.byte	0x3
 1160 04d0 00000000 		.4byte	AHBPrescTable
 1161 04d4 09       		.uleb128 0x9
 1162 04d5 D9040000 		.4byte	0x4d9
 1163 04d9 05       		.uleb128 0x5
 1164 04da 7B040000 		.4byte	0x47b
 1165 04de 00       		.byte	0
 1166              		.section	.debug_abbrev,"",%progbits
 1167              	.Ldebug_abbrev0:
 1168 0000 01       		.uleb128 0x1
 1169 0001 11       		.uleb128 0x11
 1170 0002 01       		.byte	0x1
 1171 0003 25       		.uleb128 0x25
 1172 0004 0E       		.uleb128 0xe
 1173 0005 13       		.uleb128 0x13
 1174 0006 0B       		.uleb128 0xb
 1175 0007 03       		.uleb128 0x3
 1176 0008 0E       		.uleb128 0xe
 1177 0009 1B       		.uleb128 0x1b
 1178 000a 0E       		.uleb128 0xe
 1179 000b 11       		.uleb128 0x11
 1180 000c 01       		.uleb128 0x1
 1181 000d 12       		.uleb128 0x12
 1182 000e 01       		.uleb128 0x1
 1183 000f 10       		.uleb128 0x10
 1184 0010 06       		.uleb128 0x6
 1185 0011 00       		.byte	0
 1186 0012 00       		.byte	0
 1187 0013 02       		.uleb128 0x2
 1188 0014 24       		.uleb128 0x24
 1189 0015 00       		.byte	0
 1190 0016 0B       		.uleb128 0xb
 1191 0017 0B       		.uleb128 0xb
 1192 0018 3E       		.uleb128 0x3e
 1193 0019 0B       		.uleb128 0xb
 1194 001a 03       		.uleb128 0x3
 1195 001b 0E       		.uleb128 0xe
 1196 001c 00       		.byte	0
 1197 001d 00       		.byte	0
ARM GAS  /tmp/ccBweOod.s 			page 41


 1198 001e 03       		.uleb128 0x3
 1199 001f 16       		.uleb128 0x16
 1200 0020 00       		.byte	0
 1201 0021 03       		.uleb128 0x3
 1202 0022 0E       		.uleb128 0xe
 1203 0023 3A       		.uleb128 0x3a
 1204 0024 0B       		.uleb128 0xb
 1205 0025 3B       		.uleb128 0x3b
 1206 0026 0B       		.uleb128 0xb
 1207 0027 49       		.uleb128 0x49
 1208 0028 13       		.uleb128 0x13
 1209 0029 00       		.byte	0
 1210 002a 00       		.byte	0
 1211 002b 04       		.uleb128 0x4
 1212 002c 24       		.uleb128 0x24
 1213 002d 00       		.byte	0
 1214 002e 0B       		.uleb128 0xb
 1215 002f 0B       		.uleb128 0xb
 1216 0030 3E       		.uleb128 0x3e
 1217 0031 0B       		.uleb128 0xb
 1218 0032 03       		.uleb128 0x3
 1219 0033 08       		.uleb128 0x8
 1220 0034 00       		.byte	0
 1221 0035 00       		.byte	0
 1222 0036 05       		.uleb128 0x5
 1223 0037 35       		.uleb128 0x35
 1224 0038 00       		.byte	0
 1225 0039 49       		.uleb128 0x49
 1226 003a 13       		.uleb128 0x13
 1227 003b 00       		.byte	0
 1228 003c 00       		.byte	0
 1229 003d 06       		.uleb128 0x6
 1230 003e 13       		.uleb128 0x13
 1231 003f 01       		.byte	0x1
 1232 0040 0B       		.uleb128 0xb
 1233 0041 0B       		.uleb128 0xb
 1234 0042 3A       		.uleb128 0x3a
 1235 0043 0B       		.uleb128 0xb
 1236 0044 3B       		.uleb128 0x3b
 1237 0045 05       		.uleb128 0x5
 1238 0046 01       		.uleb128 0x1
 1239 0047 13       		.uleb128 0x13
 1240 0048 00       		.byte	0
 1241 0049 00       		.byte	0
 1242 004a 07       		.uleb128 0x7
 1243 004b 0D       		.uleb128 0xd
 1244 004c 00       		.byte	0
 1245 004d 03       		.uleb128 0x3
 1246 004e 0E       		.uleb128 0xe
 1247 004f 3A       		.uleb128 0x3a
 1248 0050 0B       		.uleb128 0xb
 1249 0051 3B       		.uleb128 0x3b
 1250 0052 05       		.uleb128 0x5
 1251 0053 49       		.uleb128 0x49
 1252 0054 13       		.uleb128 0x13
 1253 0055 38       		.uleb128 0x38
 1254 0056 0A       		.uleb128 0xa
ARM GAS  /tmp/ccBweOod.s 			page 42


 1255 0057 00       		.byte	0
 1256 0058 00       		.byte	0
 1257 0059 08       		.uleb128 0x8
 1258 005a 0D       		.uleb128 0xd
 1259 005b 00       		.byte	0
 1260 005c 03       		.uleb128 0x3
 1261 005d 08       		.uleb128 0x8
 1262 005e 3A       		.uleb128 0x3a
 1263 005f 0B       		.uleb128 0xb
 1264 0060 3B       		.uleb128 0x3b
 1265 0061 05       		.uleb128 0x5
 1266 0062 49       		.uleb128 0x49
 1267 0063 13       		.uleb128 0x13
 1268 0064 38       		.uleb128 0x38
 1269 0065 0A       		.uleb128 0xa
 1270 0066 00       		.byte	0
 1271 0067 00       		.byte	0
 1272 0068 09       		.uleb128 0x9
 1273 0069 26       		.uleb128 0x26
 1274 006a 00       		.byte	0
 1275 006b 49       		.uleb128 0x49
 1276 006c 13       		.uleb128 0x13
 1277 006d 00       		.byte	0
 1278 006e 00       		.byte	0
 1279 006f 0A       		.uleb128 0xa
 1280 0070 01       		.uleb128 0x1
 1281 0071 01       		.byte	0x1
 1282 0072 49       		.uleb128 0x49
 1283 0073 13       		.uleb128 0x13
 1284 0074 01       		.uleb128 0x1
 1285 0075 13       		.uleb128 0x13
 1286 0076 00       		.byte	0
 1287 0077 00       		.byte	0
 1288 0078 0B       		.uleb128 0xb
 1289 0079 21       		.uleb128 0x21
 1290 007a 00       		.byte	0
 1291 007b 49       		.uleb128 0x49
 1292 007c 13       		.uleb128 0x13
 1293 007d 2F       		.uleb128 0x2f
 1294 007e 0B       		.uleb128 0xb
 1295 007f 00       		.byte	0
 1296 0080 00       		.byte	0
 1297 0081 0C       		.uleb128 0xc
 1298 0082 16       		.uleb128 0x16
 1299 0083 00       		.byte	0
 1300 0084 03       		.uleb128 0x3
 1301 0085 0E       		.uleb128 0xe
 1302 0086 3A       		.uleb128 0x3a
 1303 0087 0B       		.uleb128 0xb
 1304 0088 3B       		.uleb128 0x3b
 1305 0089 05       		.uleb128 0x5
 1306 008a 49       		.uleb128 0x49
 1307 008b 13       		.uleb128 0x13
 1308 008c 00       		.byte	0
 1309 008d 00       		.byte	0
 1310 008e 0D       		.uleb128 0xd
 1311 008f 04       		.uleb128 0x4
ARM GAS  /tmp/ccBweOod.s 			page 43


 1312 0090 01       		.byte	0x1
 1313 0091 0B       		.uleb128 0xb
 1314 0092 0B       		.uleb128 0xb
 1315 0093 3A       		.uleb128 0x3a
 1316 0094 0B       		.uleb128 0xb
 1317 0095 3B       		.uleb128 0x3b
 1318 0096 05       		.uleb128 0x5
 1319 0097 01       		.uleb128 0x1
 1320 0098 13       		.uleb128 0x13
 1321 0099 00       		.byte	0
 1322 009a 00       		.byte	0
 1323 009b 0E       		.uleb128 0xe
 1324 009c 28       		.uleb128 0x28
 1325 009d 00       		.byte	0
 1326 009e 03       		.uleb128 0x3
 1327 009f 0E       		.uleb128 0xe
 1328 00a0 1C       		.uleb128 0x1c
 1329 00a1 0D       		.uleb128 0xd
 1330 00a2 00       		.byte	0
 1331 00a3 00       		.byte	0
 1332 00a4 0F       		.uleb128 0xf
 1333 00a5 28       		.uleb128 0x28
 1334 00a6 00       		.byte	0
 1335 00a7 03       		.uleb128 0x3
 1336 00a8 08       		.uleb128 0x8
 1337 00a9 1C       		.uleb128 0x1c
 1338 00aa 0D       		.uleb128 0xd
 1339 00ab 00       		.byte	0
 1340 00ac 00       		.byte	0
 1341 00ad 10       		.uleb128 0x10
 1342 00ae 2E       		.uleb128 0x2e
 1343 00af 00       		.byte	0
 1344 00b0 3F       		.uleb128 0x3f
 1345 00b1 0C       		.uleb128 0xc
 1346 00b2 03       		.uleb128 0x3
 1347 00b3 0E       		.uleb128 0xe
 1348 00b4 3A       		.uleb128 0x3a
 1349 00b5 0B       		.uleb128 0xb
 1350 00b6 3B       		.uleb128 0x3b
 1351 00b7 0B       		.uleb128 0xb
 1352 00b8 27       		.uleb128 0x27
 1353 00b9 0C       		.uleb128 0xc
 1354 00ba 11       		.uleb128 0x11
 1355 00bb 01       		.uleb128 0x1
 1356 00bc 12       		.uleb128 0x12
 1357 00bd 01       		.uleb128 0x1
 1358 00be 40       		.uleb128 0x40
 1359 00bf 06       		.uleb128 0x6
 1360 00c0 00       		.byte	0
 1361 00c1 00       		.byte	0
 1362 00c2 11       		.uleb128 0x11
 1363 00c3 2E       		.uleb128 0x2e
 1364 00c4 01       		.byte	0x1
 1365 00c5 3F       		.uleb128 0x3f
 1366 00c6 0C       		.uleb128 0xc
 1367 00c7 03       		.uleb128 0x3
 1368 00c8 0E       		.uleb128 0xe
ARM GAS  /tmp/ccBweOod.s 			page 44


 1369 00c9 3A       		.uleb128 0x3a
 1370 00ca 0B       		.uleb128 0xb
 1371 00cb 3B       		.uleb128 0x3b
 1372 00cc 05       		.uleb128 0x5
 1373 00cd 27       		.uleb128 0x27
 1374 00ce 0C       		.uleb128 0xc
 1375 00cf 11       		.uleb128 0x11
 1376 00d0 01       		.uleb128 0x1
 1377 00d1 12       		.uleb128 0x12
 1378 00d2 01       		.uleb128 0x1
 1379 00d3 40       		.uleb128 0x40
 1380 00d4 06       		.uleb128 0x6
 1381 00d5 01       		.uleb128 0x1
 1382 00d6 13       		.uleb128 0x13
 1383 00d7 00       		.byte	0
 1384 00d8 00       		.byte	0
 1385 00d9 12       		.uleb128 0x12
 1386 00da 34       		.uleb128 0x34
 1387 00db 00       		.byte	0
 1388 00dc 03       		.uleb128 0x3
 1389 00dd 08       		.uleb128 0x8
 1390 00de 3A       		.uleb128 0x3a
 1391 00df 0B       		.uleb128 0xb
 1392 00e0 3B       		.uleb128 0x3b
 1393 00e1 05       		.uleb128 0x5
 1394 00e2 49       		.uleb128 0x49
 1395 00e3 13       		.uleb128 0x13
 1396 00e4 02       		.uleb128 0x2
 1397 00e5 0A       		.uleb128 0xa
 1398 00e6 00       		.byte	0
 1399 00e7 00       		.byte	0
 1400 00e8 13       		.uleb128 0x13
 1401 00e9 34       		.uleb128 0x34
 1402 00ea 00       		.byte	0
 1403 00eb 03       		.uleb128 0x3
 1404 00ec 0E       		.uleb128 0xe
 1405 00ed 3A       		.uleb128 0x3a
 1406 00ee 0B       		.uleb128 0xb
 1407 00ef 3B       		.uleb128 0x3b
 1408 00f0 05       		.uleb128 0x5
 1409 00f1 49       		.uleb128 0x49
 1410 00f2 13       		.uleb128 0x13
 1411 00f3 02       		.uleb128 0x2
 1412 00f4 0A       		.uleb128 0xa
 1413 00f5 00       		.byte	0
 1414 00f6 00       		.byte	0
 1415 00f7 14       		.uleb128 0x14
 1416 00f8 2E       		.uleb128 0x2e
 1417 00f9 00       		.byte	0
 1418 00fa 03       		.uleb128 0x3
 1419 00fb 0E       		.uleb128 0xe
 1420 00fc 3A       		.uleb128 0x3a
 1421 00fd 0B       		.uleb128 0xb
 1422 00fe 3B       		.uleb128 0x3b
 1423 00ff 05       		.uleb128 0x5
 1424 0100 27       		.uleb128 0x27
 1425 0101 0C       		.uleb128 0xc
ARM GAS  /tmp/ccBweOod.s 			page 45


 1426 0102 11       		.uleb128 0x11
 1427 0103 01       		.uleb128 0x1
 1428 0104 12       		.uleb128 0x12
 1429 0105 01       		.uleb128 0x1
 1430 0106 40       		.uleb128 0x40
 1431 0107 06       		.uleb128 0x6
 1432 0108 00       		.byte	0
 1433 0109 00       		.byte	0
 1434 010a 15       		.uleb128 0x15
 1435 010b 2E       		.uleb128 0x2e
 1436 010c 01       		.byte	0x1
 1437 010d 03       		.uleb128 0x3
 1438 010e 0E       		.uleb128 0xe
 1439 010f 3A       		.uleb128 0x3a
 1440 0110 0B       		.uleb128 0xb
 1441 0111 3B       		.uleb128 0x3b
 1442 0112 05       		.uleb128 0x5
 1443 0113 27       		.uleb128 0x27
 1444 0114 0C       		.uleb128 0xc
 1445 0115 11       		.uleb128 0x11
 1446 0116 01       		.uleb128 0x1
 1447 0117 12       		.uleb128 0x12
 1448 0118 01       		.uleb128 0x1
 1449 0119 40       		.uleb128 0x40
 1450 011a 06       		.uleb128 0x6
 1451 011b 01       		.uleb128 0x1
 1452 011c 13       		.uleb128 0x13
 1453 011d 00       		.byte	0
 1454 011e 00       		.byte	0
 1455 011f 16       		.uleb128 0x16
 1456 0120 34       		.uleb128 0x34
 1457 0121 00       		.byte	0
 1458 0122 03       		.uleb128 0x3
 1459 0123 0E       		.uleb128 0xe
 1460 0124 3A       		.uleb128 0x3a
 1461 0125 0B       		.uleb128 0xb
 1462 0126 3B       		.uleb128 0x3b
 1463 0127 05       		.uleb128 0x5
 1464 0128 49       		.uleb128 0x49
 1465 0129 13       		.uleb128 0x13
 1466 012a 3F       		.uleb128 0x3f
 1467 012b 0C       		.uleb128 0xc
 1468 012c 3C       		.uleb128 0x3c
 1469 012d 0C       		.uleb128 0xc
 1470 012e 00       		.byte	0
 1471 012f 00       		.byte	0
 1472 0130 17       		.uleb128 0x17
 1473 0131 34       		.uleb128 0x34
 1474 0132 00       		.byte	0
 1475 0133 03       		.uleb128 0x3
 1476 0134 0E       		.uleb128 0xe
 1477 0135 3A       		.uleb128 0x3a
 1478 0136 0B       		.uleb128 0xb
 1479 0137 3B       		.uleb128 0x3b
 1480 0138 0B       		.uleb128 0xb
 1481 0139 49       		.uleb128 0x49
 1482 013a 13       		.uleb128 0x13
ARM GAS  /tmp/ccBweOod.s 			page 46


 1483 013b 3F       		.uleb128 0x3f
 1484 013c 0C       		.uleb128 0xc
 1485 013d 3C       		.uleb128 0x3c
 1486 013e 0C       		.uleb128 0xc
 1487 013f 00       		.byte	0
 1488 0140 00       		.byte	0
 1489 0141 18       		.uleb128 0x18
 1490 0142 34       		.uleb128 0x34
 1491 0143 00       		.byte	0
 1492 0144 03       		.uleb128 0x3
 1493 0145 0E       		.uleb128 0xe
 1494 0146 3A       		.uleb128 0x3a
 1495 0147 0B       		.uleb128 0xb
 1496 0148 3B       		.uleb128 0x3b
 1497 0149 0B       		.uleb128 0xb
 1498 014a 49       		.uleb128 0x49
 1499 014b 13       		.uleb128 0x13
 1500 014c 3F       		.uleb128 0x3f
 1501 014d 0C       		.uleb128 0xc
 1502 014e 02       		.uleb128 0x2
 1503 014f 0A       		.uleb128 0xa
 1504 0150 00       		.byte	0
 1505 0151 00       		.byte	0
 1506 0152 00       		.byte	0
 1507              		.section	.debug_loc,"",%progbits
 1508              	.Ldebug_loc0:
 1509              	.LLST0:
 1510 0000 00000000 		.4byte	.LFB55-.Ltext0
 1511 0004 02000000 		.4byte	.LCFI0-.Ltext0
 1512 0008 0200     		.2byte	0x2
 1513 000a 7D       		.byte	0x7d
 1514 000b 00       		.sleb128 0
 1515 000c 02000000 		.4byte	.LCFI0-.Ltext0
 1516 0010 04000000 		.4byte	.LCFI1-.Ltext0
 1517 0014 0200     		.2byte	0x2
 1518 0016 7D       		.byte	0x7d
 1519 0017 08       		.sleb128 8
 1520 0018 04000000 		.4byte	.LCFI1-.Ltext0
 1521 001c AA000000 		.4byte	.LFE55-.Ltext0
 1522 0020 0200     		.2byte	0x2
 1523 0022 77       		.byte	0x77
 1524 0023 08       		.sleb128 8
 1525 0024 00000000 		.4byte	0
 1526 0028 00000000 		.4byte	0
 1527              	.LLST1:
 1528 002c AC000000 		.4byte	.LFB56-.Ltext0
 1529 0030 AE000000 		.4byte	.LCFI2-.Ltext0
 1530 0034 0200     		.2byte	0x2
 1531 0036 7D       		.byte	0x7d
 1532 0037 00       		.sleb128 0
 1533 0038 AE000000 		.4byte	.LCFI2-.Ltext0
 1534 003c B0000000 		.4byte	.LCFI3-.Ltext0
 1535 0040 0200     		.2byte	0x2
 1536 0042 7D       		.byte	0x7d
 1537 0043 04       		.sleb128 4
 1538 0044 B0000000 		.4byte	.LCFI3-.Ltext0
 1539 0048 B2000000 		.4byte	.LCFI4-.Ltext0
ARM GAS  /tmp/ccBweOod.s 			page 47


 1540 004c 0200     		.2byte	0x2
 1541 004e 7D       		.byte	0x7d
 1542 004f 18       		.sleb128 24
 1543 0050 B2000000 		.4byte	.LCFI4-.Ltext0
 1544 0054 F4010000 		.4byte	.LFE56-.Ltext0
 1545 0058 0200     		.2byte	0x2
 1546 005a 77       		.byte	0x77
 1547 005b 18       		.sleb128 24
 1548 005c 00000000 		.4byte	0
 1549 0060 00000000 		.4byte	0
 1550              	.LLST2:
 1551 0064 F4010000 		.4byte	.LFB57-.Ltext0
 1552 0068 F6010000 		.4byte	.LCFI5-.Ltext0
 1553 006c 0200     		.2byte	0x2
 1554 006e 7D       		.byte	0x7d
 1555 006f 00       		.sleb128 0
 1556 0070 F6010000 		.4byte	.LCFI5-.Ltext0
 1557 0074 F8010000 		.4byte	.LCFI6-.Ltext0
 1558 0078 0200     		.2byte	0x2
 1559 007a 7D       		.byte	0x7d
 1560 007b 08       		.sleb128 8
 1561 007c F8010000 		.4byte	.LCFI6-.Ltext0
 1562 0080 FE010000 		.4byte	.LFE57-.Ltext0
 1563 0084 0200     		.2byte	0x2
 1564 0086 77       		.byte	0x77
 1565 0087 08       		.sleb128 8
 1566 0088 00000000 		.4byte	0
 1567 008c 00000000 		.4byte	0
 1568              	.LLST3:
 1569 0090 00020000 		.4byte	.LFB58-.Ltext0
 1570 0094 02020000 		.4byte	.LCFI7-.Ltext0
 1571 0098 0200     		.2byte	0x2
 1572 009a 7D       		.byte	0x7d
 1573 009b 00       		.sleb128 0
 1574 009c 02020000 		.4byte	.LCFI7-.Ltext0
 1575 00a0 04020000 		.4byte	.LCFI8-.Ltext0
 1576 00a4 0200     		.2byte	0x2
 1577 00a6 7D       		.byte	0x7d
 1578 00a7 04       		.sleb128 4
 1579 00a8 04020000 		.4byte	.LCFI8-.Ltext0
 1580 00ac 06020000 		.4byte	.LCFI9-.Ltext0
 1581 00b0 0200     		.2byte	0x2
 1582 00b2 7D       		.byte	0x7d
 1583 00b3 10       		.sleb128 16
 1584 00b4 06020000 		.4byte	.LCFI9-.Ltext0
 1585 00b8 AA030000 		.4byte	.LFE58-.Ltext0
 1586 00bc 0200     		.2byte	0x2
 1587 00be 77       		.byte	0x77
 1588 00bf 10       		.sleb128 16
 1589 00c0 00000000 		.4byte	0
 1590 00c4 00000000 		.4byte	0
 1591              		.section	.debug_aranges,"",%progbits
 1592 0000 1C000000 		.4byte	0x1c
 1593 0004 0200     		.2byte	0x2
 1594 0006 00000000 		.4byte	.Ldebug_info0
 1595 000a 04       		.byte	0x4
 1596 000b 00       		.byte	0
ARM GAS  /tmp/ccBweOod.s 			page 48


 1597 000c 0000     		.2byte	0
 1598 000e 0000     		.2byte	0
 1599 0010 00000000 		.4byte	.Ltext0
 1600 0014 AA030000 		.4byte	.Letext0-.Ltext0
 1601 0018 00000000 		.4byte	0
 1602 001c 00000000 		.4byte	0
 1603              		.section	.debug_line,"",%progbits
 1604              	.Ldebug_line0:
 1605 0000 6E010000 		.section	.debug_str,"MS",%progbits,1
 1605      0200E900 
 1605      00000201 
 1605      FB0E0D00 
 1605      01010101 
 1606              	.LASF42:
 1607 0000 5243435F 		.ascii	"RCC_TypeDef\000"
 1607      54797065 
 1607      44656600 
 1608              	.LASF37:
 1609 000c 41504231 		.ascii	"APB1RSTR\000"
 1609      52535452 
 1609      00
 1610              	.LASF25:
 1611 0015 49534152 		.ascii	"ISAR\000"
 1611      00
 1612              	.LASF41:
 1613 001a 42444352 		.ascii	"BDCR\000"
 1613      00
 1614              	.LASF46:
 1615 001f 48534553 		.ascii	"HSEStatus\000"
 1615      74617475 
 1615      7300
 1616              	.LASF13:
 1617 0029 43505549 		.ascii	"CPUID\000"
 1617      4400
 1618              	.LASF30:
 1619 002f 4B455952 		.ascii	"KEYR\000"
 1619      00
 1620              	.LASF26:
 1621 0034 52455345 		.ascii	"RESERVED0\000"
 1621      52564544 
 1621      3000
 1622              	.LASF35:
 1623 003e 43464752 		.ascii	"CFGR\000"
 1623      00
 1624              	.LASF3:
 1625 0043 75696E74 		.ascii	"uint8_t\000"
 1625      385F7400 
 1626              	.LASF40:
 1627 004b 41504231 		.ascii	"APB1ENR\000"
 1627      454E5200 
 1628              	.LASF2:
 1629 0053 73686F72 		.ascii	"short int\000"
 1629      7420696E 
 1629      7400
 1630              	.LASF14:
 1631 005d 49435352 		.ascii	"ICSR\000"
 1631      00
ARM GAS  /tmp/ccBweOod.s 			page 49


 1632              	.LASF31:
 1633 0062 4F50544B 		.ascii	"OPTKEYR\000"
 1633      45595200 
 1634              	.LASF10:
 1635 006a 6C6F6E67 		.ascii	"long long int\000"
 1635      206C6F6E 
 1635      6720696E 
 1635      7400
 1636              	.LASF22:
 1637 0078 42464152 		.ascii	"BFAR\000"
 1637      00
 1638              	.LASF7:
 1639 007d 6C6F6E67 		.ascii	"long int\000"
 1639      20696E74 
 1639      00
 1640              	.LASF43:
 1641 0086 706C6C6D 		.ascii	"pllmull\000"
 1641      756C6C00 
 1642              	.LASF38:
 1643 008e 41484245 		.ascii	"AHBENR\000"
 1643      4E5200
 1644              	.LASF36:
 1645 0095 41504232 		.ascii	"APB2RSTR\000"
 1645      52535452 
 1645      00
 1646              	.LASF33:
 1647 009e 57525052 		.ascii	"WRPR\000"
 1647      00
 1648              	.LASF18:
 1649 00a3 43465352 		.ascii	"CFSR\000"
 1649      00
 1650              	.LASF56:
 1651 00a8 53657453 		.ascii	"SetSysClockTo72\000"
 1651      7973436C 
 1651      6F636B54 
 1651      6F373200 
 1652              	.LASF44:
 1653 00b8 706C6C73 		.ascii	"pllsource\000"
 1653      6F757263 
 1653      6500
 1654              	.LASF1:
 1655 00c2 756E7369 		.ascii	"unsigned char\000"
 1655      676E6564 
 1655      20636861 
 1655      7200
 1656              	.LASF16:
 1657 00d0 41495243 		.ascii	"AIRCR\000"
 1657      5200
 1658              	.LASF28:
 1659 00d6 5343425F 		.ascii	"SCB_Type\000"
 1659      54797065 
 1659      00
 1660              	.LASF39:
 1661 00df 41504232 		.ascii	"APB2ENR\000"
 1661      454E5200 
 1662              	.LASF50:
 1663 00e7 474E5520 		.ascii	"GNU C 4.6.2 20121016 (release) [ARM/embedded-4_6-br"
ARM GAS  /tmp/ccBweOod.s 			page 50


 1663      4320342E 
 1663      362E3220 
 1663      32303132 
 1663      31303136 
 1664 011a 616E6368 		.ascii	"anch revision 192487]\000"
 1664      20726576 
 1664      6973696F 
 1664      6E203139 
 1664      32343837 
 1665              	.LASF45:
 1666 0130 53746172 		.ascii	"StartUpCounter\000"
 1666      74557043 
 1666      6F756E74 
 1666      657200
 1667              	.LASF0:
 1668 013f 7369676E 		.ascii	"signed char\000"
 1668      65642063 
 1668      68617200 
 1669              	.LASF11:
 1670 014b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1670      206C6F6E 
 1670      6720756E 
 1670      7369676E 
 1670      65642069 
 1671              	.LASF8:
 1672 0162 75696E74 		.ascii	"uint32_t\000"
 1672      33325F74 
 1672      00
 1673              	.LASF12:
 1674 016b 756E7369 		.ascii	"unsigned int\000"
 1674      676E6564 
 1674      20696E74 
 1674      00
 1675              	.LASF4:
 1676 0178 75696E74 		.ascii	"uint16_t\000"
 1676      31365F74 
 1676      00
 1677              	.LASF17:
 1678 0181 53484353 		.ascii	"SHCSR\000"
 1678      5200
 1679              	.LASF54:
 1680 0187 53797374 		.ascii	"SystemCoreClockUpdate\000"
 1680      656D436F 
 1680      7265436C 
 1680      6F636B55 
 1680      70646174 
 1681              	.LASF21:
 1682 019d 4D4D4641 		.ascii	"MMFAR\000"
 1682      5200
 1683              	.LASF53:
 1684 01a3 53797374 		.ascii	"SystemInit\000"
 1684      656D496E 
 1684      697400
 1685              	.LASF5:
 1686 01ae 73686F72 		.ascii	"short unsigned int\000"
 1686      7420756E 
 1686      7369676E 
ARM GAS  /tmp/ccBweOod.s 			page 51


 1686      65642069 
 1686      6E7400
 1687              	.LASF52:
 1688 01c1 2F6D6564 		.ascii	"/media/denis/EC5286A55286745C/projects/STM32-P103/e"
 1688      69612F64 
 1688      656E6973 
 1688      2F454335 
 1688      32383641 
 1689 01f4 6D623466 		.ascii	"mb4fun.de/STM32Test/\000"
 1689      756E2E64 
 1689      652F5354 
 1689      4D333254 
 1689      6573742F 
 1690              	.LASF15:
 1691 0209 56544F52 		.ascii	"VTOR\000"
 1691      00
 1692              	.LASF6:
 1693 020e 696E7433 		.ascii	"int32_t\000"
 1693      325F7400 
 1694              	.LASF20:
 1695 0216 44465352 		.ascii	"DFSR\000"
 1695      00
 1696              	.LASF48:
 1697 021b 53797374 		.ascii	"SystemCoreClock\000"
 1697      656D436F 
 1697      7265436C 
 1697      6F636B00 
 1698              	.LASF19:
 1699 022b 48465352 		.ascii	"HFSR\000"
 1699      00
 1700              	.LASF24:
 1701 0230 4D4D4652 		.ascii	"MMFR\000"
 1701      00
 1702              	.LASF49:
 1703 0235 41484250 		.ascii	"AHBPrescTable\000"
 1703      72657363 
 1703      5461626C 
 1703      6500
 1704              	.LASF55:
 1705 0243 53657453 		.ascii	"SetSysClock\000"
 1705      7973436C 
 1705      6F636B00 
 1706              	.LASF51:
 1707 024f 636D7369 		.ascii	"cmsis/device/system_stm32f10x.c\000"
 1707      732F6465 
 1707      76696365 
 1707      2F737973 
 1707      74656D5F 
 1708              	.LASF9:
 1709 026f 6C6F6E67 		.ascii	"long unsigned int\000"
 1709      20756E73 
 1709      69676E65 
 1709      6420696E 
 1709      7400
 1710              	.LASF29:
 1711 0281 52455345 		.ascii	"RESET\000"
 1711      5400
ARM GAS  /tmp/ccBweOod.s 			page 52


 1712              	.LASF23:
 1713 0287 41465352 		.ascii	"AFSR\000"
 1713      00
 1714              	.LASF32:
 1715 028c 52455345 		.ascii	"RESERVED\000"
 1715      52564544 
 1715      00
 1716              	.LASF34:
 1717 0295 464C4153 		.ascii	"FLASH_TypeDef\000"
 1717      485F5479 
 1717      70654465 
 1717      6600
 1718              	.LASF47:
 1719 02a3 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1719      52784275 
 1719      66666572 
 1719      00
 1720              	.LASF27:
 1721 02b0 43504143 		.ascii	"CPACR\000"
 1721      5200
 1722              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.6.2 20121016 (release) [ARM/embedded-4_6-br
ARM GAS  /tmp/ccBweOod.s 			page 53


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f10x.c
     /tmp/ccBweOod.s:56     .data:00000000 SystemCoreClock
     /tmp/ccBweOod.s:53     .data:00000000 $d
     /tmp/ccBweOod.s:62     .data:00000004 AHBPrescTable
     /tmp/ccBweOod.s:80     .text:00000000 $t
     /tmp/ccBweOod.s:85     .text:00000000 SystemInit
     /tmp/ccBweOod.s:325    .text:000001f4 SetSysClock
     /tmp/ccBweOod.s:166    .text:000000ac SystemCoreClockUpdate
     /tmp/ccBweOod.s:350    .text:00000200 SetSysClockTo72
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
