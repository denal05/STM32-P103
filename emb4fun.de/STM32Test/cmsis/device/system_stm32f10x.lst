ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"system_stm32f10x.c"
  14              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.8.4 20140526 (release) [ARM/embedded-4_8-
  15              	@	compiled by GNU C version 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.9.00), GMP vers
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./inc -I ./cmsis/core -I ./cmsis/device
  18              	@ -iprefix /opt/gcc-arm-none-eabi-4_8-2014q2/bin/../lib/gcc/arm-none-eabi/4.8.4/
  19              	@ -isysroot /opt/gcc-arm-none-eabi-4_8-2014q2/bin/../arm-none-eabi
  20              	@ -MD cmsis/device/system_stm32f10x.d -MF .dep/system_stm32f10x.o.d -MP
  21              	@ -MQ cmsis/device/system_stm32f10x.o -D__USES_INITFINI__ -D STM32F10X_MD
  22              	@ -D RUN_FROM_FLASH=1 cmsis/device/system_stm32f10x.c -mthumb
  23              	@ -mcpu=cortex-m3 -mfloat-abi=soft -mfpu=fpv4-sp-d16
  24              	@ -auxbase-strip cmsis/device/system_stm32f10x.o -gdwarf-2 -O0 -Wall
  25              	@ -Wstrict-prototypes -fverbose-asm
  26              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  27              	@ -fbranch-count-reg -fcommon -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  28              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse -fgcse-lm
  29              	@ -fgnu-runtime -fident -finline-atomics -fira-hoist-pressure
  30              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  31              	@ -fkeep-static-consts -fleading-underscore -fmath-errno
  32              	@ -fmerge-debug-strings -fmove-loop-invariants -fpeephole
  33              	@ -fprefetch-loop-arrays -freg-struct-return
  34              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  35              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  36              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  37              	@ -fsched-stalled-insns-dep -fshow-column -fsigned-zeros
  38              	@ -fsplit-ivs-in-unroller -fstrict-volatile-bitfields -fsync-libcalls
  39              	@ -ftrapping-math -ftree-coalesce-vars -ftree-cselim -ftree-forwprop
  40              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  41              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pta
  42              	@ -ftree-reassoc -ftree-scev-cprop -ftree-slp-vectorize
  43              	@ -ftree-vect-loop-version -funit-at-a-time -fverbose-asm
  44              	@ -fzero-initialized-in-bss -mfix-cortex-m3-ldrd -mlittle-endian
  45              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  46              	@ -mvectorize-with-neon-quad
  47              	
  48              		.text
  49              	.Ltext0:
  50              		.cfi_sections	.debug_frame
  51              		.global	SystemCoreClock
  52              		.data
  53              		.align	2
  54              		.type	SystemCoreClock, %object
  55              		.size	SystemCoreClock, 4
  56              	SystemCoreClock:
  57 0000 00A24A04 		.word	72000000
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 2


  58              		.global	AHBPrescTable
  59              		.align	2
  60              		.type	AHBPrescTable, %object
  61              		.size	AHBPrescTable, 16
  62              	AHBPrescTable:
  63 0004 00       		.byte	0
  64 0005 00       		.byte	0
  65 0006 00       		.byte	0
  66 0007 00       		.byte	0
  67 0008 00       		.byte	0
  68 0009 00       		.byte	0
  69 000a 00       		.byte	0
  70 000b 00       		.byte	0
  71 000c 01       		.byte	1
  72 000d 02       		.byte	2
  73 000e 03       		.byte	3
  74 000f 04       		.byte	4
  75 0010 06       		.byte	6
  76 0011 07       		.byte	7
  77 0012 08       		.byte	8
  78 0013 09       		.byte	9
  79              		.text
  80              		.align	2
  81              		.global	SystemInit
  82              		.thumb
  83              		.thumb_func
  84              		.type	SystemInit, %function
  85              	SystemInit:
  86              	.LFB55:
  87              		.file 1 "cmsis/device/system_stm32f10x.c"
   1:cmsis/device/system_stm32f10x.c **** /**
   2:cmsis/device/system_stm32f10x.c ****   ******************************************************************************
   3:cmsis/device/system_stm32f10x.c ****   * @file    system_stm32f10x.c
   4:cmsis/device/system_stm32f10x.c ****   * @author  MCD Application Team
   5:cmsis/device/system_stm32f10x.c ****   * @version V3.5.0
   6:cmsis/device/system_stm32f10x.c ****   * @date    11-March-2011
   7:cmsis/device/system_stm32f10x.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   8:cmsis/device/system_stm32f10x.c ****   * 
   9:cmsis/device/system_stm32f10x.c ****   * 1.  This file provides two functions and one global variable to be called from 
  10:cmsis/device/system_stm32f10x.c ****   *     user application:
  11:cmsis/device/system_stm32f10x.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  12:cmsis/device/system_stm32f10x.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  13:cmsis/device/system_stm32f10x.c ****   *                      This function is called at startup just after reset and 
  14:cmsis/device/system_stm32f10x.c ****   *                      before branch to main program. This call is made inside
  15:cmsis/device/system_stm32f10x.c ****   *                      the "startup_stm32f10x_xx.s" file.
  16:cmsis/device/system_stm32f10x.c ****   *
  17:cmsis/device/system_stm32f10x.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  18:cmsis/device/system_stm32f10x.c ****   *                                  by the user application to setup the SysTick 
  19:cmsis/device/system_stm32f10x.c ****   *                                  timer or configure other parameters.
  20:cmsis/device/system_stm32f10x.c ****   *                                     
  21:cmsis/device/system_stm32f10x.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  22:cmsis/device/system_stm32f10x.c ****   *                                 be called whenever the core clock is changed
  23:cmsis/device/system_stm32f10x.c ****   *                                 during program execution.
  24:cmsis/device/system_stm32f10x.c ****   *
  25:cmsis/device/system_stm32f10x.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  26:cmsis/device/system_stm32f10x.c ****   *    Then SystemInit() function is called, in "startup_stm32f10x_xx.s" file, to
  27:cmsis/device/system_stm32f10x.c ****   *    configure the system clock before to branch to main program.
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 3


  28:cmsis/device/system_stm32f10x.c ****   *
  29:cmsis/device/system_stm32f10x.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  30:cmsis/device/system_stm32f10x.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  31:cmsis/device/system_stm32f10x.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  32:cmsis/device/system_stm32f10x.c ****   *
  33:cmsis/device/system_stm32f10x.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depedning on
  34:cmsis/device/system_stm32f10x.c ****   *    the product used), refer to "HSE_VALUE" define in "stm32f10x.h" file. 
  35:cmsis/device/system_stm32f10x.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
  36:cmsis/device/system_stm32f10x.c ****   *    are using different crystal you have to adapt the HSE value to your own
  37:cmsis/device/system_stm32f10x.c ****   *    configuration.
  38:cmsis/device/system_stm32f10x.c ****   *        
  39:cmsis/device/system_stm32f10x.c ****   ******************************************************************************
  40:cmsis/device/system_stm32f10x.c ****   * @attention
  41:cmsis/device/system_stm32f10x.c ****   *
  42:cmsis/device/system_stm32f10x.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  43:cmsis/device/system_stm32f10x.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  44:cmsis/device/system_stm32f10x.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  45:cmsis/device/system_stm32f10x.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  46:cmsis/device/system_stm32f10x.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  47:cmsis/device/system_stm32f10x.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  48:cmsis/device/system_stm32f10x.c ****   *
  49:cmsis/device/system_stm32f10x.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  50:cmsis/device/system_stm32f10x.c ****   ******************************************************************************
  51:cmsis/device/system_stm32f10x.c ****   */
  52:cmsis/device/system_stm32f10x.c **** 
  53:cmsis/device/system_stm32f10x.c **** /** @addtogroup CMSIS
  54:cmsis/device/system_stm32f10x.c ****   * @{
  55:cmsis/device/system_stm32f10x.c ****   */
  56:cmsis/device/system_stm32f10x.c **** 
  57:cmsis/device/system_stm32f10x.c **** /** @addtogroup stm32f10x_system
  58:cmsis/device/system_stm32f10x.c ****   * @{
  59:cmsis/device/system_stm32f10x.c ****   */  
  60:cmsis/device/system_stm32f10x.c ****   
  61:cmsis/device/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Includes
  62:cmsis/device/system_stm32f10x.c ****   * @{
  63:cmsis/device/system_stm32f10x.c ****   */
  64:cmsis/device/system_stm32f10x.c **** 
  65:cmsis/device/system_stm32f10x.c **** #include "stm32f10x.h"
  66:cmsis/device/system_stm32f10x.c **** 
  67:cmsis/device/system_stm32f10x.c **** /**
  68:cmsis/device/system_stm32f10x.c ****   * @}
  69:cmsis/device/system_stm32f10x.c ****   */
  70:cmsis/device/system_stm32f10x.c **** 
  71:cmsis/device/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_TypesDefinitions
  72:cmsis/device/system_stm32f10x.c ****   * @{
  73:cmsis/device/system_stm32f10x.c ****   */
  74:cmsis/device/system_stm32f10x.c **** 
  75:cmsis/device/system_stm32f10x.c **** /**
  76:cmsis/device/system_stm32f10x.c ****   * @}
  77:cmsis/device/system_stm32f10x.c ****   */
  78:cmsis/device/system_stm32f10x.c **** 
  79:cmsis/device/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Defines
  80:cmsis/device/system_stm32f10x.c ****   * @{
  81:cmsis/device/system_stm32f10x.c ****   */
  82:cmsis/device/system_stm32f10x.c **** 
  83:cmsis/device/system_stm32f10x.c **** /*!< Uncomment the line corresponding to the desired System clock (SYSCLK)
  84:cmsis/device/system_stm32f10x.c ****    frequency (after reset the HSI is used as SYSCLK source)
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 4


  85:cmsis/device/system_stm32f10x.c ****    
  86:cmsis/device/system_stm32f10x.c ****    IMPORTANT NOTE:
  87:cmsis/device/system_stm32f10x.c ****    ============== 
  88:cmsis/device/system_stm32f10x.c ****    1. After each device reset the HSI is used as System clock source.
  89:cmsis/device/system_stm32f10x.c **** 
  90:cmsis/device/system_stm32f10x.c ****    2. Please make sure that the selected System clock doesn't exceed your device's
  91:cmsis/device/system_stm32f10x.c ****       maximum frequency.
  92:cmsis/device/system_stm32f10x.c ****       
  93:cmsis/device/system_stm32f10x.c ****    3. If none of the define below is enabled, the HSI is used as System clock
  94:cmsis/device/system_stm32f10x.c ****     source.
  95:cmsis/device/system_stm32f10x.c **** 
  96:cmsis/device/system_stm32f10x.c ****    4. The System clock configuration functions provided within this file assume that:
  97:cmsis/device/system_stm32f10x.c ****         - For Low, Medium and High density Value line devices an external 8MHz 
  98:cmsis/device/system_stm32f10x.c ****           crystal is used to drive the System clock.
  99:cmsis/device/system_stm32f10x.c ****         - For Low, Medium and High density devices an external 8MHz crystal is
 100:cmsis/device/system_stm32f10x.c ****           used to drive the System clock.
 101:cmsis/device/system_stm32f10x.c ****         - For Connectivity line devices an external 25MHz crystal is used to drive
 102:cmsis/device/system_stm32f10x.c ****           the System clock.
 103:cmsis/device/system_stm32f10x.c ****      If you are using different crystal you have to adapt those functions accordingly.
 104:cmsis/device/system_stm32f10x.c ****     */
 105:cmsis/device/system_stm32f10x.c ****     
 106:cmsis/device/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || (defined STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 107:cmsis/device/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 108:cmsis/device/system_stm32f10x.c ****  #define SYSCLK_FREQ_24MHz  24000000
 109:cmsis/device/system_stm32f10x.c **** #else
 110:cmsis/device/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 111:cmsis/device/system_stm32f10x.c **** /* #define SYSCLK_FREQ_24MHz  24000000 */ 
 112:cmsis/device/system_stm32f10x.c **** /* #define SYSCLK_FREQ_36MHz  36000000 */
 113:cmsis/device/system_stm32f10x.c **** /* #define SYSCLK_FREQ_48MHz  48000000 */
 114:cmsis/device/system_stm32f10x.c **** /* #define SYSCLK_FREQ_56MHz  56000000 */
 115:cmsis/device/system_stm32f10x.c **** #define SYSCLK_FREQ_72MHz  72000000
 116:cmsis/device/system_stm32f10x.c **** #endif
 117:cmsis/device/system_stm32f10x.c **** 
 118:cmsis/device/system_stm32f10x.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 119:cmsis/device/system_stm32f10x.c ****      on STM3210E-EVAL board (STM32 High density and XL-density devices) or on 
 120:cmsis/device/system_stm32f10x.c ****      STM32100E-EVAL board (STM32 High-density value line devices) as data memory */ 
 121:cmsis/device/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 122:cmsis/device/system_stm32f10x.c **** /* #define DATA_IN_ExtSRAM */
 123:cmsis/device/system_stm32f10x.c **** #endif
 124:cmsis/device/system_stm32f10x.c **** 
 125:cmsis/device/system_stm32f10x.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 126:cmsis/device/system_stm32f10x.c ****      Internal SRAM. */ 
 127:cmsis/device/system_stm32f10x.c **** /* #define VECT_TAB_SRAM */
 128:cmsis/device/system_stm32f10x.c **** #define VECT_TAB_OFFSET  0x0 /*!< Vector Table base offset field. 
 129:cmsis/device/system_stm32f10x.c ****                                   This value must be a multiple of 0x200. */
 130:cmsis/device/system_stm32f10x.c **** 
 131:cmsis/device/system_stm32f10x.c **** 
 132:cmsis/device/system_stm32f10x.c **** /**
 133:cmsis/device/system_stm32f10x.c ****   * @}
 134:cmsis/device/system_stm32f10x.c ****   */
 135:cmsis/device/system_stm32f10x.c **** 
 136:cmsis/device/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Macros
 137:cmsis/device/system_stm32f10x.c ****   * @{
 138:cmsis/device/system_stm32f10x.c ****   */
 139:cmsis/device/system_stm32f10x.c **** 
 140:cmsis/device/system_stm32f10x.c **** /**
 141:cmsis/device/system_stm32f10x.c ****   * @}
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 5


 142:cmsis/device/system_stm32f10x.c ****   */
 143:cmsis/device/system_stm32f10x.c **** 
 144:cmsis/device/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Variables
 145:cmsis/device/system_stm32f10x.c ****   * @{
 146:cmsis/device/system_stm32f10x.c ****   */
 147:cmsis/device/system_stm32f10x.c **** 
 148:cmsis/device/system_stm32f10x.c **** /*******************************************************************************
 149:cmsis/device/system_stm32f10x.c **** *  Clock Definitions
 150:cmsis/device/system_stm32f10x.c **** *******************************************************************************/
 151:cmsis/device/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 152:cmsis/device/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_HSE;        /*!< System Clock Frequency (Core Cloc
 153:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 154:cmsis/device/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_24MHz;        /*!< System Clock Frequency (Core Cl
 155:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 156:cmsis/device/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_36MHz;        /*!< System Clock Frequency (Core Cl
 157:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 158:cmsis/device/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_48MHz;        /*!< System Clock Frequency (Core Cl
 159:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 160:cmsis/device/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_56MHz;        /*!< System Clock Frequency (Core Cl
 161:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 162:cmsis/device/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_72MHz;        /*!< System Clock Frequency (Core Cl
 163:cmsis/device/system_stm32f10x.c **** #else /*!< HSI Selected as System Clock source */
 164:cmsis/device/system_stm32f10x.c ****   uint32_t SystemCoreClock         = HSI_VALUE;        /*!< System Clock Frequency (Core Clock) */
 165:cmsis/device/system_stm32f10x.c **** #endif
 166:cmsis/device/system_stm32f10x.c **** 
 167:cmsis/device/system_stm32f10x.c **** __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 168:cmsis/device/system_stm32f10x.c **** /**
 169:cmsis/device/system_stm32f10x.c ****   * @}
 170:cmsis/device/system_stm32f10x.c ****   */
 171:cmsis/device/system_stm32f10x.c **** 
 172:cmsis/device/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_FunctionPrototypes
 173:cmsis/device/system_stm32f10x.c ****   * @{
 174:cmsis/device/system_stm32f10x.c ****   */
 175:cmsis/device/system_stm32f10x.c **** 
 176:cmsis/device/system_stm32f10x.c **** static void SetSysClock(void);
 177:cmsis/device/system_stm32f10x.c **** 
 178:cmsis/device/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 179:cmsis/device/system_stm32f10x.c ****   static void SetSysClockToHSE(void);
 180:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 181:cmsis/device/system_stm32f10x.c ****   static void SetSysClockTo24(void);
 182:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 183:cmsis/device/system_stm32f10x.c ****   static void SetSysClockTo36(void);
 184:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 185:cmsis/device/system_stm32f10x.c ****   static void SetSysClockTo48(void);
 186:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 187:cmsis/device/system_stm32f10x.c ****   static void SetSysClockTo56(void);  
 188:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 189:cmsis/device/system_stm32f10x.c ****   static void SetSysClockTo72(void);
 190:cmsis/device/system_stm32f10x.c **** #endif
 191:cmsis/device/system_stm32f10x.c **** 
 192:cmsis/device/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 193:cmsis/device/system_stm32f10x.c ****   static void SystemInit_ExtMemCtl(void); 
 194:cmsis/device/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 195:cmsis/device/system_stm32f10x.c **** 
 196:cmsis/device/system_stm32f10x.c **** /**
 197:cmsis/device/system_stm32f10x.c ****   * @}
 198:cmsis/device/system_stm32f10x.c ****   */
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 6


 199:cmsis/device/system_stm32f10x.c **** 
 200:cmsis/device/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Functions
 201:cmsis/device/system_stm32f10x.c ****   * @{
 202:cmsis/device/system_stm32f10x.c ****   */
 203:cmsis/device/system_stm32f10x.c **** 
 204:cmsis/device/system_stm32f10x.c **** /**
 205:cmsis/device/system_stm32f10x.c ****   * @brief  Setup the microcontroller system
 206:cmsis/device/system_stm32f10x.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 207:cmsis/device/system_stm32f10x.c ****   *         SystemCoreClock variable.
 208:cmsis/device/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 209:cmsis/device/system_stm32f10x.c ****   * @param  None
 210:cmsis/device/system_stm32f10x.c ****   * @retval None
 211:cmsis/device/system_stm32f10x.c ****   */
 212:cmsis/device/system_stm32f10x.c **** void SystemInit (void)
 213:cmsis/device/system_stm32f10x.c **** {
  88              		.loc 1 213 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 1, uses_anonymous_args = 0
  92 0000 80B5     		push	{r7, lr}	@
  93              	.LCFI0:
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 7, -8
  96              		.cfi_offset 14, -4
  97 0002 00AF     		add	r7, sp, #0	@,,
  98              	.LCFI1:
  99              		.cfi_def_cfa_register 7
 214:cmsis/device/system_stm32f10x.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 215:cmsis/device/system_stm32f10x.c ****   /* Set HSION bit */
 216:cmsis/device/system_stm32f10x.c ****   RCC->CR |= (uint32_t)0x00000001;
 100              		.loc 1 216 0
 101 0004 154B     		ldr	r3, .L2	@ D.5192,
 102 0006 154A     		ldr	r2, .L2	@ D.5192,
 103 0008 1268     		ldr	r2, [r2]	@ D.5193, _2->CR
 104 000a 42F00102 		orr	r2, r2, #1	@ D.5193, D.5193,
 105 000e 1A60     		str	r2, [r3]	@ D.5193, _1->CR
 217:cmsis/device/system_stm32f10x.c **** 
 218:cmsis/device/system_stm32f10x.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 219:cmsis/device/system_stm32f10x.c **** #ifndef STM32F10X_CL
 220:cmsis/device/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
 106              		.loc 1 220 0
 107 0010 124A     		ldr	r2, .L2	@ D.5192,
 108 0012 124B     		ldr	r3, .L2	@ D.5192,
 109 0014 5968     		ldr	r1, [r3, #4]	@ D.5193, _6->CFGR
 110 0016 124B     		ldr	r3, .L2+4	@ D.5193,
 111 0018 0B40     		ands	r3, r3, r1	@, D.5193, D.5193, D.5193
 112 001a 5360     		str	r3, [r2, #4]	@ D.5193, _5->CFGR
 221:cmsis/device/system_stm32f10x.c **** #else
 222:cmsis/device/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 223:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */   
 224:cmsis/device/system_stm32f10x.c ****   
 225:cmsis/device/system_stm32f10x.c ****   /* Reset HSEON, CSSON and PLLON bits */
 226:cmsis/device/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 113              		.loc 1 226 0
 114 001c 0F4A     		ldr	r2, .L2	@ D.5192,
 115 001e 0F4B     		ldr	r3, .L2	@ D.5192,
 116 0020 1B68     		ldr	r3, [r3]	@ D.5193, _10->CR
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 7


 117 0022 23F08473 		bic	r3, r3, #17301504	@ D.5193, D.5193,
 118 0026 23F48033 		bic	r3, r3, #65536	@ D.5193, D.5193,
 119 002a 1360     		str	r3, [r2]	@ D.5193, _9->CR
 227:cmsis/device/system_stm32f10x.c **** 
 228:cmsis/device/system_stm32f10x.c ****   /* Reset HSEBYP bit */
 229:cmsis/device/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 120              		.loc 1 229 0
 121 002c 0B4B     		ldr	r3, .L2	@ D.5192,
 122 002e 0B4A     		ldr	r2, .L2	@ D.5192,
 123 0030 1268     		ldr	r2, [r2]	@ D.5193, _14->CR
 124 0032 22F48022 		bic	r2, r2, #262144	@ D.5193, D.5193,
 125 0036 1A60     		str	r2, [r3]	@ D.5193, _13->CR
 230:cmsis/device/system_stm32f10x.c **** 
 231:cmsis/device/system_stm32f10x.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 232:cmsis/device/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
 126              		.loc 1 232 0
 127 0038 084B     		ldr	r3, .L2	@ D.5192,
 128 003a 084A     		ldr	r2, .L2	@ D.5192,
 129 003c 5268     		ldr	r2, [r2, #4]	@ D.5193, _18->CFGR
 130 003e 22F4FE02 		bic	r2, r2, #8323072	@ D.5193, D.5193,
 131 0042 5A60     		str	r2, [r3, #4]	@ D.5193, _17->CFGR
 233:cmsis/device/system_stm32f10x.c **** 
 234:cmsis/device/system_stm32f10x.c **** #ifdef STM32F10X_CL
 235:cmsis/device/system_stm32f10x.c ****   /* Reset PLL2ON and PLL3ON bits */
 236:cmsis/device/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 237:cmsis/device/system_stm32f10x.c **** 
 238:cmsis/device/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 239:cmsis/device/system_stm32f10x.c ****   RCC->CIR = 0x00FF0000;
 240:cmsis/device/system_stm32f10x.c **** 
 241:cmsis/device/system_stm32f10x.c ****   /* Reset CFGR2 register */
 242:cmsis/device/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;
 243:cmsis/device/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 244:cmsis/device/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 245:cmsis/device/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 246:cmsis/device/system_stm32f10x.c **** 
 247:cmsis/device/system_stm32f10x.c ****   /* Reset CFGR2 register */
 248:cmsis/device/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;      
 249:cmsis/device/system_stm32f10x.c **** #else
 250:cmsis/device/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 251:cmsis/device/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 132              		.loc 1 251 0
 133 0044 054B     		ldr	r3, .L2	@ D.5192,
 134 0046 4FF41F02 		mov	r2, #10420224	@ tmp132,
 135 004a 9A60     		str	r2, [r3, #8]	@ tmp132, _21->CIR
 252:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 253:cmsis/device/system_stm32f10x.c ****     
 254:cmsis/device/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 255:cmsis/device/system_stm32f10x.c ****   #ifdef DATA_IN_ExtSRAM
 256:cmsis/device/system_stm32f10x.c ****     SystemInit_ExtMemCtl(); 
 257:cmsis/device/system_stm32f10x.c ****   #endif /* DATA_IN_ExtSRAM */
 258:cmsis/device/system_stm32f10x.c **** #endif 
 259:cmsis/device/system_stm32f10x.c **** 
 260:cmsis/device/system_stm32f10x.c ****   /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
 261:cmsis/device/system_stm32f10x.c ****   /* Configure the Flash Latency cycles and enable prefetch buffer */
 262:cmsis/device/system_stm32f10x.c ****   SetSysClock();
 136              		.loc 1 262 0
 137 004c 00F078F8 		bl	SetSysClock	@
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 8


 263:cmsis/device/system_stm32f10x.c **** 
 264:cmsis/device/system_stm32f10x.c **** #ifdef VECT_TAB_SRAM
 265:cmsis/device/system_stm32f10x.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 266:cmsis/device/system_stm32f10x.c **** #else
 267:cmsis/device/system_stm32f10x.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 138              		.loc 1 267 0
 139 0050 044B     		ldr	r3, .L2+8	@ D.5194,
 140 0052 4FF00062 		mov	r2, #134217728	@ tmp133,
 141 0056 9A60     		str	r2, [r3, #8]	@ tmp133, _22->VTOR
 268:cmsis/device/system_stm32f10x.c **** #endif 
 269:cmsis/device/system_stm32f10x.c **** }
 142              		.loc 1 269 0
 143 0058 80BD     		pop	{r7, pc}	@
 144              	.L3:
 145 005a 00BF     		.align	2
 146              	.L2:
 147 005c 00100240 		.word	1073876992
 148 0060 0000FFF8 		.word	-117506048
 149 0064 00ED00E0 		.word	-536810240
 150              		.cfi_endproc
 151              	.LFE55:
 152              		.size	SystemInit, .-SystemInit
 153              		.align	2
 154              		.global	SystemCoreClockUpdate
 155              		.thumb
 156              		.thumb_func
 157              		.type	SystemCoreClockUpdate, %function
 158              	SystemCoreClockUpdate:
 159              	.LFB56:
 270:cmsis/device/system_stm32f10x.c **** 
 271:cmsis/device/system_stm32f10x.c **** /**
 272:cmsis/device/system_stm32f10x.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 273:cmsis/device/system_stm32f10x.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 274:cmsis/device/system_stm32f10x.c ****   *         be used by the user application to setup the SysTick timer or configure
 275:cmsis/device/system_stm32f10x.c ****   *         other parameters.
 276:cmsis/device/system_stm32f10x.c ****   *           
 277:cmsis/device/system_stm32f10x.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 278:cmsis/device/system_stm32f10x.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 279:cmsis/device/system_stm32f10x.c ****   *         based on this variable will be incorrect.         
 280:cmsis/device/system_stm32f10x.c ****   *     
 281:cmsis/device/system_stm32f10x.c ****   * @note   - The system frequency computed by this function is not the real 
 282:cmsis/device/system_stm32f10x.c ****   *           frequency in the chip. It is calculated based on the predefined 
 283:cmsis/device/system_stm32f10x.c ****   *           constant and the selected clock source:
 284:cmsis/device/system_stm32f10x.c ****   *             
 285:cmsis/device/system_stm32f10x.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 286:cmsis/device/system_stm32f10x.c ****   *                                              
 287:cmsis/device/system_stm32f10x.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 288:cmsis/device/system_stm32f10x.c ****   *                          
 289:cmsis/device/system_stm32f10x.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 290:cmsis/device/system_stm32f10x.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 291:cmsis/device/system_stm32f10x.c ****   *         
 292:cmsis/device/system_stm32f10x.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
 293:cmsis/device/system_stm32f10x.c ****   *             8 MHz) but the real value may vary depending on the variations
 294:cmsis/device/system_stm32f10x.c ****   *             in voltage and temperature.   
 295:cmsis/device/system_stm32f10x.c ****   *    
 296:cmsis/device/system_stm32f10x.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 297:cmsis/device/system_stm32f10x.c ****   *              8 MHz or 25 MHz, depedning on the product used), user has to ensure
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 9


 298:cmsis/device/system_stm32f10x.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 299:cmsis/device/system_stm32f10x.c ****   *              Otherwise, this function may have wrong result.
 300:cmsis/device/system_stm32f10x.c ****   *                
 301:cmsis/device/system_stm32f10x.c ****   *         - The result of this function could be not correct when using fractional
 302:cmsis/device/system_stm32f10x.c ****   *           value for HSE crystal.
 303:cmsis/device/system_stm32f10x.c ****   * @param  None
 304:cmsis/device/system_stm32f10x.c ****   * @retval None
 305:cmsis/device/system_stm32f10x.c ****   */
 306:cmsis/device/system_stm32f10x.c **** void SystemCoreClockUpdate (void)
 307:cmsis/device/system_stm32f10x.c **** {
 160              		.loc 1 307 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 16
 163              		@ frame_needed = 1, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 165 0068 80B4     		push	{r7}	@
 166              	.LCFI2:
 167              		.cfi_def_cfa_offset 4
 168              		.cfi_offset 7, -4
 169 006a 85B0     		sub	sp, sp, #20	@,,
 170              	.LCFI3:
 171              		.cfi_def_cfa_offset 24
 172 006c 00AF     		add	r7, sp, #0	@,,
 173              	.LCFI4:
 174              		.cfi_def_cfa_register 7
 308:cmsis/device/system_stm32f10x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0;
 175              		.loc 1 308 0
 176 006e 0023     		movs	r3, #0	@ tmp131,
 177 0070 FB60     		str	r3, [r7, #12]	@ tmp131, tmp
 178 0072 0023     		movs	r3, #0	@ tmp132,
 179 0074 BB60     		str	r3, [r7, #8]	@ tmp132, pllmull
 180 0076 0023     		movs	r3, #0	@ tmp133,
 181 0078 7B60     		str	r3, [r7, #4]	@ tmp133, pllsource
 309:cmsis/device/system_stm32f10x.c **** 
 310:cmsis/device/system_stm32f10x.c **** #ifdef  STM32F10X_CL
 311:cmsis/device/system_stm32f10x.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 312:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 313:cmsis/device/system_stm32f10x.c **** 
 314:cmsis/device/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 315:cmsis/device/system_stm32f10x.c ****   uint32_t prediv1factor = 0;
 316:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_LD_VL or STM32F10X_MD_VL or STM32F10X_HD_VL */
 317:cmsis/device/system_stm32f10x.c ****     
 318:cmsis/device/system_stm32f10x.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 319:cmsis/device/system_stm32f10x.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 182              		.loc 1 319 0
 183 007a 2C4B     		ldr	r3, .L14	@ D.5195,
 184 007c 5B68     		ldr	r3, [r3, #4]	@ D.5196, _4->CFGR
 185 007e 03F00C03 		and	r3, r3, #12	@ tmp134, D.5196,
 186 0082 FB60     		str	r3, [r7, #12]	@ tmp134, tmp
 320:cmsis/device/system_stm32f10x.c ****   
 321:cmsis/device/system_stm32f10x.c ****   switch (tmp)
 187              		.loc 1 321 0
 188 0084 FB68     		ldr	r3, [r7, #12]	@ tmp, tmp
 189 0086 042B     		cmp	r3, #4	@ tmp,
 190 0088 07D0     		beq	.L6	@,
 191 008a 082B     		cmp	r3, #8	@ tmp,
 192 008c 09D0     		beq	.L7	@,
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 10


 193 008e 002B     		cmp	r3, #0	@ tmp,
 194 0090 34D1     		bne	.L13	@,
 322:cmsis/device/system_stm32f10x.c ****   {
 323:cmsis/device/system_stm32f10x.c ****     case 0x00:  /* HSI used as system clock */
 324:cmsis/device/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 195              		.loc 1 324 0
 196 0092 274B     		ldr	r3, .L14+4	@ tmp136,
 197 0094 274A     		ldr	r2, .L14+8	@ tmp137,
 198 0096 1A60     		str	r2, [r3]	@ tmp137, SystemCoreClock
 325:cmsis/device/system_stm32f10x.c ****       break;
 199              		.loc 1 325 0
 200 0098 34E0     		b	.L9	@
 201              	.L6:
 326:cmsis/device/system_stm32f10x.c ****     case 0x04:  /* HSE used as system clock */
 327:cmsis/device/system_stm32f10x.c ****       SystemCoreClock = HSE_VALUE;
 202              		.loc 1 327 0
 203 009a 254B     		ldr	r3, .L14+4	@ tmp138,
 204 009c 254A     		ldr	r2, .L14+8	@ tmp139,
 205 009e 1A60     		str	r2, [r3]	@ tmp139, SystemCoreClock
 328:cmsis/device/system_stm32f10x.c ****       break;
 206              		.loc 1 328 0
 207 00a0 30E0     		b	.L9	@
 208              	.L7:
 329:cmsis/device/system_stm32f10x.c ****     case 0x08:  /* PLL used as system clock */
 330:cmsis/device/system_stm32f10x.c **** 
 331:cmsis/device/system_stm32f10x.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 332:cmsis/device/system_stm32f10x.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 209              		.loc 1 332 0
 210 00a2 224B     		ldr	r3, .L14	@ D.5195,
 211 00a4 5B68     		ldr	r3, [r3, #4]	@ D.5196, _7->CFGR
 212 00a6 03F47013 		and	r3, r3, #3932160	@ tmp140, D.5196,
 213 00aa BB60     		str	r3, [r7, #8]	@ tmp140, pllmull
 333:cmsis/device/system_stm32f10x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 214              		.loc 1 333 0
 215 00ac 1F4B     		ldr	r3, .L14	@ D.5195,
 216 00ae 5B68     		ldr	r3, [r3, #4]	@ D.5196, _10->CFGR
 217 00b0 03F48033 		and	r3, r3, #65536	@ tmp141, D.5196,
 218 00b4 7B60     		str	r3, [r7, #4]	@ tmp141, pllsource
 334:cmsis/device/system_stm32f10x.c ****       
 335:cmsis/device/system_stm32f10x.c **** #ifndef STM32F10X_CL      
 336:cmsis/device/system_stm32f10x.c ****       pllmull = ( pllmull >> 18) + 2;
 219              		.loc 1 336 0
 220 00b6 BB68     		ldr	r3, [r7, #8]	@ tmp142, pllmull
 221 00b8 9B0C     		lsrs	r3, r3, #18	@ D.5196, tmp142,
 222 00ba 0233     		adds	r3, r3, #2	@ tmp143, D.5196,
 223 00bc BB60     		str	r3, [r7, #8]	@ tmp143, pllmull
 337:cmsis/device/system_stm32f10x.c ****       
 338:cmsis/device/system_stm32f10x.c ****       if (pllsource == 0x00)
 224              		.loc 1 338 0
 225 00be 7B68     		ldr	r3, [r7, #4]	@ tmp144, pllsource
 226 00c0 002B     		cmp	r3, #0	@ tmp144,
 227 00c2 06D1     		bne	.L10	@,
 339:cmsis/device/system_stm32f10x.c ****       {
 340:cmsis/device/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 341:cmsis/device/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 228              		.loc 1 341 0
 229 00c4 BB68     		ldr	r3, [r7, #8]	@ tmp145, pllmull
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 11


 230 00c6 1C4A     		ldr	r2, .L14+12	@ tmp146,
 231 00c8 02FB03F2 		mul	r2, r2, r3	@ SystemCoreClock.0, tmp146, tmp145
 232 00cc 184B     		ldr	r3, .L14+4	@ tmp147,
 233 00ce 1A60     		str	r2, [r3]	@ SystemCoreClock.0, SystemCoreClock
 234 00d0 13E0     		b	.L11	@
 235              	.L10:
 342:cmsis/device/system_stm32f10x.c ****       }
 343:cmsis/device/system_stm32f10x.c ****       else
 344:cmsis/device/system_stm32f10x.c ****       {
 345:cmsis/device/system_stm32f10x.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 346:cmsis/device/system_stm32f10x.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 347:cmsis/device/system_stm32f10x.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 348:cmsis/device/system_stm32f10x.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 349:cmsis/device/system_stm32f10x.c ****  #else
 350:cmsis/device/system_stm32f10x.c ****         /* HSE selected as PLL clock entry */
 351:cmsis/device/system_stm32f10x.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 236              		.loc 1 351 0
 237 00d2 164B     		ldr	r3, .L14	@ D.5195,
 238 00d4 5B68     		ldr	r3, [r3, #4]	@ D.5196, _16->CFGR
 239 00d6 03F40033 		and	r3, r3, #131072	@ D.5196, D.5196,
 240 00da 002B     		cmp	r3, #0	@ D.5196,
 241 00dc 06D0     		beq	.L12	@,
 352:cmsis/device/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 353:cmsis/device/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE >> 1) * pllmull;
 242              		.loc 1 353 0
 243 00de BB68     		ldr	r3, [r7, #8]	@ tmp148, pllmull
 244 00e0 154A     		ldr	r2, .L14+12	@ tmp149,
 245 00e2 02FB03F2 		mul	r2, r2, r3	@ SystemCoreClock.1, tmp149, tmp148
 246 00e6 124B     		ldr	r3, .L14+4	@ tmp150,
 247 00e8 1A60     		str	r2, [r3]	@ SystemCoreClock.1, SystemCoreClock
 248 00ea 06E0     		b	.L11	@
 249              	.L12:
 354:cmsis/device/system_stm32f10x.c ****         }
 355:cmsis/device/system_stm32f10x.c ****         else
 356:cmsis/device/system_stm32f10x.c ****         {
 357:cmsis/device/system_stm32f10x.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 250              		.loc 1 357 0
 251 00ec BB68     		ldr	r3, [r7, #8]	@ tmp151, pllmull
 252 00ee 114A     		ldr	r2, .L14+8	@ tmp152,
 253 00f0 02FB03F2 		mul	r2, r2, r3	@ SystemCoreClock.2, tmp152, tmp151
 254 00f4 0E4B     		ldr	r3, .L14+4	@ tmp153,
 255 00f6 1A60     		str	r2, [r3]	@ SystemCoreClock.2, SystemCoreClock
 358:cmsis/device/system_stm32f10x.c ****         }
 359:cmsis/device/system_stm32f10x.c ****  #endif
 360:cmsis/device/system_stm32f10x.c ****       }
 361:cmsis/device/system_stm32f10x.c **** #else
 362:cmsis/device/system_stm32f10x.c ****       pllmull = pllmull >> 18;
 363:cmsis/device/system_stm32f10x.c ****       
 364:cmsis/device/system_stm32f10x.c ****       if (pllmull != 0x0D)
 365:cmsis/device/system_stm32f10x.c ****       {
 366:cmsis/device/system_stm32f10x.c ****          pllmull += 2;
 367:cmsis/device/system_stm32f10x.c ****       }
 368:cmsis/device/system_stm32f10x.c ****       else
 369:cmsis/device/system_stm32f10x.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 370:cmsis/device/system_stm32f10x.c ****         pllmull = 13 / 2; 
 371:cmsis/device/system_stm32f10x.c ****       }
 372:cmsis/device/system_stm32f10x.c ****             
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 12


 373:cmsis/device/system_stm32f10x.c ****       if (pllsource == 0x00)
 374:cmsis/device/system_stm32f10x.c ****       {
 375:cmsis/device/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 376:cmsis/device/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 377:cmsis/device/system_stm32f10x.c ****       }
 378:cmsis/device/system_stm32f10x.c ****       else
 379:cmsis/device/system_stm32f10x.c ****       {/* PREDIV1 selected as PLL clock entry */
 380:cmsis/device/system_stm32f10x.c ****         
 381:cmsis/device/system_stm32f10x.c ****         /* Get PREDIV1 clock source and division factor */
 382:cmsis/device/system_stm32f10x.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 383:cmsis/device/system_stm32f10x.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 384:cmsis/device/system_stm32f10x.c ****         
 385:cmsis/device/system_stm32f10x.c ****         if (prediv1source == 0)
 386:cmsis/device/system_stm32f10x.c ****         { 
 387:cmsis/device/system_stm32f10x.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 388:cmsis/device/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 389:cmsis/device/system_stm32f10x.c ****         }
 390:cmsis/device/system_stm32f10x.c ****         else
 391:cmsis/device/system_stm32f10x.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 392:cmsis/device/system_stm32f10x.c ****           
 393:cmsis/device/system_stm32f10x.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 394:cmsis/device/system_stm32f10x.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4) + 1;
 395:cmsis/device/system_stm32f10x.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8 ) + 2; 
 396:cmsis/device/system_stm32f10x.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 397:cmsis/device/system_stm32f10x.c ****         }
 398:cmsis/device/system_stm32f10x.c ****       }
 399:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */ 
 400:cmsis/device/system_stm32f10x.c ****       break;
 256              		.loc 1 400 0
 257 00f8 04E0     		b	.L9	@
 258              	.L11:
 259 00fa 03E0     		b	.L9	@
 260              	.L13:
 401:cmsis/device/system_stm32f10x.c **** 
 402:cmsis/device/system_stm32f10x.c ****     default:
 403:cmsis/device/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 261              		.loc 1 403 0
 262 00fc 0C4B     		ldr	r3, .L14+4	@ tmp154,
 263 00fe 0D4A     		ldr	r2, .L14+8	@ tmp155,
 264 0100 1A60     		str	r2, [r3]	@ tmp155, SystemCoreClock
 404:cmsis/device/system_stm32f10x.c ****       break;
 265              		.loc 1 404 0
 266 0102 00BF     		nop
 267              	.L9:
 405:cmsis/device/system_stm32f10x.c ****   }
 406:cmsis/device/system_stm32f10x.c ****   
 407:cmsis/device/system_stm32f10x.c ****   /* Compute HCLK clock frequency ----------------*/
 408:cmsis/device/system_stm32f10x.c ****   /* Get HCLK prescaler */
 409:cmsis/device/system_stm32f10x.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 268              		.loc 1 409 0
 269 0104 094B     		ldr	r3, .L14	@ D.5195,
 270 0106 5B68     		ldr	r3, [r3, #4]	@ D.5196, _21->CFGR
 271 0108 03F0F003 		and	r3, r3, #240	@ D.5196, D.5196,
 272 010c 1B09     		lsrs	r3, r3, #4	@ D.5196, D.5196,
 273 010e 0B4A     		ldr	r2, .L14+16	@ tmp156,
 274 0110 D35C     		ldrb	r3, [r2, r3]	@ tmp158, AHBPrescTable
 275 0112 DBB2     		uxtb	r3, r3	@ D.5197, tmp158
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 13


 276 0114 FB60     		str	r3, [r7, #12]	@ D.5197, tmp
 410:cmsis/device/system_stm32f10x.c ****   /* HCLK clock frequency */
 411:cmsis/device/system_stm32f10x.c ****   SystemCoreClock >>= tmp;  
 277              		.loc 1 411 0
 278 0116 064B     		ldr	r3, .L14+4	@ tmp159,
 279 0118 1A68     		ldr	r2, [r3]	@ SystemCoreClock.3, SystemCoreClock
 280 011a FB68     		ldr	r3, [r7, #12]	@ tmp.4, tmp
 281 011c DA40     		lsrs	r2, r2, r3	@ SystemCoreClock.5, SystemCoreClock.3, tmp.4
 282 011e 044B     		ldr	r3, .L14+4	@ tmp160,
 283 0120 1A60     		str	r2, [r3]	@ SystemCoreClock.5, SystemCoreClock
 412:cmsis/device/system_stm32f10x.c **** }
 284              		.loc 1 412 0
 285 0122 1437     		adds	r7, r7, #20	@,,
 286 0124 BD46     		mov	sp, r7	@,
 287              		@ sp needed	@
 288 0126 5DF8047B 		ldr	r7, [sp], #4	@,
 289 012a 7047     		bx	lr	@
 290              	.L15:
 291              		.align	2
 292              	.L14:
 293 012c 00100240 		.word	1073876992
 294 0130 00000000 		.word	SystemCoreClock
 295 0134 00127A00 		.word	8000000
 296 0138 00093D00 		.word	4000000
 297 013c 00000000 		.word	AHBPrescTable
 298              		.cfi_endproc
 299              	.LFE56:
 300              		.size	SystemCoreClockUpdate, .-SystemCoreClockUpdate
 301              		.align	2
 302              		.thumb
 303              		.thumb_func
 304              		.type	SetSysClock, %function
 305              	SetSysClock:
 306              	.LFB57:
 413:cmsis/device/system_stm32f10x.c **** 
 414:cmsis/device/system_stm32f10x.c **** /**
 415:cmsis/device/system_stm32f10x.c ****   * @brief  Configures the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers.
 416:cmsis/device/system_stm32f10x.c ****   * @param  None
 417:cmsis/device/system_stm32f10x.c ****   * @retval None
 418:cmsis/device/system_stm32f10x.c ****   */
 419:cmsis/device/system_stm32f10x.c **** static void SetSysClock(void)
 420:cmsis/device/system_stm32f10x.c **** {
 307              		.loc 1 420 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 1, uses_anonymous_args = 0
 311 0140 80B5     		push	{r7, lr}	@
 312              	.LCFI5:
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 7, -8
 315              		.cfi_offset 14, -4
 316 0142 00AF     		add	r7, sp, #0	@,,
 317              	.LCFI6:
 318              		.cfi_def_cfa_register 7
 421:cmsis/device/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 422:cmsis/device/system_stm32f10x.c ****   SetSysClockToHSE();
 423:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 14


 424:cmsis/device/system_stm32f10x.c ****   SetSysClockTo24();
 425:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 426:cmsis/device/system_stm32f10x.c ****   SetSysClockTo36();
 427:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 428:cmsis/device/system_stm32f10x.c ****   SetSysClockTo48();
 429:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 430:cmsis/device/system_stm32f10x.c ****   SetSysClockTo56();  
 431:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 432:cmsis/device/system_stm32f10x.c ****   SetSysClockTo72();
 319              		.loc 1 432 0
 320 0144 00F002F8 		bl	SetSysClockTo72	@
 433:cmsis/device/system_stm32f10x.c **** #endif
 434:cmsis/device/system_stm32f10x.c ****  
 435:cmsis/device/system_stm32f10x.c ****  /* If none of the define above is enabled, the HSI is used as System clock
 436:cmsis/device/system_stm32f10x.c ****     source (default after reset) */ 
 437:cmsis/device/system_stm32f10x.c **** }
 321              		.loc 1 437 0
 322 0148 80BD     		pop	{r7, pc}	@
 323              		.cfi_endproc
 324              	.LFE57:
 325              		.size	SetSysClock, .-SetSysClock
 326 014a 00BF     		.align	2
 327              		.thumb
 328              		.thumb_func
 329              		.type	SetSysClockTo72, %function
 330              	SetSysClockTo72:
 331              	.LFB58:
 438:cmsis/device/system_stm32f10x.c **** 
 439:cmsis/device/system_stm32f10x.c **** /**
 440:cmsis/device/system_stm32f10x.c ****   * @brief  Setup the external memory controller. Called in startup_stm32f10x.s 
 441:cmsis/device/system_stm32f10x.c ****   *          before jump to __main
 442:cmsis/device/system_stm32f10x.c ****   * @param  None
 443:cmsis/device/system_stm32f10x.c ****   * @retval None
 444:cmsis/device/system_stm32f10x.c ****   */ 
 445:cmsis/device/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 446:cmsis/device/system_stm32f10x.c **** /**
 447:cmsis/device/system_stm32f10x.c ****   * @brief  Setup the external memory controller. 
 448:cmsis/device/system_stm32f10x.c ****   *         Called in startup_stm32f10x_xx.s/.c before jump to main.
 449:cmsis/device/system_stm32f10x.c ****   * 	      This function configures the external SRAM mounted on STM3210E-EVAL
 450:cmsis/device/system_stm32f10x.c ****   *         board (STM32 High density devices). This SRAM will be used as program
 451:cmsis/device/system_stm32f10x.c ****   *         data memory (including heap and stack).
 452:cmsis/device/system_stm32f10x.c ****   * @param  None
 453:cmsis/device/system_stm32f10x.c ****   * @retval None
 454:cmsis/device/system_stm32f10x.c ****   */ 
 455:cmsis/device/system_stm32f10x.c **** void SystemInit_ExtMemCtl(void) 
 456:cmsis/device/system_stm32f10x.c **** {
 457:cmsis/device/system_stm32f10x.c **** /*!< FSMC Bank1 NOR/SRAM3 is used for the STM3210E-EVAL, if another Bank is 
 458:cmsis/device/system_stm32f10x.c ****   required, then adjust the Register Addresses */
 459:cmsis/device/system_stm32f10x.c **** 
 460:cmsis/device/system_stm32f10x.c ****   /* Enable FSMC clock */
 461:cmsis/device/system_stm32f10x.c ****   RCC->AHBENR = 0x00000114;
 462:cmsis/device/system_stm32f10x.c ****   
 463:cmsis/device/system_stm32f10x.c ****   /* Enable GPIOD, GPIOE, GPIOF and GPIOG clocks */  
 464:cmsis/device/system_stm32f10x.c ****   RCC->APB2ENR = 0x000001E0;
 465:cmsis/device/system_stm32f10x.c ****   
 466:cmsis/device/system_stm32f10x.c **** /* ---------------  SRAM Data lines, NOE and NWE configuration ---------------*/
 467:cmsis/device/system_stm32f10x.c **** /*----------------  SRAM Address lines configuration -------------------------*/
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 15


 468:cmsis/device/system_stm32f10x.c **** /*----------------  NOE and NWE configuration --------------------------------*/  
 469:cmsis/device/system_stm32f10x.c **** /*----------------  NE3 configuration ----------------------------------------*/
 470:cmsis/device/system_stm32f10x.c **** /*----------------  NBL0, NBL1 configuration ---------------------------------*/
 471:cmsis/device/system_stm32f10x.c ****   
 472:cmsis/device/system_stm32f10x.c ****   GPIOD->CRL = 0x44BB44BB;  
 473:cmsis/device/system_stm32f10x.c ****   GPIOD->CRH = 0xBBBBBBBB;
 474:cmsis/device/system_stm32f10x.c **** 
 475:cmsis/device/system_stm32f10x.c ****   GPIOE->CRL = 0xB44444BB;  
 476:cmsis/device/system_stm32f10x.c ****   GPIOE->CRH = 0xBBBBBBBB;
 477:cmsis/device/system_stm32f10x.c **** 
 478:cmsis/device/system_stm32f10x.c ****   GPIOF->CRL = 0x44BBBBBB;  
 479:cmsis/device/system_stm32f10x.c ****   GPIOF->CRH = 0xBBBB4444;
 480:cmsis/device/system_stm32f10x.c **** 
 481:cmsis/device/system_stm32f10x.c ****   GPIOG->CRL = 0x44BBBBBB;  
 482:cmsis/device/system_stm32f10x.c ****   GPIOG->CRH = 0x44444B44;
 483:cmsis/device/system_stm32f10x.c ****    
 484:cmsis/device/system_stm32f10x.c **** /*----------------  FSMC Configuration ---------------------------------------*/  
 485:cmsis/device/system_stm32f10x.c **** /*----------------  Enable FSMC Bank1_SRAM Bank ------------------------------*/
 486:cmsis/device/system_stm32f10x.c ****   
 487:cmsis/device/system_stm32f10x.c ****   FSMC_Bank1->BTCR[4] = 0x00001011;
 488:cmsis/device/system_stm32f10x.c ****   FSMC_Bank1->BTCR[5] = 0x00000200;
 489:cmsis/device/system_stm32f10x.c **** }
 490:cmsis/device/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 491:cmsis/device/system_stm32f10x.c **** 
 492:cmsis/device/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 493:cmsis/device/system_stm32f10x.c **** /**
 494:cmsis/device/system_stm32f10x.c ****   * @brief  Selects HSE as System clock source and configure HCLK, PCLK2
 495:cmsis/device/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 496:cmsis/device/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 497:cmsis/device/system_stm32f10x.c ****   * @param  None
 498:cmsis/device/system_stm32f10x.c ****   * @retval None
 499:cmsis/device/system_stm32f10x.c ****   */
 500:cmsis/device/system_stm32f10x.c **** static void SetSysClockToHSE(void)
 501:cmsis/device/system_stm32f10x.c **** {
 502:cmsis/device/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 503:cmsis/device/system_stm32f10x.c ****   
 504:cmsis/device/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 505:cmsis/device/system_stm32f10x.c ****   /* Enable HSE */    
 506:cmsis/device/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 507:cmsis/device/system_stm32f10x.c ****  
 508:cmsis/device/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 509:cmsis/device/system_stm32f10x.c ****   do
 510:cmsis/device/system_stm32f10x.c ****   {
 511:cmsis/device/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 512:cmsis/device/system_stm32f10x.c ****     StartUpCounter++;  
 513:cmsis/device/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 514:cmsis/device/system_stm32f10x.c **** 
 515:cmsis/device/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 516:cmsis/device/system_stm32f10x.c ****   {
 517:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 518:cmsis/device/system_stm32f10x.c ****   }
 519:cmsis/device/system_stm32f10x.c ****   else
 520:cmsis/device/system_stm32f10x.c ****   {
 521:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 522:cmsis/device/system_stm32f10x.c ****   }  
 523:cmsis/device/system_stm32f10x.c **** 
 524:cmsis/device/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 16


 525:cmsis/device/system_stm32f10x.c ****   {
 526:cmsis/device/system_stm32f10x.c **** 
 527:cmsis/device/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL
 528:cmsis/device/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 529:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 530:cmsis/device/system_stm32f10x.c **** 
 531:cmsis/device/system_stm32f10x.c ****     /* Flash 0 wait state */
 532:cmsis/device/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 533:cmsis/device/system_stm32f10x.c **** 
 534:cmsis/device/system_stm32f10x.c **** #ifndef STM32F10X_CL
 535:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 536:cmsis/device/system_stm32f10x.c **** #else
 537:cmsis/device/system_stm32f10x.c ****     if (HSE_VALUE <= 24000000)
 538:cmsis/device/system_stm32f10x.c **** 	{
 539:cmsis/device/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 540:cmsis/device/system_stm32f10x.c **** 	}
 541:cmsis/device/system_stm32f10x.c **** 	else
 542:cmsis/device/system_stm32f10x.c **** 	{
 543:cmsis/device/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;
 544:cmsis/device/system_stm32f10x.c **** 	}
 545:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 546:cmsis/device/system_stm32f10x.c **** #endif
 547:cmsis/device/system_stm32f10x.c ****  
 548:cmsis/device/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 549:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 550:cmsis/device/system_stm32f10x.c ****       
 551:cmsis/device/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 552:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 553:cmsis/device/system_stm32f10x.c ****     
 554:cmsis/device/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 555:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 556:cmsis/device/system_stm32f10x.c ****     
 557:cmsis/device/system_stm32f10x.c ****     /* Select HSE as system clock source */
 558:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 559:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_HSE;    
 560:cmsis/device/system_stm32f10x.c **** 
 561:cmsis/device/system_stm32f10x.c ****     /* Wait till HSE is used as system clock source */
 562:cmsis/device/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x04)
 563:cmsis/device/system_stm32f10x.c ****     {
 564:cmsis/device/system_stm32f10x.c ****     }
 565:cmsis/device/system_stm32f10x.c ****   }
 566:cmsis/device/system_stm32f10x.c ****   else
 567:cmsis/device/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 568:cmsis/device/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 569:cmsis/device/system_stm32f10x.c ****   }  
 570:cmsis/device/system_stm32f10x.c **** }
 571:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 572:cmsis/device/system_stm32f10x.c **** /**
 573:cmsis/device/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 24MHz and configure HCLK, PCLK2 
 574:cmsis/device/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 575:cmsis/device/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 576:cmsis/device/system_stm32f10x.c ****   * @param  None
 577:cmsis/device/system_stm32f10x.c ****   * @retval None
 578:cmsis/device/system_stm32f10x.c ****   */
 579:cmsis/device/system_stm32f10x.c **** static void SetSysClockTo24(void)
 580:cmsis/device/system_stm32f10x.c **** {
 581:cmsis/device/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 17


 582:cmsis/device/system_stm32f10x.c ****   
 583:cmsis/device/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 584:cmsis/device/system_stm32f10x.c ****   /* Enable HSE */    
 585:cmsis/device/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 586:cmsis/device/system_stm32f10x.c ****  
 587:cmsis/device/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 588:cmsis/device/system_stm32f10x.c ****   do
 589:cmsis/device/system_stm32f10x.c ****   {
 590:cmsis/device/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 591:cmsis/device/system_stm32f10x.c ****     StartUpCounter++;  
 592:cmsis/device/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 593:cmsis/device/system_stm32f10x.c **** 
 594:cmsis/device/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 595:cmsis/device/system_stm32f10x.c ****   {
 596:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 597:cmsis/device/system_stm32f10x.c ****   }
 598:cmsis/device/system_stm32f10x.c ****   else
 599:cmsis/device/system_stm32f10x.c ****   {
 600:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 601:cmsis/device/system_stm32f10x.c ****   }  
 602:cmsis/device/system_stm32f10x.c **** 
 603:cmsis/device/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 604:cmsis/device/system_stm32f10x.c ****   {
 605:cmsis/device/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL 
 606:cmsis/device/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 607:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 608:cmsis/device/system_stm32f10x.c **** 
 609:cmsis/device/system_stm32f10x.c ****     /* Flash 0 wait state */
 610:cmsis/device/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 611:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;    
 612:cmsis/device/system_stm32f10x.c **** #endif
 613:cmsis/device/system_stm32f10x.c ****  
 614:cmsis/device/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 615:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 616:cmsis/device/system_stm32f10x.c ****       
 617:cmsis/device/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 618:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 619:cmsis/device/system_stm32f10x.c ****     
 620:cmsis/device/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 621:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 622:cmsis/device/system_stm32f10x.c ****     
 623:cmsis/device/system_stm32f10x.c **** #ifdef STM32F10X_CL
 624:cmsis/device/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 625:cmsis/device/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 24 MHz */ 
 626:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 627:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 628:cmsis/device/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 629:cmsis/device/system_stm32f10x.c **** 
 630:cmsis/device/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 631:cmsis/device/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */       
 632:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 633:cmsis/device/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 634:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 635:cmsis/device/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 636:cmsis/device/system_stm32f10x.c ****   
 637:cmsis/device/system_stm32f10x.c ****     /* Enable PLL2 */
 638:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 18


 639:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 640:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 641:cmsis/device/system_stm32f10x.c ****     {
 642:cmsis/device/system_stm32f10x.c ****     }   
 643:cmsis/device/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 644:cmsis/device/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 645:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 646:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_PREDIV1 | RCC_CFGR_PLLXTPRE_PREDIV1_Div2 | RCC_CFGR_PLL
 647:cmsis/device/system_stm32f10x.c **** #else    
 648:cmsis/device/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 649:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 650:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL6);
 651:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 652:cmsis/device/system_stm32f10x.c **** 
 653:cmsis/device/system_stm32f10x.c ****     /* Enable PLL */
 654:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 655:cmsis/device/system_stm32f10x.c **** 
 656:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is ready */
 657:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 658:cmsis/device/system_stm32f10x.c ****     {
 659:cmsis/device/system_stm32f10x.c ****     }
 660:cmsis/device/system_stm32f10x.c **** 
 661:cmsis/device/system_stm32f10x.c ****     /* Select PLL as system clock source */
 662:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 663:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 664:cmsis/device/system_stm32f10x.c **** 
 665:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 666:cmsis/device/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 667:cmsis/device/system_stm32f10x.c ****     {
 668:cmsis/device/system_stm32f10x.c ****     }
 669:cmsis/device/system_stm32f10x.c ****   }
 670:cmsis/device/system_stm32f10x.c ****   else
 671:cmsis/device/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 672:cmsis/device/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 673:cmsis/device/system_stm32f10x.c ****   } 
 674:cmsis/device/system_stm32f10x.c **** }
 675:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 676:cmsis/device/system_stm32f10x.c **** /**
 677:cmsis/device/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 36MHz and configure HCLK, PCLK2 
 678:cmsis/device/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 679:cmsis/device/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 680:cmsis/device/system_stm32f10x.c ****   * @param  None
 681:cmsis/device/system_stm32f10x.c ****   * @retval None
 682:cmsis/device/system_stm32f10x.c ****   */
 683:cmsis/device/system_stm32f10x.c **** static void SetSysClockTo36(void)
 684:cmsis/device/system_stm32f10x.c **** {
 685:cmsis/device/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 686:cmsis/device/system_stm32f10x.c ****   
 687:cmsis/device/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 688:cmsis/device/system_stm32f10x.c ****   /* Enable HSE */    
 689:cmsis/device/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 690:cmsis/device/system_stm32f10x.c ****  
 691:cmsis/device/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 692:cmsis/device/system_stm32f10x.c ****   do
 693:cmsis/device/system_stm32f10x.c ****   {
 694:cmsis/device/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 695:cmsis/device/system_stm32f10x.c ****     StartUpCounter++;  
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 19


 696:cmsis/device/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 697:cmsis/device/system_stm32f10x.c **** 
 698:cmsis/device/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 699:cmsis/device/system_stm32f10x.c ****   {
 700:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 701:cmsis/device/system_stm32f10x.c ****   }
 702:cmsis/device/system_stm32f10x.c ****   else
 703:cmsis/device/system_stm32f10x.c ****   {
 704:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 705:cmsis/device/system_stm32f10x.c ****   }  
 706:cmsis/device/system_stm32f10x.c **** 
 707:cmsis/device/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 708:cmsis/device/system_stm32f10x.c ****   {
 709:cmsis/device/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 710:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 711:cmsis/device/system_stm32f10x.c **** 
 712:cmsis/device/system_stm32f10x.c ****     /* Flash 1 wait state */
 713:cmsis/device/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 714:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;    
 715:cmsis/device/system_stm32f10x.c ****  
 716:cmsis/device/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 717:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 718:cmsis/device/system_stm32f10x.c ****       
 719:cmsis/device/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 720:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 721:cmsis/device/system_stm32f10x.c ****     
 722:cmsis/device/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 723:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 724:cmsis/device/system_stm32f10x.c ****     
 725:cmsis/device/system_stm32f10x.c **** #ifdef STM32F10X_CL
 726:cmsis/device/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 727:cmsis/device/system_stm32f10x.c ****     
 728:cmsis/device/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 9 = 36 MHz */ 
 729:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 730:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 731:cmsis/device/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL9); 
 732:cmsis/device/system_stm32f10x.c **** 
 733:cmsis/device/system_stm32f10x.c **** 	/*!< PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 734:cmsis/device/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */
 735:cmsis/device/system_stm32f10x.c ****         
 736:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 737:cmsis/device/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 738:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 739:cmsis/device/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 740:cmsis/device/system_stm32f10x.c ****   
 741:cmsis/device/system_stm32f10x.c ****     /* Enable PLL2 */
 742:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 743:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 744:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 745:cmsis/device/system_stm32f10x.c ****     {
 746:cmsis/device/system_stm32f10x.c ****     }
 747:cmsis/device/system_stm32f10x.c ****     
 748:cmsis/device/system_stm32f10x.c **** #else    
 749:cmsis/device/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = (HSE / 2) * 9 = 36 MHz */
 750:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 751:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL9);
 752:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 20


 753:cmsis/device/system_stm32f10x.c **** 
 754:cmsis/device/system_stm32f10x.c ****     /* Enable PLL */
 755:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 756:cmsis/device/system_stm32f10x.c **** 
 757:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is ready */
 758:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 759:cmsis/device/system_stm32f10x.c ****     {
 760:cmsis/device/system_stm32f10x.c ****     }
 761:cmsis/device/system_stm32f10x.c **** 
 762:cmsis/device/system_stm32f10x.c ****     /* Select PLL as system clock source */
 763:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 764:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 765:cmsis/device/system_stm32f10x.c **** 
 766:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 767:cmsis/device/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 768:cmsis/device/system_stm32f10x.c ****     {
 769:cmsis/device/system_stm32f10x.c ****     }
 770:cmsis/device/system_stm32f10x.c ****   }
 771:cmsis/device/system_stm32f10x.c ****   else
 772:cmsis/device/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 773:cmsis/device/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 774:cmsis/device/system_stm32f10x.c ****   } 
 775:cmsis/device/system_stm32f10x.c **** }
 776:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 777:cmsis/device/system_stm32f10x.c **** /**
 778:cmsis/device/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 48MHz and configure HCLK, PCLK2 
 779:cmsis/device/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 780:cmsis/device/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 781:cmsis/device/system_stm32f10x.c ****   * @param  None
 782:cmsis/device/system_stm32f10x.c ****   * @retval None
 783:cmsis/device/system_stm32f10x.c ****   */
 784:cmsis/device/system_stm32f10x.c **** static void SetSysClockTo48(void)
 785:cmsis/device/system_stm32f10x.c **** {
 786:cmsis/device/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 787:cmsis/device/system_stm32f10x.c ****   
 788:cmsis/device/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 789:cmsis/device/system_stm32f10x.c ****   /* Enable HSE */    
 790:cmsis/device/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 791:cmsis/device/system_stm32f10x.c ****  
 792:cmsis/device/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 793:cmsis/device/system_stm32f10x.c ****   do
 794:cmsis/device/system_stm32f10x.c ****   {
 795:cmsis/device/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 796:cmsis/device/system_stm32f10x.c ****     StartUpCounter++;  
 797:cmsis/device/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 798:cmsis/device/system_stm32f10x.c **** 
 799:cmsis/device/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 800:cmsis/device/system_stm32f10x.c ****   {
 801:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 802:cmsis/device/system_stm32f10x.c ****   }
 803:cmsis/device/system_stm32f10x.c ****   else
 804:cmsis/device/system_stm32f10x.c ****   {
 805:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 806:cmsis/device/system_stm32f10x.c ****   }  
 807:cmsis/device/system_stm32f10x.c **** 
 808:cmsis/device/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 809:cmsis/device/system_stm32f10x.c ****   {
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 21


 810:cmsis/device/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 811:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 812:cmsis/device/system_stm32f10x.c **** 
 813:cmsis/device/system_stm32f10x.c ****     /* Flash 1 wait state */
 814:cmsis/device/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 815:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;    
 816:cmsis/device/system_stm32f10x.c ****  
 817:cmsis/device/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 818:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 819:cmsis/device/system_stm32f10x.c ****       
 820:cmsis/device/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 821:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 822:cmsis/device/system_stm32f10x.c ****     
 823:cmsis/device/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 824:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 825:cmsis/device/system_stm32f10x.c ****     
 826:cmsis/device/system_stm32f10x.c **** #ifdef STM32F10X_CL
 827:cmsis/device/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 828:cmsis/device/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 829:cmsis/device/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
 830:cmsis/device/system_stm32f10x.c ****         
 831:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 832:cmsis/device/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 833:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 834:cmsis/device/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
 835:cmsis/device/system_stm32f10x.c ****   
 836:cmsis/device/system_stm32f10x.c ****     /* Enable PLL2 */
 837:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 838:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 839:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 840:cmsis/device/system_stm32f10x.c ****     {
 841:cmsis/device/system_stm32f10x.c ****     }
 842:cmsis/device/system_stm32f10x.c ****     
 843:cmsis/device/system_stm32f10x.c ****    
 844:cmsis/device/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 48 MHz */ 
 845:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 846:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 847:cmsis/device/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 848:cmsis/device/system_stm32f10x.c **** #else    
 849:cmsis/device/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = HSE * 6 = 48 MHz */
 850:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 851:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL6);
 852:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 853:cmsis/device/system_stm32f10x.c **** 
 854:cmsis/device/system_stm32f10x.c ****     /* Enable PLL */
 855:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 856:cmsis/device/system_stm32f10x.c **** 
 857:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is ready */
 858:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 859:cmsis/device/system_stm32f10x.c ****     {
 860:cmsis/device/system_stm32f10x.c ****     }
 861:cmsis/device/system_stm32f10x.c **** 
 862:cmsis/device/system_stm32f10x.c ****     /* Select PLL as system clock source */
 863:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 864:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 865:cmsis/device/system_stm32f10x.c **** 
 866:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 22


 867:cmsis/device/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 868:cmsis/device/system_stm32f10x.c ****     {
 869:cmsis/device/system_stm32f10x.c ****     }
 870:cmsis/device/system_stm32f10x.c ****   }
 871:cmsis/device/system_stm32f10x.c ****   else
 872:cmsis/device/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 873:cmsis/device/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 874:cmsis/device/system_stm32f10x.c ****   } 
 875:cmsis/device/system_stm32f10x.c **** }
 876:cmsis/device/system_stm32f10x.c **** 
 877:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 878:cmsis/device/system_stm32f10x.c **** /**
 879:cmsis/device/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 56MHz and configure HCLK, PCLK2 
 880:cmsis/device/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 881:cmsis/device/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 882:cmsis/device/system_stm32f10x.c ****   * @param  None
 883:cmsis/device/system_stm32f10x.c ****   * @retval None
 884:cmsis/device/system_stm32f10x.c ****   */
 885:cmsis/device/system_stm32f10x.c **** static void SetSysClockTo56(void)
 886:cmsis/device/system_stm32f10x.c **** {
 887:cmsis/device/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 888:cmsis/device/system_stm32f10x.c ****   
 889:cmsis/device/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/   
 890:cmsis/device/system_stm32f10x.c ****   /* Enable HSE */    
 891:cmsis/device/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 892:cmsis/device/system_stm32f10x.c ****  
 893:cmsis/device/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 894:cmsis/device/system_stm32f10x.c ****   do
 895:cmsis/device/system_stm32f10x.c ****   {
 896:cmsis/device/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 897:cmsis/device/system_stm32f10x.c ****     StartUpCounter++;  
 898:cmsis/device/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 899:cmsis/device/system_stm32f10x.c **** 
 900:cmsis/device/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 901:cmsis/device/system_stm32f10x.c ****   {
 902:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 903:cmsis/device/system_stm32f10x.c ****   }
 904:cmsis/device/system_stm32f10x.c ****   else
 905:cmsis/device/system_stm32f10x.c ****   {
 906:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 907:cmsis/device/system_stm32f10x.c ****   }  
 908:cmsis/device/system_stm32f10x.c **** 
 909:cmsis/device/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 910:cmsis/device/system_stm32f10x.c ****   {
 911:cmsis/device/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 912:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 913:cmsis/device/system_stm32f10x.c **** 
 914:cmsis/device/system_stm32f10x.c ****     /* Flash 2 wait state */
 915:cmsis/device/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 916:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 917:cmsis/device/system_stm32f10x.c ****  
 918:cmsis/device/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 919:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 920:cmsis/device/system_stm32f10x.c ****       
 921:cmsis/device/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 922:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 923:cmsis/device/system_stm32f10x.c ****     
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 23


 924:cmsis/device/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 925:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 926:cmsis/device/system_stm32f10x.c **** 
 927:cmsis/device/system_stm32f10x.c **** #ifdef STM32F10X_CL
 928:cmsis/device/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 929:cmsis/device/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 930:cmsis/device/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
 931:cmsis/device/system_stm32f10x.c ****         
 932:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 933:cmsis/device/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 934:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 935:cmsis/device/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
 936:cmsis/device/system_stm32f10x.c ****   
 937:cmsis/device/system_stm32f10x.c ****     /* Enable PLL2 */
 938:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 939:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 940:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 941:cmsis/device/system_stm32f10x.c ****     {
 942:cmsis/device/system_stm32f10x.c ****     }
 943:cmsis/device/system_stm32f10x.c ****     
 944:cmsis/device/system_stm32f10x.c ****    
 945:cmsis/device/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 7 = 56 MHz */ 
 946:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 947:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 948:cmsis/device/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL7); 
 949:cmsis/device/system_stm32f10x.c **** #else     
 950:cmsis/device/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = HSE * 7 = 56 MHz */
 951:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 952:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL7);
 953:cmsis/device/system_stm32f10x.c **** 
 954:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 955:cmsis/device/system_stm32f10x.c **** 
 956:cmsis/device/system_stm32f10x.c ****     /* Enable PLL */
 957:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 958:cmsis/device/system_stm32f10x.c **** 
 959:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is ready */
 960:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 961:cmsis/device/system_stm32f10x.c ****     {
 962:cmsis/device/system_stm32f10x.c ****     }
 963:cmsis/device/system_stm32f10x.c **** 
 964:cmsis/device/system_stm32f10x.c ****     /* Select PLL as system clock source */
 965:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 966:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 967:cmsis/device/system_stm32f10x.c **** 
 968:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 969:cmsis/device/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 970:cmsis/device/system_stm32f10x.c ****     {
 971:cmsis/device/system_stm32f10x.c ****     }
 972:cmsis/device/system_stm32f10x.c ****   }
 973:cmsis/device/system_stm32f10x.c ****   else
 974:cmsis/device/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 975:cmsis/device/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 976:cmsis/device/system_stm32f10x.c ****   } 
 977:cmsis/device/system_stm32f10x.c **** }
 978:cmsis/device/system_stm32f10x.c **** 
 979:cmsis/device/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 980:cmsis/device/system_stm32f10x.c **** /**
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 24


 981:cmsis/device/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 72MHz and configure HCLK, PCLK2 
 982:cmsis/device/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 983:cmsis/device/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 984:cmsis/device/system_stm32f10x.c ****   * @param  None
 985:cmsis/device/system_stm32f10x.c ****   * @retval None
 986:cmsis/device/system_stm32f10x.c ****   */
 987:cmsis/device/system_stm32f10x.c **** static void SetSysClockTo72(void)
 988:cmsis/device/system_stm32f10x.c **** {
 332              		.loc 1 988 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 8
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 337 014c 80B4     		push	{r7}	@
 338              	.LCFI7:
 339              		.cfi_def_cfa_offset 4
 340              		.cfi_offset 7, -4
 341 014e 83B0     		sub	sp, sp, #12	@,,
 342              	.LCFI8:
 343              		.cfi_def_cfa_offset 16
 344 0150 00AF     		add	r7, sp, #0	@,,
 345              	.LCFI9:
 346              		.cfi_def_cfa_register 7
 989:cmsis/device/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 347              		.loc 1 989 0
 348 0152 0023     		movs	r3, #0	@ tmp173,
 349 0154 7B60     		str	r3, [r7, #4]	@ tmp173, StartUpCounter
 350 0156 0023     		movs	r3, #0	@ tmp174,
 351 0158 3B60     		str	r3, [r7]	@ tmp174, HSEStatus
 990:cmsis/device/system_stm32f10x.c ****   
 991:cmsis/device/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 992:cmsis/device/system_stm32f10x.c ****   /* Enable HSE */    
 993:cmsis/device/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 352              		.loc 1 993 0
 353 015a 3A4B     		ldr	r3, .L25	@ D.5198,
 354 015c 394A     		ldr	r2, .L25	@ D.5198,
 355 015e 1268     		ldr	r2, [r2]	@ D.5199, _2->CR
 356 0160 42F48032 		orr	r2, r2, #65536	@ D.5199, D.5199,
 357 0164 1A60     		str	r2, [r3]	@ D.5199, _1->CR
 358              	.L19:
 994:cmsis/device/system_stm32f10x.c ****  
 995:cmsis/device/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 996:cmsis/device/system_stm32f10x.c ****   do
 997:cmsis/device/system_stm32f10x.c ****   {
 998:cmsis/device/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 359              		.loc 1 998 0 discriminator 1
 360 0166 374B     		ldr	r3, .L25	@ D.5198,
 361 0168 1B68     		ldr	r3, [r3]	@ D.5199, _5->CR
 362 016a 03F40033 		and	r3, r3, #131072	@ HSEStatus.6, D.5199,
 363 016e 3B60     		str	r3, [r7]	@ HSEStatus.6, HSEStatus
 999:cmsis/device/system_stm32f10x.c ****     StartUpCounter++;  
 364              		.loc 1 999 0 discriminator 1
 365 0170 7B68     		ldr	r3, [r7, #4]	@ StartUpCounter.7, StartUpCounter
 366 0172 0133     		adds	r3, r3, #1	@ StartUpCounter.8, StartUpCounter.7,
 367 0174 7B60     		str	r3, [r7, #4]	@ StartUpCounter.8, StartUpCounter
1000:cmsis/device/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 368              		.loc 1 1000 0 discriminator 1
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 25


 369 0176 3B68     		ldr	r3, [r7]	@ HSEStatus.9, HSEStatus
 370 0178 002B     		cmp	r3, #0	@ HSEStatus.9,
 371 017a 03D1     		bne	.L18	@,
 372 017c 7B68     		ldr	r3, [r7, #4]	@ StartUpCounter.10, StartUpCounter
 373 017e B3F5A06F 		cmp	r3, #1280	@ StartUpCounter.10,
 374 0182 F0D1     		bne	.L19	@,
 375              	.L18:
1001:cmsis/device/system_stm32f10x.c **** 
1002:cmsis/device/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 376              		.loc 1 1002 0
 377 0184 2F4B     		ldr	r3, .L25	@ D.5198,
 378 0186 1B68     		ldr	r3, [r3]	@ D.5199, _12->CR
 379 0188 03F40033 		and	r3, r3, #131072	@ D.5199, D.5199,
 380 018c 002B     		cmp	r3, #0	@ D.5199,
 381 018e 02D0     		beq	.L20	@,
1003:cmsis/device/system_stm32f10x.c ****   {
1004:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 382              		.loc 1 1004 0
 383 0190 0123     		movs	r3, #1	@ tmp175,
 384 0192 3B60     		str	r3, [r7]	@ tmp175, HSEStatus
 385 0194 01E0     		b	.L21	@
 386              	.L20:
1005:cmsis/device/system_stm32f10x.c ****   }
1006:cmsis/device/system_stm32f10x.c ****   else
1007:cmsis/device/system_stm32f10x.c ****   {
1008:cmsis/device/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 387              		.loc 1 1008 0
 388 0196 0023     		movs	r3, #0	@ tmp176,
 389 0198 3B60     		str	r3, [r7]	@ tmp176, HSEStatus
 390              	.L21:
1009:cmsis/device/system_stm32f10x.c ****   }  
1010:cmsis/device/system_stm32f10x.c **** 
1011:cmsis/device/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 391              		.loc 1 1011 0
 392 019a 3B68     		ldr	r3, [r7]	@ HSEStatus.11, HSEStatus
 393 019c 012B     		cmp	r3, #1	@ HSEStatus.11,
 394 019e 4BD1     		bne	.L17	@,
1012:cmsis/device/system_stm32f10x.c ****   {
1013:cmsis/device/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
1014:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 395              		.loc 1 1014 0
 396 01a0 294B     		ldr	r3, .L25+4	@ D.5200,
 397 01a2 294A     		ldr	r2, .L25+4	@ D.5200,
 398 01a4 1268     		ldr	r2, [r2]	@ D.5199, _17->ACR
 399 01a6 42F01002 		orr	r2, r2, #16	@ D.5199, D.5199,
 400 01aa 1A60     		str	r2, [r3]	@ D.5199, _16->ACR
1015:cmsis/device/system_stm32f10x.c **** 
1016:cmsis/device/system_stm32f10x.c ****     /* Flash 2 wait state */
1017:cmsis/device/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 401              		.loc 1 1017 0
 402 01ac 264B     		ldr	r3, .L25+4	@ D.5200,
 403 01ae 264A     		ldr	r2, .L25+4	@ D.5200,
 404 01b0 1268     		ldr	r2, [r2]	@ D.5199, _21->ACR
 405 01b2 22F00302 		bic	r2, r2, #3	@ D.5199, D.5199,
 406 01b6 1A60     		str	r2, [r3]	@ D.5199, _20->ACR
1018:cmsis/device/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 407              		.loc 1 1018 0
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 26


 408 01b8 234B     		ldr	r3, .L25+4	@ D.5200,
 409 01ba 234A     		ldr	r2, .L25+4	@ D.5200,
 410 01bc 1268     		ldr	r2, [r2]	@ D.5199, _25->ACR
 411 01be 42F00202 		orr	r2, r2, #2	@ D.5199, D.5199,
 412 01c2 1A60     		str	r2, [r3]	@ D.5199, _24->ACR
1019:cmsis/device/system_stm32f10x.c **** 
1020:cmsis/device/system_stm32f10x.c ****  
1021:cmsis/device/system_stm32f10x.c ****     /* HCLK = SYSCLK */
1022:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 413              		.loc 1 1022 0
 414 01c4 1F4B     		ldr	r3, .L25	@ D.5198,
 415 01c6 1F4A     		ldr	r2, .L25	@ D.5198,
 416 01c8 5268     		ldr	r2, [r2, #4]	@ D.5199, _29->CFGR
 417 01ca 5A60     		str	r2, [r3, #4]	@ D.5199, _28->CFGR
1023:cmsis/device/system_stm32f10x.c ****       
1024:cmsis/device/system_stm32f10x.c ****     /* PCLK2 = HCLK */
1025:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 418              		.loc 1 1025 0
 419 01cc 1D4B     		ldr	r3, .L25	@ D.5198,
 420 01ce 1D4A     		ldr	r2, .L25	@ D.5198,
 421 01d0 5268     		ldr	r2, [r2, #4]	@ D.5199, _32->CFGR
 422 01d2 5A60     		str	r2, [r3, #4]	@ D.5199, _31->CFGR
1026:cmsis/device/system_stm32f10x.c ****     
1027:cmsis/device/system_stm32f10x.c ****     /* PCLK1 = HCLK */
1028:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 423              		.loc 1 1028 0
 424 01d4 1B4B     		ldr	r3, .L25	@ D.5198,
 425 01d6 1B4A     		ldr	r2, .L25	@ D.5198,
 426 01d8 5268     		ldr	r2, [r2, #4]	@ D.5199, _35->CFGR
 427 01da 42F48062 		orr	r2, r2, #1024	@ D.5199, D.5199,
 428 01de 5A60     		str	r2, [r3, #4]	@ D.5199, _34->CFGR
1029:cmsis/device/system_stm32f10x.c **** 
1030:cmsis/device/system_stm32f10x.c **** #ifdef STM32F10X_CL
1031:cmsis/device/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
1032:cmsis/device/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
1033:cmsis/device/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
1034:cmsis/device/system_stm32f10x.c ****         
1035:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
1036:cmsis/device/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
1037:cmsis/device/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
1038:cmsis/device/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
1039:cmsis/device/system_stm32f10x.c ****   
1040:cmsis/device/system_stm32f10x.c ****     /* Enable PLL2 */
1041:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
1042:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
1043:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
1044:cmsis/device/system_stm32f10x.c ****     {
1045:cmsis/device/system_stm32f10x.c ****     }
1046:cmsis/device/system_stm32f10x.c ****     
1047:cmsis/device/system_stm32f10x.c ****    
1048:cmsis/device/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 9 = 72 MHz */ 
1049:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
1050:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
1051:cmsis/device/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL9); 
1052:cmsis/device/system_stm32f10x.c **** #else    
1053:cmsis/device/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = HSE * 9 = 72 MHz */
1054:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE |
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 27


 429              		.loc 1 1054 0
 430 01e0 184B     		ldr	r3, .L25	@ D.5198,
 431 01e2 184A     		ldr	r2, .L25	@ D.5198,
 432 01e4 5268     		ldr	r2, [r2, #4]	@ D.5199, _39->CFGR
 433 01e6 22F47C12 		bic	r2, r2, #4128768	@ D.5199, D.5199,
 434 01ea 5A60     		str	r2, [r3, #4]	@ D.5199, _38->CFGR
1055:cmsis/device/system_stm32f10x.c ****                                         RCC_CFGR_PLLMULL));
1056:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
 435              		.loc 1 1056 0
 436 01ec 154B     		ldr	r3, .L25	@ D.5198,
 437 01ee 154A     		ldr	r2, .L25	@ D.5198,
 438 01f0 5268     		ldr	r2, [r2, #4]	@ D.5199, _43->CFGR
 439 01f2 42F4E812 		orr	r2, r2, #1900544	@ D.5199, D.5199,
 440 01f6 5A60     		str	r2, [r3, #4]	@ D.5199, _42->CFGR
1057:cmsis/device/system_stm32f10x.c **** #endif /* STM32F10X_CL */
1058:cmsis/device/system_stm32f10x.c **** 
1059:cmsis/device/system_stm32f10x.c ****     /* Enable PLL */
1060:cmsis/device/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 441              		.loc 1 1060 0
 442 01f8 124B     		ldr	r3, .L25	@ D.5198,
 443 01fa 124A     		ldr	r2, .L25	@ D.5198,
 444 01fc 1268     		ldr	r2, [r2]	@ D.5199, _47->CR
 445 01fe 42F08072 		orr	r2, r2, #16777216	@ D.5199, D.5199,
 446 0202 1A60     		str	r2, [r3]	@ D.5199, _46->CR
1061:cmsis/device/system_stm32f10x.c **** 
1062:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is ready */
1063:cmsis/device/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 447              		.loc 1 1063 0
 448 0204 00BF     		nop
 449              	.L23:
 450              		.loc 1 1063 0 is_stmt 0 discriminator 1
 451 0206 0F4B     		ldr	r3, .L25	@ D.5198,
 452 0208 1B68     		ldr	r3, [r3]	@ D.5199, _50->CR
 453 020a 03F00073 		and	r3, r3, #33554432	@ D.5199, D.5199,
 454 020e 002B     		cmp	r3, #0	@ D.5199,
 455 0210 F9D0     		beq	.L23	@,
1064:cmsis/device/system_stm32f10x.c ****     {
1065:cmsis/device/system_stm32f10x.c ****     }
1066:cmsis/device/system_stm32f10x.c ****     
1067:cmsis/device/system_stm32f10x.c ****     /* Select PLL as system clock source */
1068:cmsis/device/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 456              		.loc 1 1068 0 is_stmt 1
 457 0212 0C4B     		ldr	r3, .L25	@ D.5198,
 458 0214 0B4A     		ldr	r2, .L25	@ D.5198,
 459 0216 5268     		ldr	r2, [r2, #4]	@ D.5199, _54->CFGR
 460 0218 22F00302 		bic	r2, r2, #3	@ D.5199, D.5199,
 461 021c 5A60     		str	r2, [r3, #4]	@ D.5199, _53->CFGR
1069:cmsis/device/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 462              		.loc 1 1069 0
 463 021e 094B     		ldr	r3, .L25	@ D.5198,
 464 0220 084A     		ldr	r2, .L25	@ D.5198,
 465 0222 5268     		ldr	r2, [r2, #4]	@ D.5199, _58->CFGR
 466 0224 42F00202 		orr	r2, r2, #2	@ D.5199, D.5199,
 467 0228 5A60     		str	r2, [r3, #4]	@ D.5199, _57->CFGR
1070:cmsis/device/system_stm32f10x.c **** 
1071:cmsis/device/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
1072:cmsis/device/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 28


 468              		.loc 1 1072 0
 469 022a 00BF     		nop
 470              	.L24:
 471              		.loc 1 1072 0 is_stmt 0 discriminator 1
 472 022c 054B     		ldr	r3, .L25	@ D.5198,
 473 022e 5B68     		ldr	r3, [r3, #4]	@ D.5199, _61->CFGR
 474 0230 03F00C03 		and	r3, r3, #12	@ D.5199, D.5199,
 475 0234 082B     		cmp	r3, #8	@ D.5199,
 476 0236 F9D1     		bne	.L24	@,
 477              	.L17:
1073:cmsis/device/system_stm32f10x.c ****     {
1074:cmsis/device/system_stm32f10x.c ****     }
1075:cmsis/device/system_stm32f10x.c ****   }
1076:cmsis/device/system_stm32f10x.c ****   else
1077:cmsis/device/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
1078:cmsis/device/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
1079:cmsis/device/system_stm32f10x.c ****   }
1080:cmsis/device/system_stm32f10x.c **** }
 478              		.loc 1 1080 0 is_stmt 1
 479 0238 0C37     		adds	r7, r7, #12	@,,
 480 023a BD46     		mov	sp, r7	@,
 481              		@ sp needed	@
 482 023c 5DF8047B 		ldr	r7, [sp], #4	@,
 483 0240 7047     		bx	lr	@
 484              	.L26:
 485 0242 00BF     		.align	2
 486              	.L25:
 487 0244 00100240 		.word	1073876992
 488 0248 00200240 		.word	1073881088
 489              		.cfi_endproc
 490              	.LFE58:
 491              		.size	SetSysClockTo72, .-SetSysClockTo72
 492              	.Letext0:
 493              		.file 2 "/opt/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_types.h"
 494              		.file 3 "/opt/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 495              		.file 4 "./cmsis/core/core_cm3.h"
 496              		.file 5 "cmsis/device/stm32f10x.h"
 497              		.section	.debug_info,"",%progbits
 498              	.Ldebug_info0:
 499 0000 E0040000 		.4byte	0x4e0
 500 0004 0200     		.2byte	0x2
 501 0006 00000000 		.4byte	.Ldebug_abbrev0
 502 000a 04       		.byte	0x4
 503 000b 01       		.uleb128 0x1
 504 000c A0010000 		.4byte	.LASF55
 505 0010 01       		.byte	0x1
 506 0011 96020000 		.4byte	.LASF56
 507 0015 EB000000 		.4byte	.LASF57
 508 0019 00000000 		.4byte	.Ltext0
 509 001d 4C020000 		.4byte	.Letext0
 510 0021 00000000 		.4byte	.Ldebug_line0
 511 0025 02       		.uleb128 0x2
 512 0026 01       		.byte	0x1
 513 0027 06       		.byte	0x6
 514 0028 3C010000 		.4byte	.LASF0
 515 002c 03       		.uleb128 0x3
 516 002d BD000000 		.4byte	.LASF3
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 29


 517 0031 02       		.byte	0x2
 518 0032 1C       		.byte	0x1c
 519 0033 37000000 		.4byte	0x37
 520 0037 02       		.uleb128 0x2
 521 0038 01       		.byte	0x1
 522 0039 08       		.byte	0x8
 523 003a 08010000 		.4byte	.LASF1
 524 003e 02       		.uleb128 0x2
 525 003f 02       		.byte	0x2
 526 0040 05       		.byte	0x5
 527 0041 72000000 		.4byte	.LASF2
 528 0045 03       		.uleb128 0x3
 529 0046 3B000000 		.4byte	.LASF4
 530 004a 02       		.byte	0x2
 531 004b 26       		.byte	0x26
 532 004c 50000000 		.4byte	0x50
 533 0050 02       		.uleb128 0x2
 534 0051 02       		.byte	0x2
 535 0052 07       		.byte	0x7
 536 0053 3D020000 		.4byte	.LASF5
 537 0057 03       		.uleb128 0x3
 538 0058 C8020000 		.4byte	.LASF6
 539 005c 02       		.byte	0x2
 540 005d 37       		.byte	0x37
 541 005e 62000000 		.4byte	0x62
 542 0062 02       		.uleb128 0x2
 543 0063 04       		.byte	0x4
 544 0064 05       		.byte	0x5
 545 0065 9C000000 		.4byte	.LASF7
 546 0069 03       		.uleb128 0x3
 547 006a 30000000 		.4byte	.LASF8
 548 006e 02       		.byte	0x2
 549 006f 38       		.byte	0x38
 550 0070 74000000 		.4byte	0x74
 551 0074 02       		.uleb128 0x2
 552 0075 04       		.byte	0x4
 553 0076 07       		.byte	0x7
 554 0077 B6020000 		.4byte	.LASF9
 555 007b 02       		.uleb128 0x2
 556 007c 08       		.byte	0x8
 557 007d 05       		.byte	0x5
 558 007e 89000000 		.4byte	.LASF10
 559 0082 02       		.uleb128 0x2
 560 0083 08       		.byte	0x8
 561 0084 07       		.byte	0x7
 562 0085 48010000 		.4byte	.LASF11
 563 0089 04       		.uleb128 0x4
 564 008a 04       		.byte	0x4
 565 008b 05       		.byte	0x5
 566 008c 696E7400 		.ascii	"int\000"
 567 0090 02       		.uleb128 0x2
 568 0091 04       		.byte	0x4
 569 0092 07       		.byte	0x7
 570 0093 68010000 		.4byte	.LASF12
 571 0097 03       		.uleb128 0x3
 572 0098 6A000000 		.4byte	.LASF13
 573 009c 03       		.byte	0x3
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 30


 574 009d 2A       		.byte	0x2a
 575 009e 2C000000 		.4byte	0x2c
 576 00a2 03       		.uleb128 0x3
 577 00a3 75010000 		.4byte	.LASF14
 578 00a7 03       		.byte	0x3
 579 00a8 36       		.byte	0x36
 580 00a9 45000000 		.4byte	0x45
 581 00ad 03       		.uleb128 0x3
 582 00ae 55020000 		.4byte	.LASF15
 583 00b2 03       		.byte	0x3
 584 00b3 41       		.byte	0x41
 585 00b4 57000000 		.4byte	0x57
 586 00b8 03       		.uleb128 0x3
 587 00b9 5F010000 		.4byte	.LASF16
 588 00bd 03       		.byte	0x3
 589 00be 42       		.byte	0x42
 590 00bf 69000000 		.4byte	0x69
 591 00c3 02       		.uleb128 0x2
 592 00c4 04       		.byte	0x4
 593 00c5 07       		.byte	0x7
 594 00c6 22000000 		.4byte	.LASF17
 595 00ca 05       		.uleb128 0x5
 596 00cb B8000000 		.4byte	0xb8
 597 00cf 06       		.uleb128 0x6
 598 00d0 8C       		.byte	0x8c
 599 00d1 04       		.byte	0x4
 600 00d2 3201     		.2byte	0x132
 601 00d4 15020000 		.4byte	0x215
 602 00d8 07       		.uleb128 0x7
 603 00d9 50000000 		.4byte	.LASF18
 604 00dd 04       		.byte	0x4
 605 00de 3401     		.2byte	0x134
 606 00e0 15020000 		.4byte	0x215
 607 00e4 02       		.byte	0x2
 608 00e5 23       		.byte	0x23
 609 00e6 00       		.uleb128 0
 610 00e7 07       		.uleb128 0x7
 611 00e8 7C000000 		.4byte	.LASF19
 612 00ec 04       		.byte	0x4
 613 00ed 3501     		.2byte	0x135
 614 00ef CA000000 		.4byte	0xca
 615 00f3 02       		.byte	0x2
 616 00f4 23       		.byte	0x23
 617 00f5 04       		.uleb128 0x4
 618 00f6 07       		.uleb128 0x7
 619 00f7 50020000 		.4byte	.LASF20
 620 00fb 04       		.byte	0x4
 621 00fc 3601     		.2byte	0x136
 622 00fe CA000000 		.4byte	0xca
 623 0102 02       		.byte	0x2
 624 0103 23       		.byte	0x23
 625 0104 08       		.uleb128 0x8
 626 0105 07       		.uleb128 0x7
 627 0106 16010000 		.4byte	.LASF21
 628 010a 04       		.byte	0x4
 629 010b 3701     		.2byte	0x137
 630 010d CA000000 		.4byte	0xca
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 31


 631 0111 02       		.byte	0x2
 632 0112 23       		.byte	0x23
 633 0113 0C       		.uleb128 0xc
 634 0114 08       		.uleb128 0x8
 635 0115 53435200 		.ascii	"SCR\000"
 636 0119 04       		.byte	0x4
 637 011a 3801     		.2byte	0x138
 638 011c CA000000 		.4byte	0xca
 639 0120 02       		.byte	0x2
 640 0121 23       		.byte	0x23
 641 0122 10       		.uleb128 0x10
 642 0123 08       		.uleb128 0x8
 643 0124 43435200 		.ascii	"CCR\000"
 644 0128 04       		.byte	0x4
 645 0129 3901     		.2byte	0x139
 646 012b CA000000 		.4byte	0xca
 647 012f 02       		.byte	0x2
 648 0130 23       		.byte	0x23
 649 0131 14       		.uleb128 0x14
 650 0132 08       		.uleb128 0x8
 651 0133 53485000 		.ascii	"SHP\000"
 652 0137 04       		.byte	0x4
 653 0138 3A01     		.2byte	0x13a
 654 013a 2A020000 		.4byte	0x22a
 655 013e 02       		.byte	0x2
 656 013f 23       		.byte	0x23
 657 0140 18       		.uleb128 0x18
 658 0141 07       		.uleb128 0x7
 659 0142 7E010000 		.4byte	.LASF22
 660 0146 04       		.byte	0x4
 661 0147 3B01     		.2byte	0x13b
 662 0149 CA000000 		.4byte	0xca
 663 014d 02       		.byte	0x2
 664 014e 23       		.byte	0x23
 665 014f 24       		.uleb128 0x24
 666 0150 07       		.uleb128 0x7
 667 0151 CC000000 		.4byte	.LASF23
 668 0155 04       		.byte	0x4
 669 0156 3C01     		.2byte	0x13c
 670 0158 CA000000 		.4byte	0xca
 671 015c 02       		.byte	0x2
 672 015d 23       		.byte	0x23
 673 015e 28       		.uleb128 0x28
 674 015f 07       		.uleb128 0x7
 675 0160 72020000 		.4byte	.LASF24
 676 0164 04       		.byte	0x4
 677 0165 3D01     		.2byte	0x13d
 678 0167 CA000000 		.4byte	0xca
 679 016b 02       		.byte	0x2
 680 016c 23       		.byte	0x23
 681 016d 2C       		.uleb128 0x2c
 682 016e 07       		.uleb128 0x7
 683 016f 5D020000 		.4byte	.LASF25
 684 0173 04       		.byte	0x4
 685 0174 3E01     		.2byte	0x13e
 686 0176 CA000000 		.4byte	0xca
 687 017a 02       		.byte	0x2
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 32


 688 017b 23       		.byte	0x23
 689 017c 30       		.uleb128 0x30
 690 017d 07       		.uleb128 0x7
 691 017e 9A010000 		.4byte	.LASF26
 692 0182 04       		.byte	0x4
 693 0183 3F01     		.2byte	0x13f
 694 0185 CA000000 		.4byte	0xca
 695 0189 02       		.byte	0x2
 696 018a 23       		.byte	0x23
 697 018b 34       		.uleb128 0x34
 698 018c 07       		.uleb128 0x7
 699 018d 97000000 		.4byte	.LASF27
 700 0191 04       		.byte	0x4
 701 0192 4001     		.2byte	0x140
 702 0194 CA000000 		.4byte	0xca
 703 0198 02       		.byte	0x2
 704 0199 23       		.byte	0x23
 705 019a 38       		.uleb128 0x38
 706 019b 07       		.uleb128 0x7
 707 019c D8020000 		.4byte	.LASF28
 708 01a0 04       		.byte	0x4
 709 01a1 4101     		.2byte	0x141
 710 01a3 CA000000 		.4byte	0xca
 711 01a7 02       		.byte	0x2
 712 01a8 23       		.byte	0x23
 713 01a9 3C       		.uleb128 0x3c
 714 01aa 08       		.uleb128 0x8
 715 01ab 50465200 		.ascii	"PFR\000"
 716 01af 04       		.byte	0x4
 717 01b0 4201     		.2byte	0x142
 718 01b2 3F020000 		.4byte	0x23f
 719 01b6 02       		.byte	0x2
 720 01b7 23       		.byte	0x23
 721 01b8 40       		.uleb128 0x40
 722 01b9 08       		.uleb128 0x8
 723 01ba 44465200 		.ascii	"DFR\000"
 724 01be 04       		.byte	0x4
 725 01bf 4301     		.2byte	0x143
 726 01c1 15020000 		.4byte	0x215
 727 01c5 02       		.byte	0x2
 728 01c6 23       		.byte	0x23
 729 01c7 48       		.uleb128 0x48
 730 01c8 08       		.uleb128 0x8
 731 01c9 41445200 		.ascii	"ADR\000"
 732 01cd 04       		.byte	0x4
 733 01ce 4401     		.2byte	0x144
 734 01d0 15020000 		.4byte	0x215
 735 01d4 02       		.byte	0x2
 736 01d5 23       		.byte	0x23
 737 01d6 4C       		.uleb128 0x4c
 738 01d7 07       		.uleb128 0x7
 739 01d8 77020000 		.4byte	.LASF29
 740 01dc 04       		.byte	0x4
 741 01dd 4501     		.2byte	0x145
 742 01df 59020000 		.4byte	0x259
 743 01e3 02       		.byte	0x2
 744 01e4 23       		.byte	0x23
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 33


 745 01e5 50       		.uleb128 0x50
 746 01e6 07       		.uleb128 0x7
 747 01e7 1D000000 		.4byte	.LASF30
 748 01eb 04       		.byte	0x4
 749 01ec 4601     		.2byte	0x146
 750 01ee 73020000 		.4byte	0x273
 751 01f2 02       		.byte	0x2
 752 01f3 23       		.byte	0x23
 753 01f4 60       		.uleb128 0x60
 754 01f5 07       		.uleb128 0x7
 755 01f6 5B000000 		.4byte	.LASF31
 756 01fa 04       		.byte	0x4
 757 01fb 4701     		.2byte	0x147
 758 01fd 63020000 		.4byte	0x263
 759 0201 02       		.byte	0x2
 760 0202 23       		.byte	0x23
 761 0203 74       		.uleb128 0x74
 762 0204 07       		.uleb128 0x7
 763 0205 01030000 		.4byte	.LASF32
 764 0209 04       		.byte	0x4
 765 020a 4801     		.2byte	0x148
 766 020c CA000000 		.4byte	0xca
 767 0210 03       		.byte	0x3
 768 0211 23       		.byte	0x23
 769 0212 8801     		.uleb128 0x88
 770 0214 00       		.byte	0
 771 0215 09       		.uleb128 0x9
 772 0216 CA000000 		.4byte	0xca
 773 021a 0A       		.uleb128 0xa
 774 021b 97000000 		.4byte	0x97
 775 021f 2A020000 		.4byte	0x22a
 776 0223 0B       		.uleb128 0xb
 777 0224 C3000000 		.4byte	0xc3
 778 0228 0B       		.byte	0xb
 779 0229 00       		.byte	0
 780 022a 05       		.uleb128 0x5
 781 022b 1A020000 		.4byte	0x21a
 782 022f 0A       		.uleb128 0xa
 783 0230 B8000000 		.4byte	0xb8
 784 0234 3F020000 		.4byte	0x23f
 785 0238 0B       		.uleb128 0xb
 786 0239 C3000000 		.4byte	0xc3
 787 023d 01       		.byte	0x1
 788 023e 00       		.byte	0
 789 023f 09       		.uleb128 0x9
 790 0240 44020000 		.4byte	0x244
 791 0244 05       		.uleb128 0x5
 792 0245 2F020000 		.4byte	0x22f
 793 0249 0A       		.uleb128 0xa
 794 024a B8000000 		.4byte	0xb8
 795 024e 59020000 		.4byte	0x259
 796 0252 0B       		.uleb128 0xb
 797 0253 C3000000 		.4byte	0xc3
 798 0257 03       		.byte	0x3
 799 0258 00       		.byte	0
 800 0259 09       		.uleb128 0x9
 801 025a 5E020000 		.4byte	0x25e
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 34


 802 025e 05       		.uleb128 0x5
 803 025f 49020000 		.4byte	0x249
 804 0263 0A       		.uleb128 0xa
 805 0264 B8000000 		.4byte	0xb8
 806 0268 73020000 		.4byte	0x273
 807 026c 0B       		.uleb128 0xb
 808 026d C3000000 		.4byte	0xc3
 809 0271 04       		.byte	0x4
 810 0272 00       		.byte	0
 811 0273 09       		.uleb128 0x9
 812 0274 78020000 		.4byte	0x278
 813 0278 05       		.uleb128 0x5
 814 0279 63020000 		.4byte	0x263
 815 027d 0C       		.uleb128 0xc
 816 027e 1C010000 		.4byte	.LASF33
 817 0282 04       		.byte	0x4
 818 0283 4901     		.2byte	0x149
 819 0285 CF000000 		.4byte	0xcf
 820 0289 05       		.uleb128 0x5
 821 028a AD000000 		.4byte	0xad
 822 028e 0D       		.uleb128 0xd
 823 028f 01       		.byte	0x1
 824 0290 05       		.byte	0x5
 825 0291 0702     		.2byte	0x207
 826 0293 A4020000 		.4byte	0x2a4
 827 0297 0E       		.uleb128 0xe
 828 0298 D2020000 		.4byte	.LASF34
 829 029c 00       		.sleb128 0
 830 029d 0F       		.uleb128 0xf
 831 029e 53455400 		.ascii	"SET\000"
 832 02a2 01       		.sleb128 1
 833 02a3 00       		.byte	0
 834 02a4 06       		.uleb128 0x6
 835 02a5 24       		.byte	0x24
 836 02a6 05       		.byte	0x5
 837 02a7 8503     		.2byte	0x385
 838 02a9 32030000 		.4byte	0x332
 839 02ad 08       		.uleb128 0x8
 840 02ae 41435200 		.ascii	"ACR\000"
 841 02b2 05       		.byte	0x5
 842 02b3 8703     		.2byte	0x387
 843 02b5 CA000000 		.4byte	0xca
 844 02b9 02       		.byte	0x2
 845 02ba 23       		.byte	0x23
 846 02bb 00       		.uleb128 0
 847 02bc 07       		.uleb128 0x7
 848 02bd 56000000 		.4byte	.LASF35
 849 02c1 05       		.byte	0x5
 850 02c2 8803     		.2byte	0x388
 851 02c4 CA000000 		.4byte	0xca
 852 02c8 02       		.byte	0x2
 853 02c9 23       		.byte	0x23
 854 02ca 04       		.uleb128 0x4
 855 02cb 07       		.uleb128 0x7
 856 02cc 81000000 		.4byte	.LASF36
 857 02d0 05       		.byte	0x5
 858 02d1 8903     		.2byte	0x389
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 35


 859 02d3 CA000000 		.4byte	0xca
 860 02d7 02       		.byte	0x2
 861 02d8 23       		.byte	0x23
 862 02d9 08       		.uleb128 0x8
 863 02da 08       		.uleb128 0x8
 864 02db 535200   		.ascii	"SR\000"
 865 02de 05       		.byte	0x5
 866 02df 8A03     		.2byte	0x38a
 867 02e1 CA000000 		.4byte	0xca
 868 02e5 02       		.byte	0x2
 869 02e6 23       		.byte	0x23
 870 02e7 0C       		.uleb128 0xc
 871 02e8 08       		.uleb128 0x8
 872 02e9 435200   		.ascii	"CR\000"
 873 02ec 05       		.byte	0x5
 874 02ed 8B03     		.2byte	0x38b
 875 02ef CA000000 		.4byte	0xca
 876 02f3 02       		.byte	0x2
 877 02f4 23       		.byte	0x23
 878 02f5 10       		.uleb128 0x10
 879 02f6 08       		.uleb128 0x8
 880 02f7 415200   		.ascii	"AR\000"
 881 02fa 05       		.byte	0x5
 882 02fb 8C03     		.2byte	0x38c
 883 02fd CA000000 		.4byte	0xca
 884 0301 02       		.byte	0x2
 885 0302 23       		.byte	0x23
 886 0303 14       		.uleb128 0x14
 887 0304 07       		.uleb128 0x7
 888 0305 DD020000 		.4byte	.LASF37
 889 0309 05       		.byte	0x5
 890 030a 8D03     		.2byte	0x38d
 891 030c CA000000 		.4byte	0xca
 892 0310 02       		.byte	0x2
 893 0311 23       		.byte	0x23
 894 0312 18       		.uleb128 0x18
 895 0313 08       		.uleb128 0x8
 896 0314 4F425200 		.ascii	"OBR\000"
 897 0318 05       		.byte	0x5
 898 0319 8E03     		.2byte	0x38e
 899 031b CA000000 		.4byte	0xca
 900 031f 02       		.byte	0x2
 901 0320 23       		.byte	0x23
 902 0321 1C       		.uleb128 0x1c
 903 0322 07       		.uleb128 0x7
 904 0323 C7000000 		.4byte	.LASF38
 905 0327 05       		.byte	0x5
 906 0328 8F03     		.2byte	0x38f
 907 032a CA000000 		.4byte	0xca
 908 032e 02       		.byte	0x2
 909 032f 23       		.byte	0x23
 910 0330 20       		.uleb128 0x20
 911 0331 00       		.byte	0
 912 0332 0C       		.uleb128 0xc
 913 0333 E6020000 		.4byte	.LASF39
 914 0337 05       		.byte	0x5
 915 0338 9803     		.2byte	0x398
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 36


 916 033a A4020000 		.4byte	0x2a4
 917 033e 06       		.uleb128 0x6
 918 033f 28       		.byte	0x28
 919 0340 05       		.byte	0x5
 920 0341 3404     		.2byte	0x434
 921 0343 DD030000 		.4byte	0x3dd
 922 0347 08       		.uleb128 0x8
 923 0348 435200   		.ascii	"CR\000"
 924 034b 05       		.byte	0x5
 925 034c 3604     		.2byte	0x436
 926 034e CA000000 		.4byte	0xca
 927 0352 02       		.byte	0x2
 928 0353 23       		.byte	0x23
 929 0354 00       		.uleb128 0
 930 0355 07       		.uleb128 0x7
 931 0356 65000000 		.4byte	.LASF40
 932 035a 05       		.byte	0x5
 933 035b 3704     		.2byte	0x437
 934 035d CA000000 		.4byte	0xca
 935 0361 02       		.byte	0x2
 936 0362 23       		.byte	0x23
 937 0363 04       		.uleb128 0x4
 938 0364 08       		.uleb128 0x8
 939 0365 43495200 		.ascii	"CIR\000"
 940 0369 05       		.byte	0x5
 941 036a 3804     		.2byte	0x438
 942 036c CA000000 		.4byte	0xca
 943 0370 02       		.byte	0x2
 944 0371 23       		.byte	0x23
 945 0372 08       		.uleb128 0x8
 946 0373 07       		.uleb128 0x7
 947 0374 B4000000 		.4byte	.LASF41
 948 0378 05       		.byte	0x5
 949 0379 3904     		.2byte	0x439
 950 037b CA000000 		.4byte	0xca
 951 037f 02       		.byte	0x2
 952 0380 23       		.byte	0x23
 953 0381 0C       		.uleb128 0xc
 954 0382 07       		.uleb128 0x7
 955 0383 0C000000 		.4byte	.LASF42
 956 0387 05       		.byte	0x5
 957 0388 3A04     		.2byte	0x43a
 958 038a CA000000 		.4byte	0xca
 959 038e 02       		.byte	0x2
 960 038f 23       		.byte	0x23
 961 0390 10       		.uleb128 0x10
 962 0391 07       		.uleb128 0x7
 963 0392 AD000000 		.4byte	.LASF43
 964 0396 05       		.byte	0x5
 965 0397 3B04     		.2byte	0x43b
 966 0399 CA000000 		.4byte	0xca
 967 039d 02       		.byte	0x2
 968 039e 23       		.byte	0x23
 969 039f 14       		.uleb128 0x14
 970 03a0 07       		.uleb128 0x7
 971 03a1 25010000 		.4byte	.LASF44
 972 03a5 05       		.byte	0x5
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 37


 973 03a6 3C04     		.2byte	0x43c
 974 03a8 CA000000 		.4byte	0xca
 975 03ac 02       		.byte	0x2
 976 03ad 23       		.byte	0x23
 977 03ae 18       		.uleb128 0x18
 978 03af 07       		.uleb128 0x7
 979 03b0 15000000 		.4byte	.LASF45
 980 03b4 05       		.byte	0x5
 981 03b5 3D04     		.2byte	0x43d
 982 03b7 CA000000 		.4byte	0xca
 983 03bb 02       		.byte	0x2
 984 03bc 23       		.byte	0x23
 985 03bd 1C       		.uleb128 0x1c
 986 03be 07       		.uleb128 0x7
 987 03bf 2B000000 		.4byte	.LASF46
 988 03c3 05       		.byte	0x5
 989 03c4 3E04     		.2byte	0x43e
 990 03c6 CA000000 		.4byte	0xca
 991 03ca 02       		.byte	0x2
 992 03cb 23       		.byte	0x23
 993 03cc 20       		.uleb128 0x20
 994 03cd 08       		.uleb128 0x8
 995 03ce 43535200 		.ascii	"CSR\000"
 996 03d2 05       		.byte	0x5
 997 03d3 3F04     		.2byte	0x43f
 998 03d5 CA000000 		.4byte	0xca
 999 03d9 02       		.byte	0x2
 1000 03da 23       		.byte	0x23
 1001 03db 24       		.uleb128 0x24
 1002 03dc 00       		.byte	0
 1003 03dd 0C       		.uleb128 0xc
 1004 03de 00000000 		.4byte	.LASF47
 1005 03e2 05       		.byte	0x5
 1006 03e3 4A04     		.2byte	0x44a
 1007 03e5 3E030000 		.4byte	0x33e
 1008 03e9 10       		.uleb128 0x10
 1009 03ea 01       		.byte	0x1
 1010 03eb 32020000 		.4byte	.LASF58
 1011 03ef 01       		.byte	0x1
 1012 03f0 D4       		.byte	0xd4
 1013 03f1 01       		.byte	0x1
 1014 03f2 00000000 		.4byte	.LFB55
 1015 03f6 68000000 		.4byte	.LFE55
 1016 03fa 00000000 		.4byte	.LLST0
 1017 03fe 01       		.byte	0x1
 1018 03ff 11       		.uleb128 0x11
 1019 0400 01       		.byte	0x1
 1020 0401 84010000 		.4byte	.LASF59
 1021 0405 01       		.byte	0x1
 1022 0406 3201     		.2byte	0x132
 1023 0408 01       		.byte	0x1
 1024 0409 68000000 		.4byte	.LFB56
 1025 040d 40010000 		.4byte	.LFE56
 1026 0411 2C000000 		.4byte	.LLST1
 1027 0415 01       		.byte	0x1
 1028 0416 48040000 		.4byte	0x448
 1029 041a 12       		.uleb128 0x12
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 38


 1030 041b 746D7000 		.ascii	"tmp\000"
 1031 041f 01       		.byte	0x1
 1032 0420 3401     		.2byte	0x134
 1033 0422 B8000000 		.4byte	0xb8
 1034 0426 02       		.byte	0x2
 1035 0427 91       		.byte	0x91
 1036 0428 74       		.sleb128 -12
 1037 0429 13       		.uleb128 0x13
 1038 042a A5000000 		.4byte	.LASF48
 1039 042e 01       		.byte	0x1
 1040 042f 3401     		.2byte	0x134
 1041 0431 B8000000 		.4byte	0xb8
 1042 0435 02       		.byte	0x2
 1043 0436 91       		.byte	0x91
 1044 0437 70       		.sleb128 -16
 1045 0438 13       		.uleb128 0x13
 1046 0439 E1000000 		.4byte	.LASF49
 1047 043d 01       		.byte	0x1
 1048 043e 3401     		.2byte	0x134
 1049 0440 B8000000 		.4byte	0xb8
 1050 0444 02       		.byte	0x2
 1051 0445 91       		.byte	0x91
 1052 0446 6C       		.sleb128 -20
 1053 0447 00       		.byte	0
 1054 0448 14       		.uleb128 0x14
 1055 0449 8A020000 		.4byte	.LASF60
 1056 044d 01       		.byte	0x1
 1057 044e A301     		.2byte	0x1a3
 1058 0450 01       		.byte	0x1
 1059 0451 40010000 		.4byte	.LFB57
 1060 0455 4A010000 		.4byte	.LFE57
 1061 0459 64000000 		.4byte	.LLST2
 1062 045d 01       		.byte	0x1
 1063 045e 15       		.uleb128 0x15
 1064 045f D1000000 		.4byte	.LASF61
 1065 0463 01       		.byte	0x1
 1066 0464 DB03     		.2byte	0x3db
 1067 0466 01       		.byte	0x1
 1068 0467 4C010000 		.4byte	.LFB58
 1069 046b 4C020000 		.4byte	.LFE58
 1070 046f 90000000 		.4byte	.LLST3
 1071 0473 01       		.byte	0x1
 1072 0474 97040000 		.4byte	0x497
 1073 0478 13       		.uleb128 0x13
 1074 0479 2D010000 		.4byte	.LASF50
 1075 047d 01       		.byte	0x1
 1076 047e DD03     		.2byte	0x3dd
 1077 0480 CA000000 		.4byte	0xca
 1078 0484 02       		.byte	0x2
 1079 0485 91       		.byte	0x91
 1080 0486 74       		.sleb128 -12
 1081 0487 13       		.uleb128 0x13
 1082 0488 46000000 		.4byte	.LASF51
 1083 048c 01       		.byte	0x1
 1084 048d DD03     		.2byte	0x3dd
 1085 048f CA000000 		.4byte	0xca
 1086 0493 02       		.byte	0x2
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 39


 1087 0494 91       		.byte	0x91
 1088 0495 70       		.sleb128 -16
 1089 0496 00       		.byte	0
 1090 0497 16       		.uleb128 0x16
 1091 0498 F4020000 		.4byte	.LASF52
 1092 049c 04       		.byte	0x4
 1093 049d 8C04     		.2byte	0x48c
 1094 049f 89020000 		.4byte	0x289
 1095 04a3 01       		.byte	0x1
 1096 04a4 01       		.byte	0x1
 1097 04a5 17       		.uleb128 0x17
 1098 04a6 62020000 		.4byte	.LASF53
 1099 04aa 01       		.byte	0x1
 1100 04ab A2       		.byte	0xa2
 1101 04ac B8000000 		.4byte	0xb8
 1102 04b0 01       		.byte	0x1
 1103 04b1 05       		.byte	0x5
 1104 04b2 03       		.byte	0x3
 1105 04b3 00000000 		.4byte	SystemCoreClock
 1106 04b7 0A       		.uleb128 0xa
 1107 04b8 97000000 		.4byte	0x97
 1108 04bc C7040000 		.4byte	0x4c7
 1109 04c0 0B       		.uleb128 0xb
 1110 04c1 C3000000 		.4byte	0xc3
 1111 04c5 0F       		.byte	0xf
 1112 04c6 00       		.byte	0
 1113 04c7 17       		.uleb128 0x17
 1114 04c8 7C020000 		.4byte	.LASF54
 1115 04cc 01       		.byte	0x1
 1116 04cd A7       		.byte	0xa7
 1117 04ce D9040000 		.4byte	0x4d9
 1118 04d2 01       		.byte	0x1
 1119 04d3 05       		.byte	0x5
 1120 04d4 03       		.byte	0x3
 1121 04d5 00000000 		.4byte	AHBPrescTable
 1122 04d9 09       		.uleb128 0x9
 1123 04da DE040000 		.4byte	0x4de
 1124 04de 05       		.uleb128 0x5
 1125 04df B7040000 		.4byte	0x4b7
 1126 04e3 00       		.byte	0
 1127              		.section	.debug_abbrev,"",%progbits
 1128              	.Ldebug_abbrev0:
 1129 0000 01       		.uleb128 0x1
 1130 0001 11       		.uleb128 0x11
 1131 0002 01       		.byte	0x1
 1132 0003 25       		.uleb128 0x25
 1133 0004 0E       		.uleb128 0xe
 1134 0005 13       		.uleb128 0x13
 1135 0006 0B       		.uleb128 0xb
 1136 0007 03       		.uleb128 0x3
 1137 0008 0E       		.uleb128 0xe
 1138 0009 1B       		.uleb128 0x1b
 1139 000a 0E       		.uleb128 0xe
 1140 000b 11       		.uleb128 0x11
 1141 000c 01       		.uleb128 0x1
 1142 000d 12       		.uleb128 0x12
 1143 000e 01       		.uleb128 0x1
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 40


 1144 000f 10       		.uleb128 0x10
 1145 0010 06       		.uleb128 0x6
 1146 0011 00       		.byte	0
 1147 0012 00       		.byte	0
 1148 0013 02       		.uleb128 0x2
 1149 0014 24       		.uleb128 0x24
 1150 0015 00       		.byte	0
 1151 0016 0B       		.uleb128 0xb
 1152 0017 0B       		.uleb128 0xb
 1153 0018 3E       		.uleb128 0x3e
 1154 0019 0B       		.uleb128 0xb
 1155 001a 03       		.uleb128 0x3
 1156 001b 0E       		.uleb128 0xe
 1157 001c 00       		.byte	0
 1158 001d 00       		.byte	0
 1159 001e 03       		.uleb128 0x3
 1160 001f 16       		.uleb128 0x16
 1161 0020 00       		.byte	0
 1162 0021 03       		.uleb128 0x3
 1163 0022 0E       		.uleb128 0xe
 1164 0023 3A       		.uleb128 0x3a
 1165 0024 0B       		.uleb128 0xb
 1166 0025 3B       		.uleb128 0x3b
 1167 0026 0B       		.uleb128 0xb
 1168 0027 49       		.uleb128 0x49
 1169 0028 13       		.uleb128 0x13
 1170 0029 00       		.byte	0
 1171 002a 00       		.byte	0
 1172 002b 04       		.uleb128 0x4
 1173 002c 24       		.uleb128 0x24
 1174 002d 00       		.byte	0
 1175 002e 0B       		.uleb128 0xb
 1176 002f 0B       		.uleb128 0xb
 1177 0030 3E       		.uleb128 0x3e
 1178 0031 0B       		.uleb128 0xb
 1179 0032 03       		.uleb128 0x3
 1180 0033 08       		.uleb128 0x8
 1181 0034 00       		.byte	0
 1182 0035 00       		.byte	0
 1183 0036 05       		.uleb128 0x5
 1184 0037 35       		.uleb128 0x35
 1185 0038 00       		.byte	0
 1186 0039 49       		.uleb128 0x49
 1187 003a 13       		.uleb128 0x13
 1188 003b 00       		.byte	0
 1189 003c 00       		.byte	0
 1190 003d 06       		.uleb128 0x6
 1191 003e 13       		.uleb128 0x13
 1192 003f 01       		.byte	0x1
 1193 0040 0B       		.uleb128 0xb
 1194 0041 0B       		.uleb128 0xb
 1195 0042 3A       		.uleb128 0x3a
 1196 0043 0B       		.uleb128 0xb
 1197 0044 3B       		.uleb128 0x3b
 1198 0045 05       		.uleb128 0x5
 1199 0046 01       		.uleb128 0x1
 1200 0047 13       		.uleb128 0x13
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 41


 1201 0048 00       		.byte	0
 1202 0049 00       		.byte	0
 1203 004a 07       		.uleb128 0x7
 1204 004b 0D       		.uleb128 0xd
 1205 004c 00       		.byte	0
 1206 004d 03       		.uleb128 0x3
 1207 004e 0E       		.uleb128 0xe
 1208 004f 3A       		.uleb128 0x3a
 1209 0050 0B       		.uleb128 0xb
 1210 0051 3B       		.uleb128 0x3b
 1211 0052 05       		.uleb128 0x5
 1212 0053 49       		.uleb128 0x49
 1213 0054 13       		.uleb128 0x13
 1214 0055 38       		.uleb128 0x38
 1215 0056 0A       		.uleb128 0xa
 1216 0057 00       		.byte	0
 1217 0058 00       		.byte	0
 1218 0059 08       		.uleb128 0x8
 1219 005a 0D       		.uleb128 0xd
 1220 005b 00       		.byte	0
 1221 005c 03       		.uleb128 0x3
 1222 005d 08       		.uleb128 0x8
 1223 005e 3A       		.uleb128 0x3a
 1224 005f 0B       		.uleb128 0xb
 1225 0060 3B       		.uleb128 0x3b
 1226 0061 05       		.uleb128 0x5
 1227 0062 49       		.uleb128 0x49
 1228 0063 13       		.uleb128 0x13
 1229 0064 38       		.uleb128 0x38
 1230 0065 0A       		.uleb128 0xa
 1231 0066 00       		.byte	0
 1232 0067 00       		.byte	0
 1233 0068 09       		.uleb128 0x9
 1234 0069 26       		.uleb128 0x26
 1235 006a 00       		.byte	0
 1236 006b 49       		.uleb128 0x49
 1237 006c 13       		.uleb128 0x13
 1238 006d 00       		.byte	0
 1239 006e 00       		.byte	0
 1240 006f 0A       		.uleb128 0xa
 1241 0070 01       		.uleb128 0x1
 1242 0071 01       		.byte	0x1
 1243 0072 49       		.uleb128 0x49
 1244 0073 13       		.uleb128 0x13
 1245 0074 01       		.uleb128 0x1
 1246 0075 13       		.uleb128 0x13
 1247 0076 00       		.byte	0
 1248 0077 00       		.byte	0
 1249 0078 0B       		.uleb128 0xb
 1250 0079 21       		.uleb128 0x21
 1251 007a 00       		.byte	0
 1252 007b 49       		.uleb128 0x49
 1253 007c 13       		.uleb128 0x13
 1254 007d 2F       		.uleb128 0x2f
 1255 007e 0B       		.uleb128 0xb
 1256 007f 00       		.byte	0
 1257 0080 00       		.byte	0
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 42


 1258 0081 0C       		.uleb128 0xc
 1259 0082 16       		.uleb128 0x16
 1260 0083 00       		.byte	0
 1261 0084 03       		.uleb128 0x3
 1262 0085 0E       		.uleb128 0xe
 1263 0086 3A       		.uleb128 0x3a
 1264 0087 0B       		.uleb128 0xb
 1265 0088 3B       		.uleb128 0x3b
 1266 0089 05       		.uleb128 0x5
 1267 008a 49       		.uleb128 0x49
 1268 008b 13       		.uleb128 0x13
 1269 008c 00       		.byte	0
 1270 008d 00       		.byte	0
 1271 008e 0D       		.uleb128 0xd
 1272 008f 04       		.uleb128 0x4
 1273 0090 01       		.byte	0x1
 1274 0091 0B       		.uleb128 0xb
 1275 0092 0B       		.uleb128 0xb
 1276 0093 3A       		.uleb128 0x3a
 1277 0094 0B       		.uleb128 0xb
 1278 0095 3B       		.uleb128 0x3b
 1279 0096 05       		.uleb128 0x5
 1280 0097 01       		.uleb128 0x1
 1281 0098 13       		.uleb128 0x13
 1282 0099 00       		.byte	0
 1283 009a 00       		.byte	0
 1284 009b 0E       		.uleb128 0xe
 1285 009c 28       		.uleb128 0x28
 1286 009d 00       		.byte	0
 1287 009e 03       		.uleb128 0x3
 1288 009f 0E       		.uleb128 0xe
 1289 00a0 1C       		.uleb128 0x1c
 1290 00a1 0D       		.uleb128 0xd
 1291 00a2 00       		.byte	0
 1292 00a3 00       		.byte	0
 1293 00a4 0F       		.uleb128 0xf
 1294 00a5 28       		.uleb128 0x28
 1295 00a6 00       		.byte	0
 1296 00a7 03       		.uleb128 0x3
 1297 00a8 08       		.uleb128 0x8
 1298 00a9 1C       		.uleb128 0x1c
 1299 00aa 0D       		.uleb128 0xd
 1300 00ab 00       		.byte	0
 1301 00ac 00       		.byte	0
 1302 00ad 10       		.uleb128 0x10
 1303 00ae 2E       		.uleb128 0x2e
 1304 00af 00       		.byte	0
 1305 00b0 3F       		.uleb128 0x3f
 1306 00b1 0C       		.uleb128 0xc
 1307 00b2 03       		.uleb128 0x3
 1308 00b3 0E       		.uleb128 0xe
 1309 00b4 3A       		.uleb128 0x3a
 1310 00b5 0B       		.uleb128 0xb
 1311 00b6 3B       		.uleb128 0x3b
 1312 00b7 0B       		.uleb128 0xb
 1313 00b8 27       		.uleb128 0x27
 1314 00b9 0C       		.uleb128 0xc
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 43


 1315 00ba 11       		.uleb128 0x11
 1316 00bb 01       		.uleb128 0x1
 1317 00bc 12       		.uleb128 0x12
 1318 00bd 01       		.uleb128 0x1
 1319 00be 40       		.uleb128 0x40
 1320 00bf 06       		.uleb128 0x6
 1321 00c0 9642     		.uleb128 0x2116
 1322 00c2 0C       		.uleb128 0xc
 1323 00c3 00       		.byte	0
 1324 00c4 00       		.byte	0
 1325 00c5 11       		.uleb128 0x11
 1326 00c6 2E       		.uleb128 0x2e
 1327 00c7 01       		.byte	0x1
 1328 00c8 3F       		.uleb128 0x3f
 1329 00c9 0C       		.uleb128 0xc
 1330 00ca 03       		.uleb128 0x3
 1331 00cb 0E       		.uleb128 0xe
 1332 00cc 3A       		.uleb128 0x3a
 1333 00cd 0B       		.uleb128 0xb
 1334 00ce 3B       		.uleb128 0x3b
 1335 00cf 05       		.uleb128 0x5
 1336 00d0 27       		.uleb128 0x27
 1337 00d1 0C       		.uleb128 0xc
 1338 00d2 11       		.uleb128 0x11
 1339 00d3 01       		.uleb128 0x1
 1340 00d4 12       		.uleb128 0x12
 1341 00d5 01       		.uleb128 0x1
 1342 00d6 40       		.uleb128 0x40
 1343 00d7 06       		.uleb128 0x6
 1344 00d8 9742     		.uleb128 0x2117
 1345 00da 0C       		.uleb128 0xc
 1346 00db 01       		.uleb128 0x1
 1347 00dc 13       		.uleb128 0x13
 1348 00dd 00       		.byte	0
 1349 00de 00       		.byte	0
 1350 00df 12       		.uleb128 0x12
 1351 00e0 34       		.uleb128 0x34
 1352 00e1 00       		.byte	0
 1353 00e2 03       		.uleb128 0x3
 1354 00e3 08       		.uleb128 0x8
 1355 00e4 3A       		.uleb128 0x3a
 1356 00e5 0B       		.uleb128 0xb
 1357 00e6 3B       		.uleb128 0x3b
 1358 00e7 05       		.uleb128 0x5
 1359 00e8 49       		.uleb128 0x49
 1360 00e9 13       		.uleb128 0x13
 1361 00ea 02       		.uleb128 0x2
 1362 00eb 0A       		.uleb128 0xa
 1363 00ec 00       		.byte	0
 1364 00ed 00       		.byte	0
 1365 00ee 13       		.uleb128 0x13
 1366 00ef 34       		.uleb128 0x34
 1367 00f0 00       		.byte	0
 1368 00f1 03       		.uleb128 0x3
 1369 00f2 0E       		.uleb128 0xe
 1370 00f3 3A       		.uleb128 0x3a
 1371 00f4 0B       		.uleb128 0xb
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 44


 1372 00f5 3B       		.uleb128 0x3b
 1373 00f6 05       		.uleb128 0x5
 1374 00f7 49       		.uleb128 0x49
 1375 00f8 13       		.uleb128 0x13
 1376 00f9 02       		.uleb128 0x2
 1377 00fa 0A       		.uleb128 0xa
 1378 00fb 00       		.byte	0
 1379 00fc 00       		.byte	0
 1380 00fd 14       		.uleb128 0x14
 1381 00fe 2E       		.uleb128 0x2e
 1382 00ff 00       		.byte	0
 1383 0100 03       		.uleb128 0x3
 1384 0101 0E       		.uleb128 0xe
 1385 0102 3A       		.uleb128 0x3a
 1386 0103 0B       		.uleb128 0xb
 1387 0104 3B       		.uleb128 0x3b
 1388 0105 05       		.uleb128 0x5
 1389 0106 27       		.uleb128 0x27
 1390 0107 0C       		.uleb128 0xc
 1391 0108 11       		.uleb128 0x11
 1392 0109 01       		.uleb128 0x1
 1393 010a 12       		.uleb128 0x12
 1394 010b 01       		.uleb128 0x1
 1395 010c 40       		.uleb128 0x40
 1396 010d 06       		.uleb128 0x6
 1397 010e 9642     		.uleb128 0x2116
 1398 0110 0C       		.uleb128 0xc
 1399 0111 00       		.byte	0
 1400 0112 00       		.byte	0
 1401 0113 15       		.uleb128 0x15
 1402 0114 2E       		.uleb128 0x2e
 1403 0115 01       		.byte	0x1
 1404 0116 03       		.uleb128 0x3
 1405 0117 0E       		.uleb128 0xe
 1406 0118 3A       		.uleb128 0x3a
 1407 0119 0B       		.uleb128 0xb
 1408 011a 3B       		.uleb128 0x3b
 1409 011b 05       		.uleb128 0x5
 1410 011c 27       		.uleb128 0x27
 1411 011d 0C       		.uleb128 0xc
 1412 011e 11       		.uleb128 0x11
 1413 011f 01       		.uleb128 0x1
 1414 0120 12       		.uleb128 0x12
 1415 0121 01       		.uleb128 0x1
 1416 0122 40       		.uleb128 0x40
 1417 0123 06       		.uleb128 0x6
 1418 0124 9742     		.uleb128 0x2117
 1419 0126 0C       		.uleb128 0xc
 1420 0127 01       		.uleb128 0x1
 1421 0128 13       		.uleb128 0x13
 1422 0129 00       		.byte	0
 1423 012a 00       		.byte	0
 1424 012b 16       		.uleb128 0x16
 1425 012c 34       		.uleb128 0x34
 1426 012d 00       		.byte	0
 1427 012e 03       		.uleb128 0x3
 1428 012f 0E       		.uleb128 0xe
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 45


 1429 0130 3A       		.uleb128 0x3a
 1430 0131 0B       		.uleb128 0xb
 1431 0132 3B       		.uleb128 0x3b
 1432 0133 05       		.uleb128 0x5
 1433 0134 49       		.uleb128 0x49
 1434 0135 13       		.uleb128 0x13
 1435 0136 3F       		.uleb128 0x3f
 1436 0137 0C       		.uleb128 0xc
 1437 0138 3C       		.uleb128 0x3c
 1438 0139 0C       		.uleb128 0xc
 1439 013a 00       		.byte	0
 1440 013b 00       		.byte	0
 1441 013c 17       		.uleb128 0x17
 1442 013d 34       		.uleb128 0x34
 1443 013e 00       		.byte	0
 1444 013f 03       		.uleb128 0x3
 1445 0140 0E       		.uleb128 0xe
 1446 0141 3A       		.uleb128 0x3a
 1447 0142 0B       		.uleb128 0xb
 1448 0143 3B       		.uleb128 0x3b
 1449 0144 0B       		.uleb128 0xb
 1450 0145 49       		.uleb128 0x49
 1451 0146 13       		.uleb128 0x13
 1452 0147 3F       		.uleb128 0x3f
 1453 0148 0C       		.uleb128 0xc
 1454 0149 02       		.uleb128 0x2
 1455 014a 0A       		.uleb128 0xa
 1456 014b 00       		.byte	0
 1457 014c 00       		.byte	0
 1458 014d 00       		.byte	0
 1459              		.section	.debug_loc,"",%progbits
 1460              	.Ldebug_loc0:
 1461              	.LLST0:
 1462 0000 00000000 		.4byte	.LFB55-.Ltext0
 1463 0004 02000000 		.4byte	.LCFI0-.Ltext0
 1464 0008 0200     		.2byte	0x2
 1465 000a 7D       		.byte	0x7d
 1466 000b 00       		.sleb128 0
 1467 000c 02000000 		.4byte	.LCFI0-.Ltext0
 1468 0010 04000000 		.4byte	.LCFI1-.Ltext0
 1469 0014 0200     		.2byte	0x2
 1470 0016 7D       		.byte	0x7d
 1471 0017 08       		.sleb128 8
 1472 0018 04000000 		.4byte	.LCFI1-.Ltext0
 1473 001c 68000000 		.4byte	.LFE55-.Ltext0
 1474 0020 0200     		.2byte	0x2
 1475 0022 77       		.byte	0x77
 1476 0023 08       		.sleb128 8
 1477 0024 00000000 		.4byte	0
 1478 0028 00000000 		.4byte	0
 1479              	.LLST1:
 1480 002c 68000000 		.4byte	.LFB56-.Ltext0
 1481 0030 6A000000 		.4byte	.LCFI2-.Ltext0
 1482 0034 0200     		.2byte	0x2
 1483 0036 7D       		.byte	0x7d
 1484 0037 00       		.sleb128 0
 1485 0038 6A000000 		.4byte	.LCFI2-.Ltext0
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 46


 1486 003c 6C000000 		.4byte	.LCFI3-.Ltext0
 1487 0040 0200     		.2byte	0x2
 1488 0042 7D       		.byte	0x7d
 1489 0043 04       		.sleb128 4
 1490 0044 6C000000 		.4byte	.LCFI3-.Ltext0
 1491 0048 6E000000 		.4byte	.LCFI4-.Ltext0
 1492 004c 0200     		.2byte	0x2
 1493 004e 7D       		.byte	0x7d
 1494 004f 18       		.sleb128 24
 1495 0050 6E000000 		.4byte	.LCFI4-.Ltext0
 1496 0054 40010000 		.4byte	.LFE56-.Ltext0
 1497 0058 0200     		.2byte	0x2
 1498 005a 77       		.byte	0x77
 1499 005b 18       		.sleb128 24
 1500 005c 00000000 		.4byte	0
 1501 0060 00000000 		.4byte	0
 1502              	.LLST2:
 1503 0064 40010000 		.4byte	.LFB57-.Ltext0
 1504 0068 42010000 		.4byte	.LCFI5-.Ltext0
 1505 006c 0200     		.2byte	0x2
 1506 006e 7D       		.byte	0x7d
 1507 006f 00       		.sleb128 0
 1508 0070 42010000 		.4byte	.LCFI5-.Ltext0
 1509 0074 44010000 		.4byte	.LCFI6-.Ltext0
 1510 0078 0200     		.2byte	0x2
 1511 007a 7D       		.byte	0x7d
 1512 007b 08       		.sleb128 8
 1513 007c 44010000 		.4byte	.LCFI6-.Ltext0
 1514 0080 4A010000 		.4byte	.LFE57-.Ltext0
 1515 0084 0200     		.2byte	0x2
 1516 0086 77       		.byte	0x77
 1517 0087 08       		.sleb128 8
 1518 0088 00000000 		.4byte	0
 1519 008c 00000000 		.4byte	0
 1520              	.LLST3:
 1521 0090 4C010000 		.4byte	.LFB58-.Ltext0
 1522 0094 4E010000 		.4byte	.LCFI7-.Ltext0
 1523 0098 0200     		.2byte	0x2
 1524 009a 7D       		.byte	0x7d
 1525 009b 00       		.sleb128 0
 1526 009c 4E010000 		.4byte	.LCFI7-.Ltext0
 1527 00a0 50010000 		.4byte	.LCFI8-.Ltext0
 1528 00a4 0200     		.2byte	0x2
 1529 00a6 7D       		.byte	0x7d
 1530 00a7 04       		.sleb128 4
 1531 00a8 50010000 		.4byte	.LCFI8-.Ltext0
 1532 00ac 52010000 		.4byte	.LCFI9-.Ltext0
 1533 00b0 0200     		.2byte	0x2
 1534 00b2 7D       		.byte	0x7d
 1535 00b3 10       		.sleb128 16
 1536 00b4 52010000 		.4byte	.LCFI9-.Ltext0
 1537 00b8 4C020000 		.4byte	.LFE58-.Ltext0
 1538 00bc 0200     		.2byte	0x2
 1539 00be 77       		.byte	0x77
 1540 00bf 10       		.sleb128 16
 1541 00c0 00000000 		.4byte	0
 1542 00c4 00000000 		.4byte	0
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 47


 1543              		.section	.debug_aranges,"",%progbits
 1544 0000 1C000000 		.4byte	0x1c
 1545 0004 0200     		.2byte	0x2
 1546 0006 00000000 		.4byte	.Ldebug_info0
 1547 000a 04       		.byte	0x4
 1548 000b 00       		.byte	0
 1549 000c 0000     		.2byte	0
 1550 000e 0000     		.2byte	0
 1551 0010 00000000 		.4byte	.Ltext0
 1552 0014 4C020000 		.4byte	.Letext0-.Ltext0
 1553 0018 00000000 		.4byte	0
 1554 001c 00000000 		.4byte	0
 1555              		.section	.debug_line,"",%progbits
 1556              	.Ldebug_line0:
 1557 0000 75010000 		.section	.debug_str,"MS",%progbits,1
 1557      0200F800 
 1557      00000201 
 1557      FB0E0D00 
 1557      01010101 
 1558              	.LASF47:
 1559 0000 5243435F 		.ascii	"RCC_TypeDef\000"
 1559      54797065 
 1559      44656600 
 1560              	.LASF42:
 1561 000c 41504231 		.ascii	"APB1RSTR\000"
 1561      52535452 
 1561      00
 1562              	.LASF45:
 1563 0015 41504231 		.ascii	"APB1ENR\000"
 1563      454E5200 
 1564              	.LASF30:
 1565 001d 49534152 		.ascii	"ISAR\000"
 1565      00
 1566              	.LASF17:
 1567 0022 73697A65 		.ascii	"sizetype\000"
 1567      74797065 
 1567      00
 1568              	.LASF46:
 1569 002b 42444352 		.ascii	"BDCR\000"
 1569      00
 1570              	.LASF8:
 1571 0030 5F5F7569 		.ascii	"__uint32_t\000"
 1571      6E743332 
 1571      5F7400
 1572              	.LASF4:
 1573 003b 5F5F7569 		.ascii	"__uint16_t\000"
 1573      6E743136 
 1573      5F7400
 1574              	.LASF51:
 1575 0046 48534553 		.ascii	"HSEStatus\000"
 1575      74617475 
 1575      7300
 1576              	.LASF18:
 1577 0050 43505549 		.ascii	"CPUID\000"
 1577      4400
 1578              	.LASF35:
 1579 0056 4B455952 		.ascii	"KEYR\000"
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 48


 1579      00
 1580              	.LASF31:
 1581 005b 52455345 		.ascii	"RESERVED0\000"
 1581      52564544 
 1581      3000
 1582              	.LASF40:
 1583 0065 43464752 		.ascii	"CFGR\000"
 1583      00
 1584              	.LASF13:
 1585 006a 75696E74 		.ascii	"uint8_t\000"
 1585      385F7400 
 1586              	.LASF2:
 1587 0072 73686F72 		.ascii	"short int\000"
 1587      7420696E 
 1587      7400
 1588              	.LASF19:
 1589 007c 49435352 		.ascii	"ICSR\000"
 1589      00
 1590              	.LASF36:
 1591 0081 4F50544B 		.ascii	"OPTKEYR\000"
 1591      45595200 
 1592              	.LASF10:
 1593 0089 6C6F6E67 		.ascii	"long long int\000"
 1593      206C6F6E 
 1593      6720696E 
 1593      7400
 1594              	.LASF27:
 1595 0097 42464152 		.ascii	"BFAR\000"
 1595      00
 1596              	.LASF7:
 1597 009c 6C6F6E67 		.ascii	"long int\000"
 1597      20696E74 
 1597      00
 1598              	.LASF48:
 1599 00a5 706C6C6D 		.ascii	"pllmull\000"
 1599      756C6C00 
 1600              	.LASF43:
 1601 00ad 41484245 		.ascii	"AHBENR\000"
 1601      4E5200
 1602              	.LASF41:
 1603 00b4 41504232 		.ascii	"APB2RSTR\000"
 1603      52535452 
 1603      00
 1604              	.LASF3:
 1605 00bd 5F5F7569 		.ascii	"__uint8_t\000"
 1605      6E74385F 
 1605      7400
 1606              	.LASF38:
 1607 00c7 57525052 		.ascii	"WRPR\000"
 1607      00
 1608              	.LASF23:
 1609 00cc 43465352 		.ascii	"CFSR\000"
 1609      00
 1610              	.LASF61:
 1611 00d1 53657453 		.ascii	"SetSysClockTo72\000"
 1611      7973436C 
 1611      6F636B54 
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 49


 1611      6F373200 
 1612              	.LASF49:
 1613 00e1 706C6C73 		.ascii	"pllsource\000"
 1613      6F757263 
 1613      6500
 1614              	.LASF57:
 1615 00eb 2F70726F 		.ascii	"/projects/emb4fun-STM32Test/\000"
 1615      6A656374 
 1615      732F656D 
 1615      62346675 
 1615      6E2D5354 
 1616              	.LASF1:
 1617 0108 756E7369 		.ascii	"unsigned char\000"
 1617      676E6564 
 1617      20636861 
 1617      7200
 1618              	.LASF21:
 1619 0116 41495243 		.ascii	"AIRCR\000"
 1619      5200
 1620              	.LASF33:
 1621 011c 5343425F 		.ascii	"SCB_Type\000"
 1621      54797065 
 1621      00
 1622              	.LASF44:
 1623 0125 41504232 		.ascii	"APB2ENR\000"
 1623      454E5200 
 1624              	.LASF50:
 1625 012d 53746172 		.ascii	"StartUpCounter\000"
 1625      74557043 
 1625      6F756E74 
 1625      657200
 1626              	.LASF0:
 1627 013c 7369676E 		.ascii	"signed char\000"
 1627      65642063 
 1627      68617200 
 1628              	.LASF11:
 1629 0148 6C6F6E67 		.ascii	"long long unsigned int\000"
 1629      206C6F6E 
 1629      6720756E 
 1629      7369676E 
 1629      65642069 
 1630              	.LASF16:
 1631 015f 75696E74 		.ascii	"uint32_t\000"
 1631      33325F74 
 1631      00
 1632              	.LASF12:
 1633 0168 756E7369 		.ascii	"unsigned int\000"
 1633      676E6564 
 1633      20696E74 
 1633      00
 1634              	.LASF14:
 1635 0175 75696E74 		.ascii	"uint16_t\000"
 1635      31365F74 
 1635      00
 1636              	.LASF22:
 1637 017e 53484353 		.ascii	"SHCSR\000"
 1637      5200
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 50


 1638              	.LASF59:
 1639 0184 53797374 		.ascii	"SystemCoreClockUpdate\000"
 1639      656D436F 
 1639      7265436C 
 1639      6F636B55 
 1639      70646174 
 1640              	.LASF26:
 1641 019a 4D4D4641 		.ascii	"MMFAR\000"
 1641      5200
 1642              	.LASF55:
 1643 01a0 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1643      4320342E 
 1643      382E3420 
 1643      32303134 
 1643      30353236 
 1644 01d3 616E6368 		.ascii	"anch revision 211358] -mthumb -mcpu=cortex-m3 -mflo"
 1644      20726576 
 1644      6973696F 
 1644      6E203231 
 1644      31333538 
 1645 0206 61742D61 		.ascii	"at-abi=soft -mfpu=fpv4-sp-d16 -gdwarf-2 -O0\000"
 1645      62693D73 
 1645      6F667420 
 1645      2D6D6670 
 1645      753D6670 
 1646              	.LASF58:
 1647 0232 53797374 		.ascii	"SystemInit\000"
 1647      656D496E 
 1647      697400
 1648              	.LASF5:
 1649 023d 73686F72 		.ascii	"short unsigned int\000"
 1649      7420756E 
 1649      7369676E 
 1649      65642069 
 1649      6E7400
 1650              	.LASF20:
 1651 0250 56544F52 		.ascii	"VTOR\000"
 1651      00
 1652              	.LASF15:
 1653 0255 696E7433 		.ascii	"int32_t\000"
 1653      325F7400 
 1654              	.LASF25:
 1655 025d 44465352 		.ascii	"DFSR\000"
 1655      00
 1656              	.LASF53:
 1657 0262 53797374 		.ascii	"SystemCoreClock\000"
 1657      656D436F 
 1657      7265436C 
 1657      6F636B00 
 1658              	.LASF24:
 1659 0272 48465352 		.ascii	"HFSR\000"
 1659      00
 1660              	.LASF29:
 1661 0277 4D4D4652 		.ascii	"MMFR\000"
 1661      00
 1662              	.LASF54:
 1663 027c 41484250 		.ascii	"AHBPrescTable\000"
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 51


 1663      72657363 
 1663      5461626C 
 1663      6500
 1664              	.LASF60:
 1665 028a 53657453 		.ascii	"SetSysClock\000"
 1665      7973436C 
 1665      6F636B00 
 1666              	.LASF56:
 1667 0296 636D7369 		.ascii	"cmsis/device/system_stm32f10x.c\000"
 1667      732F6465 
 1667      76696365 
 1667      2F737973 
 1667      74656D5F 
 1668              	.LASF9:
 1669 02b6 6C6F6E67 		.ascii	"long unsigned int\000"
 1669      20756E73 
 1669      69676E65 
 1669      6420696E 
 1669      7400
 1670              	.LASF6:
 1671 02c8 5F5F696E 		.ascii	"__int32_t\000"
 1671      7433325F 
 1671      7400
 1672              	.LASF34:
 1673 02d2 52455345 		.ascii	"RESET\000"
 1673      5400
 1674              	.LASF28:
 1675 02d8 41465352 		.ascii	"AFSR\000"
 1675      00
 1676              	.LASF37:
 1677 02dd 52455345 		.ascii	"RESERVED\000"
 1677      52564544 
 1677      00
 1678              	.LASF39:
 1679 02e6 464C4153 		.ascii	"FLASH_TypeDef\000"
 1679      485F5479 
 1679      70654465 
 1679      6600
 1680              	.LASF52:
 1681 02f4 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1681      52784275 
 1681      66666572 
 1681      00
 1682              	.LASF32:
 1683 0301 43504143 		.ascii	"CPACR\000"
 1683      5200
 1684              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
ARM GAS  /var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s 			page 52


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f10x.c
/var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s:56     .data:0000000000000000 SystemCoreClock
/var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s:53     .data:0000000000000000 $d
/var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s:62     .data:0000000000000004 AHBPrescTable
/var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s:80     .text:0000000000000000 $t
/var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s:85     .text:0000000000000000 SystemInit
/var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s:305    .text:0000000000000140 SetSysClock
/var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s:147    .text:000000000000005c $d
/var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s:153    .text:0000000000000068 $t
/var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s:158    .text:0000000000000068 SystemCoreClockUpdate
/var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s:293    .text:000000000000012c $d
/var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s:301    .text:0000000000000140 $t
/var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s:330    .text:000000000000014c SetSysClockTo72
/var/folders/4x/ps5lfsx11bd3d9s8dj92yrt80000gn/T//cc5DktAE.s:487    .text:0000000000000244 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
